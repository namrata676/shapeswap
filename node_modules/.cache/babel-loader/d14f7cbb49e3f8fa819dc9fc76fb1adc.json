{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/components/SuspenseWithChunkError/index.tsx\";\nimport React, { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SuspenseWithChunkError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error) {\n    var _window$history$state;\n    const isJsChunkLoadError = error.name === 'ChunkLoadError';\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED';\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError;\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!((_window$history$state = window.history.state) !== null && _window$history$state !== void 0 && _window$history$state.isRecoveringFromChunkError);\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = {\n        ...window.history.state,\n        isRecoveringFromChunkError: true\n      };\n      window.history.replaceState(nextState, '');\n      window.location.reload();\n      return;\n    }\n    throw error;\n  }\n  render() {\n    const {\n      hasError\n    } = this.state;\n    const {\n      fallback\n    } = this.props;\n    if (hasError) {\n      return fallback;\n    }\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default SuspenseWithChunkError;","map":{"version":3,"names":["React","Suspense","jsxDEV","_jsxDEV","SuspenseWithChunkError","Component","constructor","props","state","hasError","getDerivedStateFromError","componentDidCatch","error","_window$history$state","isJsChunkLoadError","name","isCssChunkLoadError","code","isChunkLoadError","isRecoveringFromChunkError","window","history","nextState","replaceState","location","reload","render","fallback","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/components/SuspenseWithChunkError/index.tsx"],"sourcesContent":["import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAuB,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMtD,MAAMC,sBAAsB,SAASJ,KAAK,CAACK,SAAS,CAAuB;EACzEC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAClC;EAEA,OAAOC,wBAAwBA,CAAA,EAAG;IAChC;IACA,OAAO;MAAED,QAAQ,EAAE;IAAK,CAAC;EAC3B;EAEAE,iBAAiBA,CAACC,KAAK,EAAE;IAAA,IAAAC,qBAAA;IACvB,MAAMC,kBAAkB,GAAGF,KAAK,CAACG,IAAI,KAAK,gBAAgB;IAC1D,MAAMC,mBAAmB,GAAGJ,KAAK,CAACK,IAAI,KAAK,uBAAuB;IAClE,MAAMC,gBAAgB,GAAGJ,kBAAkB,IAAIE,mBAAmB;;IAElE;IACA;IACA,MAAMG,0BAA0B,GAAG,CAAC,GAAAN,qBAAA,GAACO,MAAM,CAACC,OAAO,CAACb,KAAK,cAAAK,qBAAA,eAApBA,qBAAA,CAAsBM,0BAA0B;;IAErF;IACA,IAAID,gBAAgB,IAAI,CAACC,0BAA0B,EAAE;MACnD,MAAMG,SAAS,GAAG;QAAE,GAAGF,MAAM,CAACC,OAAO,CAACb,KAAK;QAAEW,0BAA0B,EAAE;MAAK,CAAC;MAC/EC,MAAM,CAACC,OAAO,CAACE,YAAY,CAACD,SAAS,EAAE,EAAE,CAAC;MAC1CF,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC;MACxB;IACF;IAEA,MAAMb,KAAK;EACb;EAEAc,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEjB;IAAS,CAAC,GAAG,IAAI,CAACD,KAAK;IAC/B,MAAM;MAAEmB;IAAS,CAAC,GAAG,IAAI,CAACpB,KAAK;IAE/B,IAAIE,QAAQ,EAAE;MACZ,OAAOkB,QAAQ;IACjB;IAEA,oBAAOxB,OAAA,CAACF,QAAQ;MAAA,GAAK,IAAI,CAACM;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;AACF;AAEA,eAAe3B,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module"}