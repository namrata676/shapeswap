{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{request,gql}from'graphql-request';import{campaignMap}from'config/constants/campaigns';import{GRAPH_API_PROFILE}from'config/constants/endpoints';import{getAchievementTitle,getAchievementDescription}from'utils/achievements';/**\n * Gets all user point increase events on the profile filtered by wallet address\n */export const getUserPointIncreaseEvents=async account=>{try{const{user}=await request(GRAPH_API_PROFILE,gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n        query getUserPointIncreaseEvents($account: ID!) {\\n          user(id: $account) {\\n            points {\\n              id\\n              campaignId\\n              points\\n            }\\n          }\\n        }\\n      \"]))),{account:account.toLowerCase()});return user.points;}catch(error){return null;}};/**\n * Gets all user point increase events and adds achievement meta\n */export const getAchievements=async account=>{const pointIncreaseEvents=await getUserPointIncreaseEvents(account);if(!pointIncreaseEvents){return[];}return pointIncreaseEvents.reduce((accum,userPoint)=>{if(!campaignMap.has(userPoint.campaignId)){return accum;}const campaignMeta=campaignMap.get(userPoint.campaignId);return[...accum,{id:userPoint.campaignId,type:campaignMeta.type,address:userPoint.id,title:getAchievementTitle(campaignMeta),description:getAchievementDescription(campaignMeta),badge:campaignMeta.badge,points:Number(userPoint.points)}];},[]);};","map":{"version":3,"names":["request","gql","campaignMap","GRAPH_API_PROFILE","getAchievementTitle","getAchievementDescription","getUserPointIncreaseEvents","account","user","_templateObject","_taggedTemplateLiteral","toLowerCase","points","error","getAchievements","pointIncreaseEvents","reduce","accum","userPoint","has","campaignId","campaignMeta","get","id","type","address","title","description","badge","Number"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/achievements/helpers.ts"],"sourcesContent":["import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n"],"mappings":"yKAAA,OAASA,OAAO,CAAEC,GAAG,KAAQ,iBAAiB,CAC9C,OAASC,WAAW,KAAQ,4BAA4B,CACxD,OAASC,iBAAiB,KAAQ,4BAA4B,CAE9D,OAASC,mBAAmB,CAAEC,yBAAyB,KAAQ,oBAAoB,CAQnF;AACA;AACA,GACA,MAAO,MAAM,CAAAC,0BAA0B,CAAG,KAAO,CAAAC,OAAe,EAAwC,CACtG,GAAI,CACF,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAR,OAAO,CAC5BG,iBAAiB,CACjBF,GAAG,CAAAQ,eAAA,GAAAA,eAAA,CAAAC,sBAAA,2OAWH,CACEH,OAAO,CAAEA,OAAO,CAACI,WAAW,CAAC,CAC/B,CACF,CAAC,CAED,MAAO,CAAAH,IAAI,CAACI,MAAM,CACpB,CAAE,MAAOC,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAC,eAAe,CAAG,KAAO,CAAAP,OAAe,EAA6B,CAChF,KAAM,CAAAQ,mBAAmB,CAAG,KAAM,CAAAT,0BAA0B,CAACC,OAAO,CAAC,CAErE,GAAI,CAACQ,mBAAmB,CAAE,CACxB,MAAO,EAAE,CACX,CAEA,MAAO,CAAAA,mBAAmB,CAACC,MAAM,CAAC,CAACC,KAAK,CAAEC,SAAS,GAAK,CACtD,GAAI,CAAChB,WAAW,CAACiB,GAAG,CAACD,SAAS,CAACE,UAAU,CAAC,CAAE,CAC1C,MAAO,CAAAH,KAAK,CACd,CAEA,KAAM,CAAAI,YAAY,CAAGnB,WAAW,CAACoB,GAAG,CAACJ,SAAS,CAACE,UAAU,CAAC,CAE1D,MAAO,CACL,GAAGH,KAAK,CACR,CACEM,EAAE,CAAEL,SAAS,CAACE,UAAU,CACxBI,IAAI,CAAEH,YAAY,CAACG,IAAI,CACvBC,OAAO,CAAEP,SAAS,CAACK,EAAE,CACrBG,KAAK,CAAEtB,mBAAmB,CAACiB,YAAY,CAAC,CACxCM,WAAW,CAAEtB,yBAAyB,CAACgB,YAAY,CAAC,CACpDO,KAAK,CAAEP,YAAY,CAACO,KAAK,CACzBhB,MAAM,CAAEiB,MAAM,CAACX,SAAS,CAACN,MAAM,CACjC,CAAC,CACF,CACH,CAAC,CAAE,EAAE,CAAC,CACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}