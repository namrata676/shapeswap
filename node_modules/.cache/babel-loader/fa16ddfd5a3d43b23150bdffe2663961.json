{"ast":null,"code":"import { Pair, Token } from 'toolkit/sdk';\nimport flatMap from 'lodash/flatMap';\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { addSerializedPair, addSerializedToken, removeSerializedToken, updateUserDeadline, updateUserExpertMode, updateUserSlippageTolerance, updateUserSingleHopOnly, muteAudio, unmuteAudio, toggleTheme as toggleThemeAction } from '../actions';\nimport { serializeToken, deserializeToken } from './helpers';\nexport function useAudioModeManager() {\n  const dispatch = useDispatch();\n  const audioPlay = useSelector(state => state.user.audioPlay);\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio());\n    } else {\n      dispatch(unmuteAudio());\n    }\n  }, [audioPlay, dispatch]);\n  return [audioPlay, toggleSetAudioMode];\n}\nexport function useIsExpertMode() {\n  return useSelector(state => state.user.userExpertMode);\n}\nexport function useExpertModeManager() {\n  const dispatch = useDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\nexport function useThemeManager() {\n  const dispatch = useDispatch();\n  const isDark = useSelector(state => state.user.isDark);\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction());\n  }, [dispatch]);\n  return [isDark, toggleTheme];\n}\nexport function useUserSingleHopOnly() {\n  const dispatch = useDispatch();\n  const singleHopOnly = useSelector(state => state.user.userSingleHopOnly);\n  const setSingleHopOnly = useCallback(newSingleHopOnly => {\n    dispatch(updateUserSingleHopOnly({\n      userSingleHopOnly: newSingleHopOnly\n    }));\n  }, [dispatch]);\n  return [singleHopOnly, setSingleHopOnly];\n}\nexport function useUserSlippageTolerance() {\n  const dispatch = useDispatch();\n  const userSlippageTolerance = useSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const setUserSlippageTolerance = useCallback(slippage => {\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance: slippage\n    }));\n  }, [dispatch]);\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\nexport function useUserTransactionTTL() {\n  const dispatch = useDispatch();\n  const userDeadline = useSelector(state => {\n    return state.user.userDeadline;\n  });\n  const setUserDeadline = useCallback(deadline => {\n    dispatch(updateUserDeadline({\n      userDeadline: deadline\n    }));\n  }, [dispatch]);\n  return [userDeadline, setUserDeadline];\n}\nexport function useAddUserToken() {\n  const dispatch = useDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\nexport function useRemoveUserAddedToken() {\n  const dispatch = useDispatch();\n  return useCallback((chainId, address) => {\n    dispatch(removeSerializedToken({\n      chainId,\n      address\n    }));\n  }, [dispatch]);\n}\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\nexport function usePairAdder() {\n  const dispatch = useDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken(_ref) {\n  let [tokenA, tokenB] = _ref;\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs');\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tokens = useAllTokens();\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => {\n    var _PINNED_PAIRS$chainId;\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]);\n\n  // pairs for every token against every base\n  const generatedPairs = useMemo(() => chainId ? flatMap(Object.keys(tokens), tokenAddress => {\n    var _BASES_TO_TRACK_LIQUI;\n    const token = tokens[tokenAddress];\n    // for each token on the current chain,\n    return (\n      // loop though all bases on the current chain\n      ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : [] // to construct pairs of the given token with each base\n      ).map(base => {\n        if (base.address === token.address) {\n          return null;\n        }\n        return [base, token];\n      }).filter(p => p !== null)\n    );\n  }) : [], [tokens, chainId]);\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector(_ref2 => {\n    let {\n      user: {\n        pairs\n      }\n    } = _ref2;\n    return pairs;\n  });\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, _ref3) => {\n      let [tokenA, tokenB] = _ref3;\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(key => keyed[key]);\n  }, [combinedList]);\n}","map":{"version":3,"names":["Pair","Token","flatMap","useCallback","useMemo","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","removeSerializedToken","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","updateUserSingleHopOnly","muteAudio","unmuteAudio","toggleTheme","toggleThemeAction","serializeToken","deserializeToken","useAudioModeManager","dispatch","audioPlay","state","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","slippage","useUserTransactionTTL","userDeadline","setUserDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","chainId","address","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","tokens","pinnedPairs","generatedPairs","Object","keys","tokenAddress","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/user/hooks/index.tsx"],"sourcesContent":["import { Pair, Token } from 'toolkit/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme as toggleThemeAction,\n} from '../actions'\nimport { serializeToken, deserializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}