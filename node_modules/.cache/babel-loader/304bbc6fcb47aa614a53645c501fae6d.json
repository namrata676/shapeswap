{"ast":null,"code":"import React,{useMemo}from'react';import ReactDOM from'react-dom';import useActiveWeb3React from'./hooks/useActiveWeb3React';import{BLOCKED_ADDRESSES}from'./config/constants';import ApplicationUpdater from'./state/application/updater';import ListsUpdater from'./state/lists/updater';import MulticallUpdater from'./state/multicall/updater';import TransactionUpdater from'./state/transactions/updater';import App from'./App';import Providers from'./Providers';import'./HomePageFinal/assets/scss/style.scss';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Updaters(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ListsUpdater,{}),/*#__PURE__*/_jsx(ApplicationUpdater,{}),/*#__PURE__*/_jsx(TransactionUpdater,{}),/*#__PURE__*/_jsx(MulticallUpdater,{})]});}function Blocklist(_ref){let{children}=_ref;const{account}=useActiveWeb3React();// const [account, setAccount] = useState(\"\")\nconsole.log(\"blocklist@@@\",account);//   useEffect(() => {\n//  console.log(\"blocklistenter\")\n//   const account1 = localStorage.getItem(\"account\")\n//   console.log(\"blocklist1\",account1)\n//   if(account1 !== undefined){\n//    setAccount(account1)\n//    console.log(\"blocklist2\",account1)\n//   } else {\n//     localStorage.setItem(\"account\",accountFinal)\n//     setAccount(accountFinal)\n//     console.log(\"blocklist3\",accountFinal)\n//   }\n//   },[accountFinal])\nconst blocked=useMemo(()=>Boolean(account&&BLOCKED_ADDRESSES.indexOf(account)!==-1),[account]);if(blocked){return/*#__PURE__*/_jsx(\"div\",{children:\"Blocked address\"});}return/*#__PURE__*/_jsx(_Fragment,{children:children});}ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Blocklist,{children:/*#__PURE__*/_jsxs(Providers,{children:[/*#__PURE__*/_jsx(Updaters,{}),/*#__PURE__*/_jsx(App,{})]})})}),document.getElementById('root'));","map":{"version":3,"names":["React","useMemo","ReactDOM","useActiveWeb3React","BLOCKED_ADDRESSES","ApplicationUpdater","ListsUpdater","MulticallUpdater","TransactionUpdater","App","Providers","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Updaters","children","Blocklist","_ref","account","console","log","blocked","Boolean","indexOf","render","StrictMode","document","getElementById"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/index.tsx"],"sourcesContent":["import React, { useMemo, ReactNode, useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\nimport './HomePageFinal/assets/scss/style.scss'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n // const [account, setAccount] = useState(\"\")\n\n  console.log(\"blocklist@@@\",account)\n\n\n//   useEffect(() => {\n//  console.log(\"blocklistenter\")\n//   const account1 = localStorage.getItem(\"account\")\n//   console.log(\"blocklist1\",account1)\n//   if(account1 !== undefined){\n//    setAccount(account1)\n//    console.log(\"blocklist2\",account1)\n//   } else {\n//     localStorage.setItem(\"account\",accountFinal)\n//     setAccount(accountFinal)\n//     console.log(\"blocklist3\",accountFinal)\n//   }\n  \n\n//   },[accountFinal])\n\n  \n\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,OAAO,KAAwC,OAAO,CACtE,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,MAAO,CAAAC,kBAAkB,KAAM,4BAA4B,CAC3D,OAASC,iBAAiB,KAAQ,oBAAoB,CACtD,MAAO,CAAAC,kBAAkB,KAAM,6BAA6B,CAC5D,MAAO,CAAAC,YAAY,KAAM,uBAAuB,CAChD,MAAO,CAAAC,gBAAgB,KAAM,2BAA2B,CACxD,MAAO,CAAAC,kBAAkB,KAAM,8BAA8B,CAC7D,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,wCAAwC,QAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,mBACED,KAAA,CAAAF,SAAA,EAAAI,QAAA,eACEN,IAAA,CAACN,YAAY,GAAE,CAAC,cAChBM,IAAA,CAACP,kBAAkB,GAAE,CAAC,cACtBO,IAAA,CAACJ,kBAAkB,GAAE,CAAC,cACtBI,IAAA,CAACL,gBAAgB,GAAE,CAAC,EACpB,CAAC,CAEP,CAEA,QAAS,CAAAY,SAASA,CAAAC,IAAA,CAAwC,IAAvC,CAAEF,QAAkC,CAAC,CAAAE,IAAA,CACtD,KAAM,CAAEC,OAAQ,CAAC,CAAGlB,kBAAkB,CAAC,CAAC,CACzC;AAECmB,OAAO,CAACC,GAAG,CAAC,cAAc,CAACF,OAAO,CAAC,CAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIE,KAAM,CAAAG,OAAgB,CAAGvB,OAAO,CAAC,IAAMwB,OAAO,CAACJ,OAAO,EAAIjB,iBAAiB,CAACsB,OAAO,CAACL,OAAO,CAAC,GAAK,CAAC,CAAC,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAChH,GAAIG,OAAO,CAAE,CACX,mBAAOZ,IAAA,QAAAM,QAAA,CAAK,iBAAe,CAAK,CAAC,CACnC,CACA,mBAAON,IAAA,CAAAE,SAAA,EAAAI,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAEAhB,QAAQ,CAACyB,MAAM,cACbf,IAAA,CAACZ,KAAK,CAAC4B,UAAU,EAAAV,QAAA,cACfN,IAAA,CAACO,SAAS,EAAAD,QAAA,cACRF,KAAA,CAACN,SAAS,EAAAQ,QAAA,eACRN,IAAA,CAACK,QAAQ,GAAE,CAAC,cACZL,IAAA,CAACH,GAAG,GAAE,CAAC,EACE,CAAC,CACH,CAAC,CACI,CAAC,CACnBoB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}