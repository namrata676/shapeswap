{"ast":null,"code":"import _objectSpread from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import merge from'lodash/merge';import teamsList from'config/constants/teams';import{getProfileContract}from'utils/contractHelpers';import{multicallv2}from'utils/multicall';import profileABI from'config/abi/pancakeProfile.json';import{getPancakeProfileAddress}from'utils/addressHelpers';const profileContract=getProfileContract();export const getTeam=async teamId=>{try{const{0:teamName,2:numberUsers,3:numberPoints,4:isJoinable}=await profileContract.getTeamProfile(teamId);const staticTeamInfo=teamsList.find(staticTeam=>staticTeam.id===teamId);return merge({},staticTeamInfo,{isJoinable,name:teamName,users:numberUsers.toNumber(),points:numberPoints.toNumber()});}catch(error){return null;}};/**\n * Gets on-chain data and merges it with the existing static list of teams\n */export const getTeams=async()=>{try{const teamsById=teamsList.reduce((accum,team)=>{return _objectSpread(_objectSpread({},accum),{},{[team.id]:team});},{});const nbTeams=await profileContract.numberTeams();const calls=[];for(let i=1;i<=nbTeams;i++){calls.push({address:getPancakeProfileAddress(),name:'getTeamProfile',params:[i]});}const teamData=await multicallv2(profileABI,calls);const onChainTeamData=teamData.reduce((accum,team,index)=>{const{0:teamName,2:numberUsers,3:numberPoints,4:isJoinable}=team;return _objectSpread(_objectSpread({},accum),{},{[index+1]:{name:teamName,users:numberUsers.toNumber(),points:numberPoints.toNumber(),isJoinable}});},{});return merge({},teamsById,onChainTeamData);}catch(error){return null;}};","map":{"version":3,"names":["merge","teamsList","getProfileContract","multicallv2","profileABI","getPancakeProfileAddress","profileContract","getTeam","teamId","teamName","numberUsers","numberPoints","isJoinable","getTeamProfile","staticTeamInfo","find","staticTeam","id","name","users","toNumber","points","error","getTeams","teamsById","reduce","accum","team","_objectSpread","nbTeams","numberTeams","calls","i","push","address","params","teamData","onChainTeamData","index"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/teams/helpers.ts"],"sourcesContent":["import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n"],"mappings":"oIAAA,MAAO,CAAAA,KAAK,KAAM,cAAc,CAChC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,OAASC,kBAAkB,KAAQ,uBAAuB,CAE1D,OAASC,WAAW,KAAQ,iBAAiB,CAE7C,MAAO,CAAAC,UAAU,KAAM,gCAAgC,CACvD,OAASC,wBAAwB,KAAQ,sBAAsB,CAE/D,KAAM,CAAAC,eAAe,CAAGJ,kBAAkB,CAAC,CAAC,CAE5C,MAAO,MAAM,CAAAK,OAAO,CAAG,KAAO,CAAAC,MAAc,EAAoB,CAC9D,GAAI,CACF,KAAM,CAAE,CAAC,CAAEC,QAAQ,CAAE,CAAC,CAAEC,WAAW,CAAE,CAAC,CAAEC,YAAY,CAAE,CAAC,CAAEC,UAAW,CAAC,CAAG,KAAM,CAAAN,eAAe,CAACO,cAAc,CAACL,MAAM,CAAC,CACpH,KAAM,CAAAM,cAAc,CAAGb,SAAS,CAACc,IAAI,CAAEC,UAAU,EAAKA,UAAU,CAACC,EAAE,GAAKT,MAAM,CAAC,CAE/E,MAAO,CAAAR,KAAK,CAAC,CAAC,CAAC,CAAEc,cAAc,CAAE,CAC/BF,UAAU,CACVM,IAAI,CAAET,QAAQ,CACdU,KAAK,CAAET,WAAW,CAACU,QAAQ,CAAC,CAAC,CAC7BC,MAAM,CAAEV,YAAY,CAACS,QAAQ,CAAC,CAChC,CAAC,CAAC,CACJ,CAAE,MAAOE,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAA,GAAgC,CACtD,GAAI,CACF,KAAM,CAAAC,SAAS,CAAGvB,SAAS,CAACwB,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAK,CAClD,OAAAC,aAAA,CAAAA,aAAA,IACKF,KAAK,MACR,CAACC,IAAI,CAACV,EAAE,EAAGU,IAAI,GAEnB,CAAC,CAAE,CAAC,CAAC,CAAC,CACN,KAAM,CAAAE,OAAO,CAAG,KAAM,CAAAvB,eAAe,CAACwB,WAAW,CAAC,CAAC,CAEnD,KAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIH,OAAO,CAAEG,CAAC,EAAE,CAAE,CACjCD,KAAK,CAACE,IAAI,CAAC,CACTC,OAAO,CAAE7B,wBAAwB,CAAC,CAAC,CACnCa,IAAI,CAAE,gBAAgB,CACtBiB,MAAM,CAAE,CAACH,CAAC,CACZ,CAAC,CAAC,CACJ,CACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAjC,WAAW,CAACC,UAAU,CAAE2B,KAAK,CAAC,CAErD,KAAM,CAAAM,eAAe,CAAGD,QAAQ,CAACX,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,CAAEW,KAAK,GAAK,CAC9D,KAAM,CAAE,CAAC,CAAE7B,QAAQ,CAAE,CAAC,CAAEC,WAAW,CAAE,CAAC,CAAEC,YAAY,CAAE,CAAC,CAAEC,UAAW,CAAC,CAAGe,IAAI,CAE5E,OAAAC,aAAA,CAAAA,aAAA,IACKF,KAAK,MACR,CAACY,KAAK,CAAG,CAAC,EAAG,CACXpB,IAAI,CAAET,QAAQ,CACdU,KAAK,CAAET,WAAW,CAACU,QAAQ,CAAC,CAAC,CAC7BC,MAAM,CAAEV,YAAY,CAACS,QAAQ,CAAC,CAAC,CAC/BR,UACF,CAAC,GAEL,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,MAAO,CAAAZ,KAAK,CAAC,CAAC,CAAC,CAAEwB,SAAS,CAAEa,eAAe,CAAC,CAC9C,CAAE,MAAOf,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}