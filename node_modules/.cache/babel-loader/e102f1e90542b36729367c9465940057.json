{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/Mint/index.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { BrowserView, MobileView } from 'react-device-detect';\nimport styled from 'styled-components';\nimport { BaseLayout, useModal } from 'toolkit/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { CardBody } from 'uikit';\nimport Web3 from \"web3\";\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet-async';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ReactPixel from 'react-facebook-pixel';\nimport { AppBody } from '../../components/App';\nimport { setupNetwork1, setupNetwork2 } from '../../utils/wallet';\nimport Page from '../Page';\nimport ThingsContext from '../../swapContext';\nimport MintModal from '../mintModal/mintModal';\nimport { getTokenImage, getNetwork } from './avalancheutils';\nimport CoinsModal from '../coinsModal/CoinsModal';\nimport CoinsSelectModal from '../coinsSelectModal/CoinsSelectModal';\nimport { contractABI, contractAddress } from '../../Abi/NftAbi/limitedNftConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst advancedMatching = {\n  em: 'smartfinanceexchange@gmail.com',\n  ct: 'Rockford',\n  st: 'Illinois',\n  country: 'United States',\n  fn: 'Smart',\n  ln: 'Finance',\n  ge: 'm',\n  db: '19840406',\n  zp: '61101',\n  ph: '18156083932'\n}; // optional, more info: https://developers.facebook.com/docs/facebook-pixel/advanced/advanced-matching\nconst options = {\n  autoConfig: true,\n  // set pixel's autoConfig. More info: https://developers.facebook.com/docs/facebook-pixel/advanced/\n  debug: false // enable logs\n};\n\nReactPixel.init('659109152243955', advancedMatching, options);\nReactPixel.pageView(); // For tracking page view\n// ReactPixel.trackSingle('659109152243955', event, data);\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n  width: 100%;\n \n\n  & > div {\n    grid-column: span 12;\n    background-color: #191b1f; \n  }\n\n  ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.mediaQueries.sm;\n}} {\n    & > div {\n      grid-column: span 12;\n      background-color: #1b2028; \n    }\n  }\n  ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.mediaQueries.md;\n}} {\n    & > div {\n      grid-column: span 6;\n      background-color: #1b2028; \n    }\n  }\n\n  ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.mediaQueries.lg;\n}} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 3;\n    }\n  }\n`;\nconst BiggerCards = styled(Cards)`\n  ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.mediaQueries.sm;\n}} {\n    & > div {\n      grid-column: span 12;\n      font-size: 1.5em;\n      border-radius:80px;\n      position: relative;\n      margin: 0 auto;     \n      background-color: #1b2028;      \n      border: 1;     \n      box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n    }\n  }\n  ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.mediaQueries.lg;\n}} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n`;\nconst StyledInput = styled.input`\n  color: white !important;\n  font-size: 12px !important;\n  \n  margin-top: 24px;\n  padding: 10px;\n  border-radius: 12px;\n  background-color: #272f37;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856); \n  text-align: center;\n  width: 35%;\n  border: 1;\n  :focus{\n    border: 0;\n    outline: 0;\n  }\n`;\nconst StyledInput1 = styled.input`\n  color: white !important;\n  font-size: 12px !important;\n  \n  margin-top: 24px;\n  padding: 10px;\n  border-radius: 12px;\n  background-color: #272f37;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);  \n  text-align: center;\n  width: 75%;\n  border: 1;\n  :focus{\n    border: 0;\n    outline: 0;\n  }\n`;\nconst StyledInput2 = styled.input`\n  color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.colors.textSubtle;\n}};\n  font-size: 14px;  \n  padding: 8px;\n  width:100%;\n  flex: 1;\n  border-radius: 10px 0px 0px 10px;  \n  background: #3a3a3c;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  border: 0px;\n  outline: 0;\n`;\nconst SelectStyle = styled.select`\n  color: #f7941d;\n  background: #3a3a3c;\n  border-radius: 10px;\n  border: 0;\n  outline: 0;\n  height: 33px;\n  width: 100%;\n  margin-top: 10px;\n  // with: 50px;\n  // width: 80px;\n`;\nconst Actions = styled.div`\n  margin-top: 24px;\n`;\nconst StyledCardBody = styled(CardBody)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;  \n  align-items: center;  \n  background-color: #1b2028; \n`;\nconst StyledButton = styled.button`\n  order: 4;\n  align-items: center;\n  border: 1;\n   \n  border-radius: 12px;\n  padding: 12px;\n  margin-top: 10px;\n  cursor: pointer;\n  display: inline-flex;\n  width: 55%;\n  font-family: inherit;\n  font-size: 26px !important;\n  // font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  background-color: #272f37;\n  color: white;\n  transition: background-color 0.2s, opacity 0.2s;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  &:hover {\n    opacity: 0.65;\n  }\n\n  &:active {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`;\nconst StyledButton1 = styled.button`\n  order: 4;\n  align-items: center;\n  border: 1;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  border-radius: 12px;\n  padding: 12px;\n  margin-top: 10px;\n  cursor: pointer;\n  display: inline-flex;\n  width: 75%;\n  font-family: inherit;\n  font-size: 26px !important;\n  // font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  background-color: #272f37;\n  color: white;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover {\n    opacity: 0.65;\n  }\n\n  &:active {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`;\nconst StyledButton2 = styled.button`\n  order:2;\n  align-items: center;\n  border: 0;\n  border-radius: 15px;\n  padding: 12px;\n  margin-top: 10px;\n  display: inline-flex;\n  width: 30px;\n  height: 30px;\n  background: #272f37;\n  font-family: inherit;\n  font-size: 16px;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  color: white;\n  transition: background-color 0.2s, opacity 0.2s;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  &:hover {\n    opacity: 0.65;\n  }\n\n  &:active {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`;\nconst InputStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  border: 1px solid;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  padding: 10px;\n  margin-top: 10px;\n\n`;\nconst Label = styled.div`\nfont-size: 14px;\ncolor: #fff;\npadding-top:20px;\n`;\nconst Labelm = styled.div`\nfont-size: 18px !important;\nmargin:5px 69px;\npadding-top: 5px;\n`;\nconst Label1m = styled.div`\nfont-size: ${props => props.labelSize};\nmargin:0px 105px;\n`;\nconst Label11m = styled.div`\nfont-size: 14px;\nwidth: 75%;\ncolor: #fff;\nmargin:0px 30px;\npadding-top:20px;\n`;\nconst Label1 = styled.div`\nfont-size: 28px !important;\ncolor: #faa21a;\npadding: 10px;\n`;\nconst BuyNode = () => {\n  const [nftAmount, setNftAmount] = useState(1);\n  const [amount, setAmount] = useState('');\n  const [token, setToken] = useState('avax');\n  const [rateAvax, setRateAvax] = useState(0);\n  const [maxUserNodes, setMaxUserNodes] = useState(0);\n  const [userNodes, setUserNodes] = useState(0);\n  const [rateToken, setRateToken] = useState(0);\n  const [usdtDecimals, setUsdtDecimals] = useState(1);\n  const [token1List, setToken1List] = useState([]);\n  const {\n    account: accountFinal\n  } = useWeb3React();\n  const [token1, setToekn1] = useState('');\n  const [token1Object, setToken1Object] = useState({\n    \"name\": \"Token\",\n    \"exchangeIndex\": 0,\n    \"icon\": \"\",\n    \"chain\": \"avax\",\n    \"tokenAddress\": \"\",\n    \"decimals\": 0,\n    \"photoUrl\": null\n  });\n  const commonThings = useContext(ThingsContext);\n  const {\n    setSwapHeader,\n    account,\n    setAccount\n  } = commonThings;\n  console.log('account@@', account);\n  useEffect(() => {\n    const account1 = localStorage.getItem(\"account\");\n    if (account1 !== null && account1 !== undefined) {\n      setAccount(account1);\n    } else {\n      if (accountFinal !== undefined) {\n        localStorage.setItem(\"account\", accountFinal);\n      }\n      setAccount(accountFinal);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [accountFinal]);\n  const tokenFunc1 = async (tokenName, tokenSelected) => {\n    setToekn1(tokenSelected === null || tokenSelected === void 0 ? void 0 : tokenSelected.name);\n    setToken1Object(tokenSelected);\n  };\n  useEffect(() => {\n    const initialToken = token1List.find(p => (p === null || p === void 0 ? void 0 : p.tokenAddress) === \"0x0000000000000000000000000000000000000000\");\n    console.log(\"initialtokentokenwe\", initialToken);\n    if (initialToken !== undefined) {\n      tokenFunc1(\"token1\", initialToken);\n      // setToken1Object(initialToken)\n      // setToekn1(initialToken?.name)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token1List]);\n  const notifySuccess = () => {\n    toast.success('Successfully Minted NFTs !', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true\n    });\n  };\n  const notifyWarning = () => {\n    toast.warning('Please Connect Wallet!!', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true\n    });\n  };\n  const notifyError = () => {\n    toast.error('Error Minting NFTs !', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n  const notifyMaxError = () => {\n    toast.error('Maximum NFTs Cannot Exceed 25!', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n  const notifyEmptyError = () => {\n    toast.error('Number Of NFTs Cannot Be Empty!', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n  const {\n    ethereum\n  } = window;\n  const web3 = new Web3(window.ethereum);\n  const contract = new web3.eth.Contract(contractABI, contractAddress);\n  const [tokenBalance, setTokenBalance] = useState('0');\n  //      const [token1, setToekn1] = useState('');\n  //      const [token2, setToekn2] = useState('');\n  //      const [token1Object, setToken1Object] = useState({\n  //       \"name\": \"Token\",\n  //       \"exchangeIndex\" : 0,\n  //       \"icon\": \"\",\n  //       \"chain\": \"avax\",\n  //       \"tokenAddress\" : \"\",\n  //       \"decimals\": 0,\n  //       \"photoUrl\" : null\n\n  //     })\n  //     const usdcAddress = (\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\").toLowerCase()\n  //     const [token2Object, setToken2Object] = useState({\n\n  //       \"name\": \"Token\",\n  //       \"exchangeIndex\" : 0,\n  //       \"icon\": \"\",\n  //       \"chain\": \"avax\",\n  //       \"tokenAddress\": '',\n  //       \"decimals\": 0,\n  //       \"photoUrl\" : null,\n\n  //     })\n\n  //     const [getNetwork1, setGetNetwork1] = useState(\"None\")\n  //     const [getNetwork2, setGetNetwork2] = useState(\"None\")\n\n  //     const [networkList, setGetNetworkList] = useState([\n  //       {\n  //           \"id\": 1,\n  //           \"name\": \"bsc\",\n  //           \"stargatechainid\": 102,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 10,\n  //           \"name\": \"ethereum\",\n  //           \"stargatechainid\": 101,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 4,\n  //           \"name\": \"avalanche\",\n  //           \"stargatechainid\": 106,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 6,\n  //           \"name\": \"polygon\",\n  //           \"stargatechainid\": 109,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 9,\n  //           \"name\": \"optimism\",\n  //           \"stargatechainid\": -1,\n  //           \"isCrossSwapEnabled\": false,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 7,\n  //           \"name\": \"arbitrum\",\n  //           \"stargatechainid\": -1,\n  //           \"isCrossSwapEnabled\": false,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 8,\n  //           \"name\": \"fantom\",\n  //           \"stargatechainid\": -1,\n  //           \"isCrossSwapEnabled\": false,\n  //           \"isChainActive\": true\n  //       }\n  //   ])\n  //     const [networkListCross, setGetNetworkListCross] = useState([\n  //       {\n  //           \"id\": 1,\n  //           \"name\": \"bsc\",\n  //           \"stargatechainid\": 102,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 10,\n  //           \"name\": \"ethereum\",\n  //           \"stargatechainid\": 101,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 4,\n  //           \"name\": \"avalanche\",\n  //           \"stargatechainid\": 106,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 6,\n  //           \"name\": \"polygon\",\n  //           \"stargatechainid\": 109,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       }] )\n  //     const [chainChanged, setChainChanged] = useState(false)\n  //     const [currentChain, setCurrentChain] = useState(0)\n  //     const [selectedNetwork, setSelectedNetwork] = useState(0)\n\n  //     if(ethereum) {\n  //       const outerHtmlElement: any = ethereum;\n  //       outerHtmlElement.on(\"chainChanged\", async (_chainId) => {\n  //        setChainChanged(!chainChanged)\n  //        const chain = await web3.eth.getChainId()\n  //        setCurrentChain(chain)\n\n  //      });\n  //      }\n\n  //      useEffect (()=> {\n  //       axios.get('https://1f8vxhjggh.execute-api.us-east-1.amazonaws.com/supportChainList')\n  //       .then(function (response) {\n  //         // handle success\n  //         console.log(\"Responsechain\", response?.data?.chain_data);\n  //        const crossArray = []\n  //        const localArray = []\n  //         response?.data?.chain_data?.forEach((chain)=>{\n  //           if(chain?.isCrossSwapEnabled){\n  //             if(chain?.name === \"bsc\"){\n  //               crossArray[0] = chain\n  //             } else if (chain?.name === \"ethereum\"){\n  //               crossArray[1] = chain\n  //             } else if (chain?.name === \"avalanche\"){\n  //               crossArray[2] = chain\n  //             }\n  //             else {\n  //               crossArray[3] = chain\n  //             }\n\n  //           }\n\n  //         })\n  //         setTimeout(()=>{\n  //           setGetNetworkListCross(crossArray)\n  //         },300)\n\n  //         response?.data?.chain_data?.forEach((chain)=>{\n\n  //             if(chain?.name === \"bsc\"){\n  //               localArray[0] = chain\n  //             } else if (chain?.name === \"ethereum\"){\n  //               localArray[1] = chain\n  //             } else if (chain?.name === \"avalanche\"){\n  //               localArray[2] = chain\n  //             }\n  //             else if (chain?.name === \"polygon\") {\n  //               localArray[3] = chain\n  //             }\n  //             else if (chain?.name === \"optimism\") {\n  //               localArray[4] = chain\n  //             }\n  //             else if (chain?.name === \"arbitrum\") {\n  //               localArray[5] = chain\n  //             }\n  //             else if (chain?.name === \"fantom\") {\n  //               localArray[6] = chain\n  //             }\n\n  //         })\n\n  //         setTimeout(()=>{\n  //           setGetNetworkList(localArray)\n  //         },300)\n\n  //       })\n  //       .catch(function (error) {\n  //         // handle error\n  //         console.log(error);\n  //       })\n\n  //     },[])\n\n  //     const getChain = async() => {\n  //       const chain = await web3.eth.getChainId()\n  //       setCurrentChain(chain)\n  //     }\n\n  //     useEffect( ()=>{\n  //     getChain()\n\n  //       // eslint-disable-next-line react-hooks/exhaustive-deps\n  //     },[])\n\n  //     const getCurrentNetwork = (selectNetwork) =>{\n  //       if(selectNetwork === \"bsc\"){\n  //         setSelectedNetwork(56)\n  //         return 56\n\n  //       } \n  //       // eslint-disable-next-line no-else-return\n  //       else if (selectNetwork === \"avalanche\"){\n  //         setSelectedNetwork(43114)\n  //         return 43114\n\n  //       } else if (selectNetwork === \"polygon\"){\n  //         setSelectedNetwork(137)\n  //         return 137\n\n  //       }\n  //       else if (selectNetwork === \"ethereum\"){\n  //         setSelectedNetwork(1)\n  //         return 1\n\n  //       }\n  //       else if (selectNetwork === \"fantom\"){\n  //         setSelectedNetwork(250)\n  //         return 250\n\n  //       }\n  //       else if (selectNetwork === \"arbitrum\"){\n\n  //         setSelectedNetwork(42161)\n  //         return 42161\n\n  //       }\n  //       else if (selectNetwork === \"optimism\"){\n\n  //         setSelectedNetwork(10)\n  //         return 10\n\n  //       } else {\n  //         return ''\n  //       }\n\n  //     }\n\n  //     useEffect(()=>{\n\n  //       if(!order){\n  //         console.log(\"tokenwe\",token1List)\n  //         const initialToken =  token1List.find(p => (p?.tokenAddress) === (\"0x0000000000000000000000000000000000000000\"))\n  //         console.log(\"initialtokentokenwe\",initialToken)\n  //         if(initialToken !== undefined){\n  //           tokenFunc1(\"token1\",initialToken)\n  //           // setToken1Object(initialToken)\n  //           // setToekn1(initialToken?.name)\n  //         }\n  //       }\n\n  //       if(token1.toLowerCase() !== (\"Token\").toLowerCase() && (token1 !== \"\")){\n\n  //       initialBalance()\n  //       }\n  //       if(token2.toLowerCase() !== (\"Token\").toLowerCase() && (token2 !== \"\")){\n\n  //         initialBalance2()\n  //         }\n\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //     },[token1List])\n\n  //     useEffect (()=> {\n\n  //       const object1 = {\n  //         \"name\": \"Token\",\n  //         \"exchangeIndex\" : 0,\n  //         \"icon\": \"\",\n  //         \"chain\": \"avax\",\n  //         \"tokenAddress\" : \"\",\n  //         \"decimals\" : 0,\n  //         \"photoUrl\" : null\n  //      }\n\n  //       setToken1Object(object1)\n  //       setToekn1(\"\")\n  //       setBalance1('0')\n\n  //       axios.get('https://1f8vxhjggh.execute-api.us-east-1.amazonaws.com/tokenList',{\n  //         params: {\n  //           chain_name: getNetwork1\n  //         }\n  //       })\n  //       .then(function (response) {\n  //         // handle success\n  //         console.log(\"Responsetoken\", response);\n\n  //         if(response?.data?.token_list_data){\n  //              const res = response?.data?.token_list_data\n  //              const ethArray = res\n  //              const network = getCurrentNetwork(getNetwork1)\n  //              if(network === currentChain){\n  //               initialBal(res)\n  //              }\n  //              if(getNetwork1 === \"ethereum\"){\n  //                 const ethToken = res.find((token) => token?.tokenAddress === \"0x0000000000000000000000000000000000000000\")\n  //                 ethArray[0] = ethToken\n  //                 const usdcToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdc\")\n  //               const usdtToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdt\")\n  //               if(usdcToken1 !== undefined){\n  //                setUsdcToken(usdcToken1)\n  //               }\n  //               else{\n  //                 setUsdcToken({})\n  //               }\n  //               if(usdtToken1 !== undefined){\n  //                setUsdtToken(usdtToken1)\n  //               } else {\n  //                 setUsdtToken({})\n  //               }\n\n  //                 setToken1List(ethArray)\n\n  //              } else {\n  //               const usdcToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdc\")\n  //               const usdtToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdt\")\n  //               // const ethToken = res.find((token) => token?.tokenAddress === \"0x0000000000000000000000000000000000000000\")\n  //              // ethArray[0] = ethToken\n  //               if(usdcToken1 !== undefined) {\n  //                 setUsdcToken(usdcToken1)\n  //               }\n  //               else{\n  //                 setUsdcToken({})\n  //               }\n  //               if(usdtToken1 !== undefined){\n  //                 setUsdtToken(usdtToken1)\n  //               }\n  //               else {\n  //                 setUsdtToken({})\n  //               }\n  //                 setToken1List(res)\n\n  //              }\n\n  //         } else {\n  //           setToken1List([])\n  //         }\n  //       })\n  //       .catch(function (error) {\n  //         // handle error\n  //         console.log(error);\n  //       })\n\n  //      // eslint-disable-next-line react-hooks/exhaustive-deps\n  //     },[getNetwork1])\n\n  //     const tokenFunc1 = async(tokenName,tokenSelected) => {\n  //       setToekn1(tokenSelected?.name);\n  //       setToken1Object(tokenSelected)\n\n  //       setAmount1(0)\n  //       setAmount2(0)\n\n  //       if(account !== undefined){\n\n  //         if((tokenSelected?.tokenAddress).toLowerCase() === ('0x0000000000000000000000000000000000000000').toLowerCase()) {\n\n  //       const avaxBalance = await web3.eth.getBalance(account);\n  //        setBalance1((parseInt(avaxBalance)/(10**18)).toFixed(5));\n\n  //       } \n\n  //         else {\n\n  //         const currentContract = new web3.eth.Contract(polarABI as any, tokenSelected?.tokenAddress);\n  //         currentContract.methods.decimals().call().then( function( info1 ) {\n\n  //          currentContract.methods.balanceOf((account)).call().then( function( info ) {\n\n  //           console.log(\"balance info\", info)\n  //            setBalance1(((info/(10**info1)).toFixed(5)));\n  //            setAmount1(0)\n  //            setDecimals(info1)\n  //            setCurrentCA(tokenSelected?.tokenAddress)\n  //            });\n\n  //           }); \n  //          } \n  //         }\n\n  //      }\n\n  //      const networkSelect1 = async (tokenName,selectNetwork) =>{\n\n  //       if(tokenName === \"token1\"){\n  //         setGetNetwork1(selectNetwork?.name)\n  //       } else if (tokenName===\"token2\") {\n  //         setGetNetwork2(selectNetwork?.name)\n  //       }\n\n  //       if((order && tokenName === \"token2\") || (!order && tokenName === \"token1\")){\n  //         if(selectNetwork?.name === \"bsc\"){\n  //            setupNetwork1(56)\n  //         } else if (selectNetwork?.name === \"avalanche\"){\n  //           setupNetwork2()\n  //         } else if (selectNetwork?.name === \"polygon\"){\n  //           setupNetwork1(137)\n  //         }\n  //         else if (selectNetwork?.name === \"ethereum\"){\n  //           console.log('currentchain',currentChain)\n  //           if(currentChain !== 1){\n  //           notifyEth()\n  //           }\n  //           setupNetwork1(1)\n  //         }\n  //         else if (selectNetwork?.name === \"fantom\"){\n  //           setupNetwork1(250)\n  //         } else if (selectNetwork?.name === \"optimism\"){\n  //           setupNetwork1(10)\n  //         } else if (selectNetwork?.name === \"arbitrum\"){\n  //           setupNetwork1(42161)\n  //         }\n\n  //       }\n\n  //     }\n\n  useEffect(() => {\n    if (ethereum) {\n      contract.methods.mintPrice().call().then(function (info) {\n        setRateAvax(info);\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n  const initialBalance = async () => {\n    if (token === \"avax\") {\n      const avaxBalanceInitial = await web3.eth.getBalance(account);\n      setTokenBalance((parseInt(avaxBalanceInitial) / 10 ** 18).toFixed(2));\n    }\n  };\n  useEffect(() => {\n    const hasSetup = setupNetwork1(43114);\n    setSwapHeader(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const buyNft = async () => {\n    if (account === undefined) {\n      notifyWarning();\n      return;\n    }\n    if (nftAmount === '' || nftAmount === '0' || nftAmount === 0) {\n      notifyEmptyError();\n      return;\n    }\n    if (ethereum) {\n      if (nftAmount > 25) {\n        notifyMaxError();\n        return;\n      }\n      const amount1 = (rateAvax * nftAmount).toLocaleString('fullwide', {\n        useGrouping: false\n      });\n      try {\n        const nftTxn = await contract.methods.mint(nftAmount).send({\n          from: account,\n          value: amount1\n        });\n        notifySuccess();\n        setNftAmount(0);\n      } catch {\n        notifyError();\n      }\n    }\n  };\n  const inputHandleChange = e => {\n    setNftAmount(e.target.value);\n  };\n  const inputHandleChange2 = e => {\n    setAmount(e.target.value);\n  };\n  const tokenChange = async e => {\n    console.log(e.target.value);\n    setToken(e.target.value);\n    if (e.target.value === \"avax\") {\n      const avaxBalance = await web3.eth.getBalance(account);\n      setTokenBalance((parseInt(avaxBalance) / 10 ** 18).toFixed(2));\n    }\n  };\n  const [onPresentNetworkModal] = useModal( /*#__PURE__*/_jsxDEV(MintModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 970,\n    columnNumber: 46\n  }, this));\n  const [currentChain, setCurrentChain] = useState(0);\n  const [chainChanged, setChainChanged] = useState(false);\n  const [getNetwork1, setGetNetwork1] = useState(\"None\");\n  const [initToken, setInitToken] = useState(false);\n  const [tokenBal, setTokenBal] = useState([]);\n  const [usdtToken, setUsdtToken] = useState({});\n  const [usdcToken, setUsdcToken] = useState({});\n  useEffect(() => {\n    const object1 = {\n      \"name\": \"Token\",\n      \"exchangeIndex\": 0,\n      \"icon\": \"\",\n      \"chain\": \"avax\",\n      \"tokenAddress\": \"\",\n      \"decimals\": 0,\n      \"photoUrl\": null\n    };\n    setToken1Object(object1);\n    setToekn1(\"\");\n    axios.get('https://1f8vxhjggh.execute-api.us-east-1.amazonaws.com/tokenList', {\n      params: {\n        chain_name: getNetwork1\n      }\n    }).then(function (response) {\n      var _response$data;\n      // handle success\n      console.log(\"Responsetoken\", response);\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token_list_data) {\n        var _response$data2;\n        const res = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.token_list_data;\n        const ethArray = res;\n        //  const network = getCurrentNetwork(getNetwork1)\n        //  if(network === currentChain){\n        //   initialBal(res)\n        //  }\n        if (getNetwork1 === \"ethereum\") {\n          const ethToken = res.find(token => (token === null || token === void 0 ? void 0 : token.tokenAddress) === \"0x0000000000000000000000000000000000000000\");\n          ethArray[0] = ethToken;\n          const usdcToken1 = res.find(token => {\n            var _token$name;\n            return (token === null || token === void 0 ? void 0 : (_token$name = token.name) === null || _token$name === void 0 ? void 0 : _token$name.toLowerCase()) === \"usdc\";\n          });\n          const usdtToken1 = res.find(token => {\n            var _token$name2;\n            return (token === null || token === void 0 ? void 0 : (_token$name2 = token.name) === null || _token$name2 === void 0 ? void 0 : _token$name2.toLowerCase()) === \"usdt\";\n          });\n          if (usdcToken1 !== undefined) {\n            setUsdcToken(usdcToken1);\n          } else {\n            setUsdcToken({});\n          }\n          if (usdtToken1 !== undefined) {\n            setUsdtToken(usdtToken1);\n          } else {\n            setUsdtToken({});\n          }\n          setToken1List(ethArray);\n        } else {\n          const usdcToken1 = res.find(token => {\n            var _token$name3;\n            return (token === null || token === void 0 ? void 0 : (_token$name3 = token.name) === null || _token$name3 === void 0 ? void 0 : _token$name3.toLowerCase()) === \"usdc\";\n          });\n          const usdtToken1 = res.find(token => {\n            var _token$name4;\n            return (token === null || token === void 0 ? void 0 : (_token$name4 = token.name) === null || _token$name4 === void 0 ? void 0 : _token$name4.toLowerCase()) === \"usdt\";\n          });\n          // const ethToken = res.find((token) => token?.tokenAddress === \"0x0000000000000000000000000000000000000000\")\n          // ethArray[0] = ethToken\n          if (usdcToken1 !== undefined) {\n            setUsdcToken(usdcToken1);\n          } else {\n            setUsdcToken({});\n          }\n          if (usdtToken1 !== undefined) {\n            setUsdtToken(usdtToken1);\n          } else {\n            setUsdtToken({});\n          }\n          setToken1List(res);\n        }\n      } else {\n        setToken1List([]);\n      }\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getNetwork1]);\n  const [networkListCross, setGetNetworkListCross] = useState([{\n    \"id\": 1,\n    \"name\": \"bsc\",\n    \"stargatechainid\": 102,\n    \"isCrossSwapEnabled\": true,\n    \"isChainActive\": true\n  }\n  // {\n  //     \"id\": 10,\n  //     \"name\": \"ethereum\",\n  //     \"stargatechainid\": 101,\n  //     \"isCrossSwapEnabled\": true,\n  //     \"isChainActive\": true\n  // },\n  // {\n  //     \"id\": 4,\n  //     \"name\": \"avalanche\",\n  //     \"stargatechainid\": 106,\n  //     \"isCrossSwapEnabled\": true,\n  //     \"isChainActive\": true\n  // },\n  // {\n  //     \"id\": 6,\n  //     \"name\": \"polygon\",\n  //     \"stargatechainid\": 109,\n  //     \"isCrossSwapEnabled\": true,\n  //     \"isChainActive\": true\n  // }\n  ]);\n\n  if (ethereum) {\n    const outerHtmlElement = ethereum;\n    outerHtmlElement.on(\"chainChanged\", async _chainId => {\n      setChainChanged(!chainChanged);\n      const chain = await web3.eth.getChainId();\n      setCurrentChain(chain);\n    });\n  }\n\n  // const [deadlineInput, setDeadlineInput] = useState('')\n\n  // const { account } = useWeb3React()\n  const [showBalance, setShowBalance] = useState(false);\n  const notifyEth = () => {\n    toast.warning('Please connect to ethereum network !', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true\n    });\n    // errorSound.play()\n  };\n\n  const networkSelect1 = async (tokenName, selectNetwork) => {\n    setGetNetwork1(selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name);\n    if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"bsc\") {\n      setupNetwork1(56);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"avalanche\") {\n      setupNetwork2();\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"polygon\") {\n      setupNetwork1(137);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"ethereum\") {\n      console.log('currentchain', currentChain);\n      if (currentChain !== 1) {\n        notifyEth();\n      }\n      setupNetwork1(1);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"fantom\") {\n      setupNetwork1(250);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"optimism\") {\n      setupNetwork1(10);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"arbitrum\") {\n      setupNetwork1(42161);\n    }\n  };\n  const tokenRefresh = () => {\n    console.log(\"hello\");\n  };\n  const [onPresentNetworkModal3] = useModal( /*#__PURE__*/_jsxDEV(CoinsModal, {\n    tokenFunc2: networkSelect1,\n    ListData: networkListCross,\n    tokenName: \"token1\",\n    setInitToken: setInitToken,\n    initToken: initToken,\n    tokenRefresh: tokenRefresh,\n    setChain: \"avax\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1183,\n    columnNumber: 47\n  }, this));\n  const [onPresentSettingsModal1] = useModal( /*#__PURE__*/_jsxDEV(CoinsSelectModal, {\n    ListData: token1List === null || token1List === void 0 ? void 0 : token1List.slice(0, 7),\n    tokenName: \"token1\",\n    tokenFunc2: tokenFunc1,\n    setChain: getNetwork1,\n    setChain2: getNetwork1,\n    account: account,\n    balList: tokenBal,\n    order: true,\n    usdcToken: usdcToken,\n    usdtToken: usdtToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1185,\n    columnNumber: 47\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Smart Finance - Limited NFT Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"canonical\",\n        href: \"https://dapp.smartfinance.exchange/mint/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BrowserView, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Page, {\n        children: /*#__PURE__*/_jsxDEV(BiggerCards, {\n          children: /*#__PURE__*/_jsxDEV(AppBody, {\n            children: /*#__PURE__*/_jsxDEV(StyledCardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/home/sfcover_1.png\",\n                alt: \"avax\",\n                style: {\n                  width: '80%',\n                  borderRadius: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1200,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n                placeholder: \"Enter # of NFTs\",\n                id: \"nameToBuyNode\",\n                value: nftAmount,\n                onChange: inputHandleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1201,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                labelSize: \"14px\",\n                children: \"Smart Finance Limited NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                labelSize: \"14px\",\n                children: \"Mint Price: 13.50 AVAX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1203,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                labelSize: \"14px\",\n                children: \"Max 25 NFTs Per TX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1204,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    backgroundColor: \"#292929\"\n                  },\n                  onClick: onPresentNetworkModal3,\n                  children: getNetwork(getNetwork1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1206,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: onPresentSettingsModal1,\n                  children: getTokenImage(token1Object)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n                onClick: onPresentNetworkModal,\n                children: \"Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MobileView, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: /*#__PURE__*/_jsxDEV(BiggerCards, {\n          children: /*#__PURE__*/_jsxDEV(AppBody, {\n            children: /*#__PURE__*/_jsxDEV(StyledCardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/home/sfcover_1.png\",\n                alt: \"avax\",\n                style: {\n                  width: '90%',\n                  borderRadius: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledInput1, {\n                placeholder: \"Enter # of NFTs\",\n                id: \"nameToBuyNode\",\n                onChange: inputHandleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Labelm, {\n                labelSize: \"12px\",\n                children: \"Smart Finance Limited NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Labelm, {\n                labelSize: \"12px\",\n                children: \"Mint Price: 13.50 AVAX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Labelm, {\n                labelSize: \"14px\",\n                children: \"Max 25 NFTs Per TX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1229,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n                onClick: buyNft,\n                children: \"Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1230,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\nexport default BuyNode;","map":{"version":3,"names":["React","useState","useEffect","useContext","BrowserView","MobileView","styled","BaseLayout","useModal","useWeb3React","CardBody","Web3","axios","Helmet","ToastContainer","toast","ReactPixel","AppBody","setupNetwork1","setupNetwork2","Page","ThingsContext","MintModal","getTokenImage","getNetwork","CoinsModal","CoinsSelectModal","contractABI","contractAddress","advancedMatching","em","ct","st","country","fn","ln","ge","db","zp","ph","options","autoConfig","debug","init","pageView","Cards","theme","mediaQueries","sm","md","lg","BiggerCards","StyledInput","input","StyledInput1","StyledInput2","colors","textSubtle","SelectStyle","select","Actions","div","StyledCardBody","StyledButton","button","StyledButton1","StyledButton2","InputStyle","Label","Labelm","Label1m","props","labelSize","Label11m","Label1","BuyNode","nftAmount","setNftAmount","amount","setAmount","token","setToken","rateAvax","setRateAvax","maxUserNodes","setMaxUserNodes","userNodes","setUserNodes","rateToken","setRateToken","usdtDecimals","setUsdtDecimals","token1List","setToken1List","account","accountFinal","token1","setToekn1","token1Object","setToken1Object","commonThings","setSwapHeader","setAccount","console","log","account1","localStorage","getItem","undefined","setItem","tokenFunc1","tokenName","tokenSelected","name","initialToken","find","p","tokenAddress","notifySuccess","success","position","autoClose","closeOnClick","notifyWarning","warning","notifyError","error","pauseOnHover","draggable","progress","notifyMaxError","hideProgressBar","notifyEmptyError","ethereum","window","web3","contract","eth","Contract","tokenBalance","setTokenBalance","methods","mintPrice","call","then","info","initialBalance","avaxBalanceInitial","getBalance","parseInt","toFixed","hasSetup","buyNft","amount1","toLocaleString","useGrouping","nftTxn","mint","send","from","value","inputHandleChange","e","target","inputHandleChange2","tokenChange","avaxBalance","onPresentNetworkModal","currentChain","setCurrentChain","chainChanged","setChainChanged","getNetwork1","setGetNetwork1","initToken","setInitToken","tokenBal","setTokenBal","usdtToken","setUsdtToken","usdcToken","setUsdcToken","object1","get","params","chain_name","response","data","token_list_data","res","ethArray","ethToken","usdcToken1","toLowerCase","usdtToken1","catch","networkListCross","setGetNetworkListCross","outerHtmlElement","on","_chainId","chain","getChainId","showBalance","setShowBalance","notifyEth","networkSelect1","selectNetwork","tokenRefresh","onPresentNetworkModal3","onPresentSettingsModal1","slice","width","borderRadius","backgroundColor"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/Mint/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { BrowserView, MobileView } from 'react-device-detect';\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout, useModal, tokenPairImageVariant } from 'toolkit/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody } from 'uikit'\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet-async';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport {  ToastContainer, toast } from 'react-toastify';\nimport ReactPixel from 'react-facebook-pixel';\nimport { AppHeader, AppBody } from '../../components/App'\nimport { setupNetwork1, setupNetwork2 } from '../../utils/wallet'\nimport Page from '../Page'\nimport ThingsContext from '../../swapContext'\nimport MintModal from '../mintModal/mintModal'\nimport { getTokenImage, getNetwork } from './avalancheutils'\nimport CoinsModal from '../coinsModal/CoinsModal'\nimport CoinsSelectModal from '../coinsSelectModal/CoinsSelectModal'\n\n\nimport { contractABI, contractAddress } from '../../Abi/NftAbi/limitedNftConfig'\n\n\nconst advancedMatching = { em: 'smartfinanceexchange@gmail.com',\n                           ct: 'Rockford',\n                           st: 'Illinois',\n                           country: 'United States',\n                           fn: 'Smart',\n                           ln: 'Finance',\n                           ge: 'm',\n                           db: '19840406',\n                           zp: '61101',\n                           ph: '18156083932'\n                          }; // optional, more info: https://developers.facebook.com/docs/facebook-pixel/advanced/advanced-matching\nconst options = {\n  autoConfig: true, // set pixel's autoConfig. More info: https://developers.facebook.com/docs/facebook-pixel/advanced/\n  debug: false, // enable logs\n};\n\nReactPixel.init('659109152243955', advancedMatching, options);\nReactPixel.pageView(); // For tracking page view\n// ReactPixel.trackSingle('659109152243955', event, data);\n\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n  width: 100%;\n \n\n  & > div {\n    grid-column: span 12;\n    background-color: #191b1f; \n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n      background-color: #1b2028; \n    }\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    & > div {\n      grid-column: span 6;\n      background-color: #1b2028; \n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 3;\n    }\n  }\n`\n\nconst BiggerCards = styled(Cards)`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n      font-size: 1.5em;\n      border-radius:80px;\n      position: relative;\n      margin: 0 auto;     \n      background-color: #1b2028;      \n      border: 1;     \n      box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n    }\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n`\n\nconst StyledInput = styled.input`\n  color: white !important;\n  font-size: 12px !important;\n  \n  margin-top: 24px;\n  padding: 10px;\n  border-radius: 12px;\n  background-color: #272f37;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856); \n  text-align: center;\n  width: 35%;\n  border: 1;\n  :focus{\n    border: 0;\n    outline: 0;\n  }\n`\nconst StyledInput1 = styled.input`\n  color: white !important;\n  font-size: 12px !important;\n  \n  margin-top: 24px;\n  padding: 10px;\n  border-radius: 12px;\n  background-color: #272f37;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);  \n  text-align: center;\n  width: 75%;\n  border: 1;\n  :focus{\n    border: 0;\n    outline: 0;\n  }\n`\nconst StyledInput2 = styled.input`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;  \n  padding: 8px;\n  width:100%;\n  flex: 1;\n  border-radius: 10px 0px 0px 10px;  \n  background: #3a3a3c;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  border: 0px;\n  outline: 0;\n`\n\nconst SelectStyle = styled.select`\n  color: #f7941d;\n  background: #3a3a3c;\n  border-radius: 10px;\n  border: 0;\n  outline: 0;\n  height: 33px;\n  width: 100%;\n  margin-top: 10px;\n  // with: 50px;\n  // width: 80px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\nconst StyledCardBody = styled(CardBody)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;  \n  align-items: center;  \n  background-color: #1b2028; \n`\n\nconst StyledButton = styled.button`\n  order: 4;\n  align-items: center;\n  border: 1;\n   \n  border-radius: 12px;\n  padding: 12px;\n  margin-top: 10px;\n  cursor: pointer;\n  display: inline-flex;\n  width: 55%;\n  font-family: inherit;\n  font-size: 26px !important;\n  // font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  background-color: #272f37;\n  color: white;\n  transition: background-color 0.2s, opacity 0.2s;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  &:hover {\n    opacity: 0.65;\n  }\n\n  &:active {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`;\n\n\nconst StyledButton1 = styled.button`\n  order: 4;\n  align-items: center;\n  border: 1;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  border-radius: 12px;\n  padding: 12px;\n  margin-top: 10px;\n  cursor: pointer;\n  display: inline-flex;\n  width: 75%;\n  font-family: inherit;\n  font-size: 26px !important;\n  // font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  background-color: #272f37;\n  color: white;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover {\n    opacity: 0.65;\n  }\n\n  &:active {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`;\n\nconst StyledButton2 = styled.button`\n  order:2;\n  align-items: center;\n  border: 0;\n  border-radius: 15px;\n  padding: 12px;\n  margin-top: 10px;\n  display: inline-flex;\n  width: 30px;\n  height: 30px;\n  background: #272f37;\n  font-family: inherit;\n  font-size: 16px;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  color: white;\n  transition: background-color 0.2s, opacity 0.2s;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  &:hover {\n    opacity: 0.65;\n  }\n\n  &:active {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`;\n\n\nconst InputStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  border: 1px solid;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(34, 60, 122, 0.856);\n  padding: 10px;\n  margin-top: 10px;\n\n`\n\n\nconst Label = styled.div<{ labelSize: string }>`\nfont-size: 14px;\ncolor: #fff;\npadding-top:20px;\n`\nconst Labelm = styled.div<{ labelSize: string }>`\nfont-size: 18px !important;\nmargin:5px 69px;\npadding-top: 5px;\n`\nconst Label1m = styled.div<{ labelSize: string }>`\nfont-size: ${props => props.labelSize};\nmargin:0px 105px;\n`\nconst Label11m = styled.div<{ labelSize: string }>`\nfont-size: 14px;\nwidth: 75%;\ncolor: #fff;\nmargin:0px 30px;\npadding-top:20px;\n`\n\nconst Label1 = styled.div<{ labelSize: string }>`\nfont-size: 28px !important;\ncolor: #faa21a;\npadding: 10px;\n`\nconst BuyNode = () => {\n  const [nftAmount, setNftAmount] = useState(1 as any);\n  const [amount, setAmount] = useState('');\n  const [token, setToken] = useState('avax');\n  const [rateAvax, setRateAvax] = useState(0);\n  const [maxUserNodes, setMaxUserNodes] = useState(0);\n  const [userNodes, setUserNodes] = useState(0);\n  const [rateToken, setRateToken] = useState(0)\n  const [usdtDecimals,setUsdtDecimals] = useState(1)\n  const [token1List, setToken1List] = useState([])\n \n  const { account : accountFinal } = useWeb3React();\n  const [token1, setToekn1] = useState('');\n  const [token1Object, setToken1Object] = useState({\n    \"name\": \"Token\",\n    \"exchangeIndex\" : 0,\n    \"icon\": \"\",\n    \"chain\": \"avax\",\n    \"tokenAddress\" : \"\",\n    \"decimals\": 0,\n    \"photoUrl\" : null\n\n\n  })\n\n  const commonThings = useContext(ThingsContext)\n  const { setSwapHeader, account, setAccount} = commonThings as any\n\n  console.log( 'account@@',account)\n\n  useEffect(() => {\n \n    const account1 = localStorage.getItem(\"account\")\n    \n    if(account1 !== null && account1 !== undefined){\n     setAccount(account1)\n    \n    } else {\n      if(accountFinal !== undefined){\n      localStorage.setItem(\"account\",accountFinal)\n      }\n      setAccount(accountFinal)     \n    }\n    \n   // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[accountFinal])\n\n\n    const tokenFunc1 = async(tokenName,tokenSelected) => {\n      setToekn1(tokenSelected?.name);\n      setToken1Object(tokenSelected)\n  \n       \n      \n     }\n\n\n    useEffect(()=>{\n    \n        const initialToken =  token1List.find(p => (p?.tokenAddress) === (\"0x0000000000000000000000000000000000000000\"))\n        console.log(\"initialtokentokenwe\",initialToken)\n        if(initialToken !== undefined){\n          tokenFunc1(\"token1\",initialToken)\n          // setToken1Object(initialToken)\n          // setToekn1(initialToken?.name)\n        }\n      \n     \n      \n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[token1List])\n\n    \n\n  const notifySuccess = () => {\n    \n    toast.success('Successfully Minted NFTs !', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true,\n      });\n  \n};\n\nconst notifyWarning = () => {\n    \n  toast.warning('Please Connect Wallet!!', {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    closeOnClick: true,\n    });\n};\n\nconst notifyError = () => {\n  toast.error('Error Minting NFTs !', {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    });\n\n};\n\nconst notifyMaxError = () => {\n \ntoast.error('Maximum NFTs Cannot Exceed 25!', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n\n};\n\nconst notifyEmptyError = () => {\n  \n toast.error('Number Of NFTs Cannot Be Empty!', {\n       position: \"bottom-right\",\n       autoClose: 5000,\n       hideProgressBar: false,\n       closeOnClick: true,\n       pauseOnHover: true,\n       draggable: true,\n       progress: undefined,\n       });\n \n \n };\n \n\n    const { ethereum } = window;\n    \n       const web3 = new Web3(window.ethereum as any)\n       const contract = new web3.eth.Contract(contractABI as any, contractAddress);\n\n      \n       const [tokenBalance, setTokenBalance] = useState('0')\n  //      const [token1, setToekn1] = useState('');\n  //      const [token2, setToekn2] = useState('');\n  //      const [token1Object, setToken1Object] = useState({\n  //       \"name\": \"Token\",\n  //       \"exchangeIndex\" : 0,\n  //       \"icon\": \"\",\n  //       \"chain\": \"avax\",\n  //       \"tokenAddress\" : \"\",\n  //       \"decimals\": 0,\n  //       \"photoUrl\" : null\n    \n    \n  //     })\n  //     const usdcAddress = (\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\").toLowerCase()\n  //     const [token2Object, setToken2Object] = useState({\n    \n  //       \"name\": \"Token\",\n  //       \"exchangeIndex\" : 0,\n  //       \"icon\": \"\",\n  //       \"chain\": \"avax\",\n  //       \"tokenAddress\": '',\n  //       \"decimals\": 0,\n  //       \"photoUrl\" : null,\n        \n    \n  //     })\n\n  //     const [getNetwork1, setGetNetwork1] = useState(\"None\")\n  //     const [getNetwork2, setGetNetwork2] = useState(\"None\")\n  \n  //     const [networkList, setGetNetworkList] = useState([\n  //       {\n  //           \"id\": 1,\n  //           \"name\": \"bsc\",\n  //           \"stargatechainid\": 102,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 10,\n  //           \"name\": \"ethereum\",\n  //           \"stargatechainid\": 101,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 4,\n  //           \"name\": \"avalanche\",\n  //           \"stargatechainid\": 106,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 6,\n  //           \"name\": \"polygon\",\n  //           \"stargatechainid\": 109,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 9,\n  //           \"name\": \"optimism\",\n  //           \"stargatechainid\": -1,\n  //           \"isCrossSwapEnabled\": false,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 7,\n  //           \"name\": \"arbitrum\",\n  //           \"stargatechainid\": -1,\n  //           \"isCrossSwapEnabled\": false,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 8,\n  //           \"name\": \"fantom\",\n  //           \"stargatechainid\": -1,\n  //           \"isCrossSwapEnabled\": false,\n  //           \"isChainActive\": true\n  //       }\n  //   ])\n  //     const [networkListCross, setGetNetworkListCross] = useState([\n  //       {\n  //           \"id\": 1,\n  //           \"name\": \"bsc\",\n  //           \"stargatechainid\": 102,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 10,\n  //           \"name\": \"ethereum\",\n  //           \"stargatechainid\": 101,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 4,\n  //           \"name\": \"avalanche\",\n  //           \"stargatechainid\": 106,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       },\n  //       {\n  //           \"id\": 6,\n  //           \"name\": \"polygon\",\n  //           \"stargatechainid\": 109,\n  //           \"isCrossSwapEnabled\": true,\n  //           \"isChainActive\": true\n  //       }] )\n  //     const [chainChanged, setChainChanged] = useState(false)\n  //     const [currentChain, setCurrentChain] = useState(0)\n  //     const [selectedNetwork, setSelectedNetwork] = useState(0)\n\n  //     if(ethereum) {\n  //       const outerHtmlElement: any = ethereum;\n  //       outerHtmlElement.on(\"chainChanged\", async (_chainId) => {\n  //        setChainChanged(!chainChanged)\n  //        const chain = await web3.eth.getChainId()\n  //        setCurrentChain(chain)\n       \n  //      });\n  //      }\n\n\n  //      useEffect (()=> {\n  //       axios.get('https://1f8vxhjggh.execute-api.us-east-1.amazonaws.com/supportChainList')\n  //       .then(function (response) {\n  //         // handle success\n  //         console.log(\"Responsechain\", response?.data?.chain_data);\n  //        const crossArray = []\n  //        const localArray = []\n  //         response?.data?.chain_data?.forEach((chain)=>{\n  //           if(chain?.isCrossSwapEnabled){\n  //             if(chain?.name === \"bsc\"){\n  //               crossArray[0] = chain\n  //             } else if (chain?.name === \"ethereum\"){\n  //               crossArray[1] = chain\n  //             } else if (chain?.name === \"avalanche\"){\n  //               crossArray[2] = chain\n  //             }\n  //             else {\n  //               crossArray[3] = chain\n  //             }\n      \n  //           }\n      \n  //         })\n  //         setTimeout(()=>{\n  //           setGetNetworkListCross(crossArray)\n  //         },300)\n      \n  //         response?.data?.chain_data?.forEach((chain)=>{\n           \n  //             if(chain?.name === \"bsc\"){\n  //               localArray[0] = chain\n  //             } else if (chain?.name === \"ethereum\"){\n  //               localArray[1] = chain\n  //             } else if (chain?.name === \"avalanche\"){\n  //               localArray[2] = chain\n  //             }\n  //             else if (chain?.name === \"polygon\") {\n  //               localArray[3] = chain\n  //             }\n  //             else if (chain?.name === \"optimism\") {\n  //               localArray[4] = chain\n  //             }\n  //             else if (chain?.name === \"arbitrum\") {\n  //               localArray[5] = chain\n  //             }\n  //             else if (chain?.name === \"fantom\") {\n  //               localArray[6] = chain\n  //             }\n      \n            \n      \n  //         })\n      \n  //         setTimeout(()=>{\n  //           setGetNetworkList(localArray)\n  //         },300)\n      \n         \n          \n      \n  //       })\n  //       .catch(function (error) {\n  //         // handle error\n  //         console.log(error);\n  //       })\n      \n      \n      \n  //     },[])\n\n\n  //     const getChain = async() => {\n  //       const chain = await web3.eth.getChainId()\n  //       setCurrentChain(chain)\n  //     }\n      \n  //     useEffect( ()=>{\n  //     getChain()\n      \n      \n  //       // eslint-disable-next-line react-hooks/exhaustive-deps\n  //     },[])\n\n\n  //     const getCurrentNetwork = (selectNetwork) =>{\n  //       if(selectNetwork === \"bsc\"){\n  //         setSelectedNetwork(56)\n  //         return 56\n        \n           \n  //       } \n  //       // eslint-disable-next-line no-else-return\n  //       else if (selectNetwork === \"avalanche\"){\n  //         setSelectedNetwork(43114)\n  //         return 43114\n           \n  //       } else if (selectNetwork === \"polygon\"){\n  //         setSelectedNetwork(137)\n  //         return 137\n           \n  //       }\n  //       else if (selectNetwork === \"ethereum\"){\n  //         setSelectedNetwork(1)\n  //         return 1\n           \n  //       }\n  //       else if (selectNetwork === \"fantom\"){\n  //         setSelectedNetwork(250)\n  //         return 250\n           \n  //       }\n  //       else if (selectNetwork === \"arbitrum\"){\n       \n  //         setSelectedNetwork(42161)\n  //         return 42161\n           \n  //       }\n  //       else if (selectNetwork === \"optimism\"){\n        \n  //         setSelectedNetwork(10)\n  //         return 10\n           \n  //       } else {\n  //         return ''\n  //       }\n        \n  //     }\n\n  //     useEffect(()=>{\n\n  //       if(!order){\n  //         console.log(\"tokenwe\",token1List)\n  //         const initialToken =  token1List.find(p => (p?.tokenAddress) === (\"0x0000000000000000000000000000000000000000\"))\n  //         console.log(\"initialtokentokenwe\",initialToken)\n  //         if(initialToken !== undefined){\n  //           tokenFunc1(\"token1\",initialToken)\n  //           // setToken1Object(initialToken)\n  //           // setToekn1(initialToken?.name)\n  //         }\n  //       }\n      \n  //       if(token1.toLowerCase() !== (\"Token\").toLowerCase() && (token1 !== \"\")){\n      \n  //       initialBalance()\n  //       }\n  //       if(token2.toLowerCase() !== (\"Token\").toLowerCase() && (token2 !== \"\")){\n      \n  //         initialBalance2()\n  //         }\n        \n       \n        \n      \n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //     },[token1List])\n\n  //     useEffect (()=> {\n\n  //       const object1 = {\n  //         \"name\": \"Token\",\n  //         \"exchangeIndex\" : 0,\n  //         \"icon\": \"\",\n  //         \"chain\": \"avax\",\n  //         \"tokenAddress\" : \"\",\n  //         \"decimals\" : 0,\n  //         \"photoUrl\" : null\n  //      }\n      \n  //       setToken1Object(object1)\n  //       setToekn1(\"\")\n  //       setBalance1('0')\n      \n      \n  //       axios.get('https://1f8vxhjggh.execute-api.us-east-1.amazonaws.com/tokenList',{\n  //         params: {\n  //           chain_name: getNetwork1\n  //         }\n  //       })\n  //       .then(function (response) {\n  //         // handle success\n  //         console.log(\"Responsetoken\", response);\n          \n  //         if(response?.data?.token_list_data){\n  //              const res = response?.data?.token_list_data\n  //              const ethArray = res\n  //              const network = getCurrentNetwork(getNetwork1)\n  //              if(network === currentChain){\n  //               initialBal(res)\n  //              }\n  //              if(getNetwork1 === \"ethereum\"){\n  //                 const ethToken = res.find((token) => token?.tokenAddress === \"0x0000000000000000000000000000000000000000\")\n  //                 ethArray[0] = ethToken\n  //                 const usdcToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdc\")\n  //               const usdtToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdt\")\n  //               if(usdcToken1 !== undefined){\n  //                setUsdcToken(usdcToken1)\n  //               }\n  //               else{\n  //                 setUsdcToken({})\n  //               }\n  //               if(usdtToken1 !== undefined){\n  //                setUsdtToken(usdtToken1)\n  //               } else {\n  //                 setUsdtToken({})\n  //               }\n      \n              \n             \n  //                 setToken1List(ethArray)\n              \n  //              } else {\n  //               const usdcToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdc\")\n  //               const usdtToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdt\")\n  //               // const ethToken = res.find((token) => token?.tokenAddress === \"0x0000000000000000000000000000000000000000\")\n  //              // ethArray[0] = ethToken\n  //               if(usdcToken1 !== undefined) {\n  //                 setUsdcToken(usdcToken1)\n  //               }\n  //               else{\n  //                 setUsdcToken({})\n  //               }\n  //               if(usdtToken1 !== undefined){\n  //                 setUsdtToken(usdtToken1)\n  //               }\n  //               else {\n  //                 setUsdtToken({})\n  //               }\n  //                 setToken1List(res)\n             \n  //              }\n               \n               \n      \n         \n  //         } else {\n  //           setToken1List([])\n  //         }\n  //       })\n  //       .catch(function (error) {\n  //         // handle error\n  //         console.log(error);\n  //       })\n      \n  //      // eslint-disable-next-line react-hooks/exhaustive-deps\n  //     },[getNetwork1])\n\n  //     const tokenFunc1 = async(tokenName,tokenSelected) => {\n  //       setToekn1(tokenSelected?.name);\n  //       setToken1Object(tokenSelected)\n    \n        \n      \n  //       setAmount1(0)\n  //       setAmount2(0)\n    \n  //       if(account !== undefined){\n      \n  //         if((tokenSelected?.tokenAddress).toLowerCase() === ('0x0000000000000000000000000000000000000000').toLowerCase()) {\n      \n  //       const avaxBalance = await web3.eth.getBalance(account);\n  //        setBalance1((parseInt(avaxBalance)/(10**18)).toFixed(5));\n        \n  //       } \n          \n  //         else {\n        \n  //         const currentContract = new web3.eth.Contract(polarABI as any, tokenSelected?.tokenAddress);\n  //         currentContract.methods.decimals().call().then( function( info1 ) {\n       \n  //          currentContract.methods.balanceOf((account)).call().then( function( info ) {\n    \n  //           console.log(\"balance info\", info)\n  //            setBalance1(((info/(10**info1)).toFixed(5)));\n  //            setAmount1(0)\n  //            setDecimals(info1)\n  //            setCurrentCA(tokenSelected?.tokenAddress)\n  //            });\n          \n  //           }); \n  //          } \n  //         }\n         \n        \n  //      }\n\n  //      const networkSelect1 = async (tokenName,selectNetwork) =>{\n\n  //       if(tokenName === \"token1\"){\n  //         setGetNetwork1(selectNetwork?.name)\n  //       } else if (tokenName===\"token2\") {\n  //         setGetNetwork2(selectNetwork?.name)\n  //       }\n      \n  //       if((order && tokenName === \"token2\") || (!order && tokenName === \"token1\")){\n  //         if(selectNetwork?.name === \"bsc\"){\n  //            setupNetwork1(56)\n  //         } else if (selectNetwork?.name === \"avalanche\"){\n  //           setupNetwork2()\n  //         } else if (selectNetwork?.name === \"polygon\"){\n  //           setupNetwork1(137)\n  //         }\n  //         else if (selectNetwork?.name === \"ethereum\"){\n  //           console.log('currentchain',currentChain)\n  //           if(currentChain !== 1){\n  //           notifyEth()\n  //           }\n  //           setupNetwork1(1)\n  //         }\n  //         else if (selectNetwork?.name === \"fantom\"){\n  //           setupNetwork1(250)\n  //         } else if (selectNetwork?.name === \"optimism\"){\n  //           setupNetwork1(10)\n  //         } else if (selectNetwork?.name === \"arbitrum\"){\n  //           setupNetwork1(42161)\n  //         }\n          \n  //       }\n      \n      \n      \n  //     }\n    \n\n  useEffect(()=>{\n    if(ethereum){\n\n    contract.methods.mintPrice().call().then( function( info ) {\n    \n           setRateAvax(info)\n       });     \n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[account])\n\n  const initialBalance = async () => {\n    if(token === \"avax\"){\n    const avaxBalanceInitial =  await web3.eth.getBalance(account);\n           setTokenBalance((parseInt(avaxBalanceInitial)/(10**18)).toFixed(2));\n    } \n  }\n\n  useEffect(() =>{\n\n    const hasSetup = setupNetwork1(43114)\n    setSwapHeader(false)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n       },[])\n\n  const buyNft = async () => {\n\n    if(account === undefined){\n      notifyWarning()\n      return\n    }\n   \n    if(nftAmount === '' || nftAmount === '0' || nftAmount === 0){\n     notifyEmptyError()\n     return\n    }\n \n    if(ethereum){\n\n           if(nftAmount > 25){\n           notifyMaxError()\n            return\n           }\n\n           const amount1 = (rateAvax*nftAmount).toLocaleString('fullwide', { useGrouping: false });\n           try {\n           const nftTxn = await contract.methods.mint(nftAmount).send({from: account, value: amount1});\n           notifySuccess()\n           setNftAmount(0)\n           } catch {\n            notifyError()\n           }\n       }  \n   }\n\n  const inputHandleChange = (e) => {\n    setNftAmount(e.target.value);\n  }\n  const inputHandleChange2 = (e) => {\n    setAmount(e.target.value);\n  }\n  const tokenChange = async (e) => {\n    console.log(e.target.value);\n    setToken(e.target.value);\n    if(e.target.value === \"avax\"){\n      const avaxBalance =  await web3.eth.getBalance(account);\n     setTokenBalance((parseInt(avaxBalance)/(10**18)).toFixed(2));\n    }   \n  }\n\n   const [onPresentNetworkModal] =  useModal(<MintModal /> )\n\n   const [currentChain, setCurrentChain] = useState(0)\n\n   const [chainChanged, setChainChanged] = useState(false)\n \n   const [getNetwork1, setGetNetwork1] = useState(\"None\")\n \n   const [initToken, setInitToken] = useState(false)\n\n   const [tokenBal, setTokenBal] = useState([])\n   const [usdtToken, setUsdtToken] = useState({} as any)\n   const [usdcToken, setUsdcToken] = useState({} as any)\n\n\n   useEffect (()=> {\n\n    const object1 = {\n      \"name\": \"Token\",\n      \"exchangeIndex\" : 0,\n      \"icon\": \"\",\n      \"chain\": \"avax\",\n      \"tokenAddress\" : \"\",\n      \"decimals\" : 0,\n      \"photoUrl\" : null\n   }\n  \n    setToken1Object(object1)\n    setToekn1(\"\")\n  \n    axios.get('https://1f8vxhjggh.execute-api.us-east-1.amazonaws.com/tokenList',{\n      params: {\n        chain_name: getNetwork1\n      }\n    })\n    .then(function (response) {\n      // handle success\n      console.log(\"Responsetoken\", response);\n      \n      if(response?.data?.token_list_data){\n           const res = response?.data?.token_list_data\n           const ethArray = res\n          //  const network = getCurrentNetwork(getNetwork1)\n          //  if(network === currentChain){\n          //   initialBal(res)\n          //  }\n           if(getNetwork1 === \"ethereum\"){\n              const ethToken = res.find((token) => token?.tokenAddress === \"0x0000000000000000000000000000000000000000\")\n              ethArray[0] = ethToken\n              const usdcToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdc\")\n            const usdtToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdt\")\n            if(usdcToken1 !== undefined){\n             setUsdcToken(usdcToken1)\n            }\n            else{\n              setUsdcToken({})\n            }\n            if(usdtToken1 !== undefined){\n             setUsdtToken(usdtToken1)\n            } else {\n              setUsdtToken({})\n            }\n  \n          \n         \n              setToken1List(ethArray)\n          \n           } else {\n            const usdcToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdc\")\n            const usdtToken1 = res.find((token) => (token?.name)?.toLowerCase() === \"usdt\")\n            // const ethToken = res.find((token) => token?.tokenAddress === \"0x0000000000000000000000000000000000000000\")\n           // ethArray[0] = ethToken\n            if(usdcToken1 !== undefined) {\n              setUsdcToken(usdcToken1)\n            }\n            else{\n              setUsdcToken({})\n            }\n            if(usdtToken1 !== undefined){\n              setUsdtToken(usdtToken1)\n            }\n            else {\n              setUsdtToken({})\n            }\n              setToken1List(res)\n         \n           }\n           \n           \n  \n     \n      } else {\n        setToken1List([])\n      }\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n  \n   // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[getNetwork1])\n \n   const [networkListCross, setGetNetworkListCross] = useState([\n     {\n         \"id\": 1,\n         \"name\": \"bsc\",\n         \"stargatechainid\": 102,\n         \"isCrossSwapEnabled\": true,\n         \"isChainActive\": true\n     }\n     // {\n     //     \"id\": 10,\n     //     \"name\": \"ethereum\",\n     //     \"stargatechainid\": 101,\n     //     \"isCrossSwapEnabled\": true,\n     //     \"isChainActive\": true\n     // },\n     // {\n     //     \"id\": 4,\n     //     \"name\": \"avalanche\",\n     //     \"stargatechainid\": 106,\n     //     \"isCrossSwapEnabled\": true,\n     //     \"isChainActive\": true\n     // },\n     // {\n     //     \"id\": 6,\n     //     \"name\": \"polygon\",\n     //     \"stargatechainid\": 109,\n     //     \"isCrossSwapEnabled\": true,\n     //     \"isChainActive\": true\n     // }\n   ] )\n \n \n   if(ethereum) {\n     const outerHtmlElement: any = ethereum;\n     outerHtmlElement.on(\"chainChanged\", async (_chainId) => {\n      setChainChanged(!chainChanged)\n      const chain = await web3.eth.getChainId()\n      setCurrentChain(chain)\n    \n    });\n    }\n \n   \n \n   \n   \n \n   // const [deadlineInput, setDeadlineInput] = useState('')\n \n \n  // const { account } = useWeb3React()\n   const [showBalance, setShowBalance] = useState(false)\n \n \n   const notifyEth = () => {\n     \n     toast.warning('Please connect to ethereum network !', {\n       position: \"bottom-right\",\n       autoClose: 5000,\n       closeOnClick: true,\n       });      \n      // errorSound.play()\n   };\n   \n \n   const networkSelect1 = async (tokenName,selectNetwork) =>{\n \n \n \n \n   \n       setGetNetwork1(selectNetwork?.name)\n    \n   \n  \n       if(selectNetwork?.name === \"bsc\"){\n          setupNetwork1(56)\n       } else if (selectNetwork?.name === \"avalanche\"){\n         setupNetwork2()\n       } else if (selectNetwork?.name === \"polygon\"){\n         setupNetwork1(137)\n       }\n       else if (selectNetwork?.name === \"ethereum\"){\n         console.log('currentchain',currentChain)\n         if(currentChain !== 1){\n         notifyEth()\n         }\n         setupNetwork1(1)\n       }\n       else if (selectNetwork?.name === \"fantom\"){\n         setupNetwork1(250)\n       } else if (selectNetwork?.name === \"optimism\"){\n         setupNetwork1(10)\n       } else if (selectNetwork?.name === \"arbitrum\"){\n         setupNetwork1(42161)\n       }\n       \n     \n   \n   \n   \n   }\n \n   const tokenRefresh = () => {\n     console.log(\"hello\")\n       }\n     \n   \n \n \n   const [onPresentNetworkModal3] =  useModal(<CoinsModal tokenFunc2={networkSelect1} ListData={networkListCross} tokenName=\"token1\" setInitToken={setInitToken} initToken={initToken} tokenRefresh={tokenRefresh} setChain=\"avax\" /> )\n \n   const [onPresentSettingsModal1] = useModal(<CoinsSelectModal ListData={(token1List)?.slice(0,7)} tokenName=\"token1\" tokenFunc2={tokenFunc1} setChain={getNetwork1} setChain2={getNetwork1} account={account} balList={tokenBal} order={true} usdcToken={usdcToken} usdtToken={usdtToken}/>)\n\n\n  return (\n    <>\n    <Helmet>\n      <title>Smart Finance - Limited NFT Mint</title>\n      <link rel=\"canonical\" href=\"https://dapp.smartfinance.exchange/mint/\" />\n    </Helmet>\n    <BrowserView>\n    <ToastContainer />\n      <Page>\n        <BiggerCards>\n        <AppBody>                          \n          <StyledCardBody>          \n           <img src='/images/home/sfcover_1.png' alt='avax' style={{width: '80%', borderRadius: '20px'}}/>                             \n            <StyledInput placeholder='Enter # of NFTs' id='nameToBuyNode' value={nftAmount}  onChange={inputHandleChange}/> \n            <Label labelSize='14px'>Smart Finance Limited NFT</Label>          \n            <Label labelSize='14px'>Mint Price: 13.50 AVAX</Label>\n            <Label labelSize='14px'>Max 25 NFTs Per TX</Label>\n            <div className='d-flex flex-row'>\n            <div style={{backgroundColor:\"#292929\"}} onClick={onPresentNetworkModal3}>\n              {getNetwork(getNetwork1)}      \n              </div>\n                <div onClick={onPresentSettingsModal1} >\n              {getTokenImage(token1Object)}      \n              </div>\n              </div>\n             <StyledButton onClick={onPresentNetworkModal}>Mint</StyledButton>\n             {/* <StyledButton>Mint NFTs</StyledButton> */}\n          </StyledCardBody>\n        </AppBody>\n        </BiggerCards>\n      </Page >\n    </BrowserView>\n    <MobileView>\n    <Page>\n      <BiggerCards>\n      <AppBody>              \n        <StyledCardBody>\n            <img src='/images/home/sfcover_1.png' alt='avax' style={{width: '90%', borderRadius: '20px'}}/>                        \n            <StyledInput1 placeholder='Enter # of NFTs' id='nameToBuyNode' onChange={inputHandleChange} />    \n            <Labelm labelSize='12px'>Smart Finance Limited NFT</Labelm>     \n            <Labelm labelSize='12px'>Mint Price: 13.50 AVAX</Labelm>        \n            <Labelm labelSize='14px'>Max 25 NFTs Per TX</Labelm>\n            <StyledButton onClick={buyNft}>Mint</StyledButton>  \n          </StyledCardBody>\n      </AppBody>\n      </BiggerCards>\n    </Page >\n    </MobileView>\n    </>\n    \n  )\n}\n\nexport default BuyNode"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,EAAEC,UAAU,QAAQ,qBAAqB;AAC7D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAAwBC,UAAU,EAAEC,QAAQ,QAA+B,eAAe;AAC1F,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAAeC,QAAQ,QAAQ,OAAO;AAEtC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,oBAAoB;AAE3C,SAAUC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACvD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAAoBC,OAAO,QAAQ,sBAAsB;AACzD,SAASC,aAAa,EAAEC,aAAa,QAAQ,oBAAoB;AACjE,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,aAAa,EAAEC,UAAU,QAAQ,kBAAkB;AAC5D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,sCAAsC;AAGnE,SAASC,WAAW,EAAEC,eAAe,QAAQ,mCAAmC;AAAA;AAAA;AAGhF,MAAMC,gBAAgB,GAAG;EAAEC,EAAE,EAAE,gCAAgC;EACpCC,EAAE,EAAE,UAAU;EACdC,EAAE,EAAE,UAAU;EACdC,OAAO,EAAE,eAAe;EACxBC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,SAAS;EACbC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,UAAU;EACdC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE;AACL,CAAC,CAAC,CAAC;AAC7B,MAAMC,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAAE;EAClBC,KAAK,EAAE,KAAK,CAAE;AAChB,CAAC;;AAED1B,UAAU,CAAC2B,IAAI,CAAC,iBAAiB,EAAEd,gBAAgB,EAAEW,OAAO,CAAC;AAC7DxB,UAAU,CAAC4B,QAAQ,EAAE,CAAC,CAAC;AACvB;;AAGA,MAAMC,KAAK,GAAGvC,MAAM,CAACC,UAAU,CAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;EAAA,IAAC;IAAEuC;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,YAAY,CAACC,EAAE;AAAA,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA,IAAI;EAAA,IAAC;IAAEF;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,YAAY,CAACE,EAAE;AAAA,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;EAAA,IAAC;IAAEH;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,YAAY,CAACG,EAAE;AAAA,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,WAAW,GAAG7C,MAAM,CAACuC,KAAK,CAAE;AAClC,IAAI;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,YAAY,CAACC,EAAE;AAAA,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;EAAA,IAAC;IAAEF;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,YAAY,CAACG,EAAE;AAAA,CAAC;AACzC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,WAAW,GAAG9C,MAAM,CAAC+C,KAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMC,YAAY,GAAGhD,MAAM,CAAC+C,KAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAME,YAAY,GAAGjD,MAAM,CAAC+C,KAAM;AAClC,WAAW;EAAA,IAAC;IAAEP;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACU,MAAM,CAACC,UAAU;AAAA,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,WAAW,GAAGpD,MAAM,CAACqD,MAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,OAAO,GAAGtD,MAAM,CAACuD,GAAI;AAC3B;AACA,CAAC;AACD,MAAMC,cAAc,GAAGxD,MAAM,CAACI,QAAQ,CAAE;AACxC;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMqD,YAAY,GAAGzD,MAAM,CAAC0D,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,MAAMC,aAAa,GAAG3D,MAAM,CAAC0D,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,aAAa,GAAG5D,MAAM,CAAC0D,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,MAAMG,UAAU,GAAG7D,MAAM,CAACuD,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,MAAMO,KAAK,GAAG9D,MAAM,CAACuD,GAA2B;AAChD;AACA;AACA;AACA,CAAC;AACD,MAAMQ,MAAM,GAAG/D,MAAM,CAACuD,GAA2B;AACjD;AACA;AACA;AACA,CAAC;AACD,MAAMS,OAAO,GAAGhE,MAAM,CAACuD,GAA2B;AAClD,aAAaU,KAAK,IAAIA,KAAK,CAACC,SAAU;AACtC;AACA,CAAC;AACD,MAAMC,QAAQ,GAAGnE,MAAM,CAACuD,GAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMa,MAAM,GAAGpE,MAAM,CAACuD,GAA2B;AACjD;AACA;AACA;AACA,CAAC;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A;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;;EAEA;EACA;EACA;;EAKA;EACA;EACA;EACA;EACA;;EAIA;;EAGA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;EACA;;EAGA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;;EAKA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAIA;EACA;;EAEA;;EAEA;;EAEA;EACA;;EAEA;;EAEA;;EAEA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"},"metadata":{},"sourceType":"module"}