{"ast":null,"code":"import{useAllLists}from'state/lists/hooks';import{getVersionUpgrade,VersionUpgrade}from'@uniswap/token-lists';import{useCallback,useEffect}from'react';import{useDispatch}from'react-redux';import{useAllInactiveTokens}from'hooks/Tokens';import{UNSUPPORTED_LIST_URLS}from'config/constants/lists';import useWeb3Provider from'hooks/useActiveWeb3React';import useFetchListCallback from'hooks/useFetchListCallback';import useInterval from'hooks/useInterval';import useIsWindowVisible from'hooks/useIsWindowVisible';import{acceptListUpdate}from'./actions';import{useActiveListUrls}from'./hooks';export default function Updater(){const{library}=useWeb3Provider();const dispatch=useDispatch();const isWindowVisible=useIsWindowVisible();// get all loaded lists, and the active urls\nconst lists=useAllLists();const activeListUrls=useActiveListUrls();// initiate loading\nuseAllInactiveTokens();const fetchList=useFetchListCallback();const fetchAllListsCallback=useCallback(()=>{if(!isWindowVisible)return;Object.keys(lists).forEach(url=>fetchList(url).catch(error=>console.debug('interval list fetching error',error)));},[fetchList,isWindowVisible,lists]);// fetch all lists every 10 minutes, but only after we initialize library\nuseInterval(fetchAllListsCallback,library?1000*60*10:null);// whenever a list is not loaded and not loading, try again to load it\nuseEffect(()=>{Object.keys(lists).forEach(listUrl=>{const list=lists[listUrl];if(!list.current&&!list.loadingRequestId&&!list.error){fetchList(listUrl).catch(error=>console.debug('list added fetching error',error));}});},[dispatch,fetchList,library,lists]);// if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\nuseEffect(()=>{Object.keys(UNSUPPORTED_LIST_URLS).forEach(listUrl=>{const list=lists[listUrl];if(!list||!list.current&&!list.loadingRequestId&&!list.error){fetchList(listUrl).catch(error=>console.debug('list added fetching error',error));}});},[dispatch,fetchList,library,lists]);// automatically update lists if versions are minor/patch\nuseEffect(()=>{Object.keys(lists).forEach(listUrl=>{const list=lists[listUrl];if(list.current&&list.pendingUpdate){const bump=getVersionUpgrade(list.current.version,list.pendingUpdate.version);// eslint-disable-next-line default-case\nswitch(bump){case VersionUpgrade.NONE:throw new Error('unexpected no version bump');// update any active or inactive lists\ncase VersionUpgrade.PATCH:case VersionUpgrade.MINOR:case VersionUpgrade.MAJOR:dispatch(acceptListUpdate(listUrl));}}});},[dispatch,lists,activeListUrls]);return null;}","map":{"version":3,"names":["useAllLists","getVersionUpgrade","VersionUpgrade","useCallback","useEffect","useDispatch","useAllInactiveTokens","UNSUPPORTED_LIST_URLS","useWeb3Provider","useFetchListCallback","useInterval","useIsWindowVisible","acceptListUpdate","useActiveListUrls","Updater","library","dispatch","isWindowVisible","lists","activeListUrls","fetchList","fetchAllListsCallback","Object","keys","forEach","url","catch","error","console","debug","listUrl","list","current","loadingRequestId","pendingUpdate","bump","version","NONE","Error","PATCH","MINOR","MAJOR"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/lists/updater.ts"],"sourcesContent":["import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}