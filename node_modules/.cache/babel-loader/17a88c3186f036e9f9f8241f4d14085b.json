{"ast":null,"code":"import _objectSpread from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{nftSources}from'config/constants/nfts';import{getAddress}from'utils/addressHelpers';import{getErc721Contract}from'utils/contractHelpers';import{getNftByTokenId}from'utils/collectibles';const initialState={isInitialized:false,isLoading:true,data:{}};// Thunks\nexport const fetchWalletNfts=createAsyncThunk('collectibles/fetchWalletNfts',async account=>{// For each nft source get nft data\nconst nftSourcePromises=Object.keys(nftSources).map(async nftSourceType=>{const{address:addressObj}=nftSources[nftSourceType];const address=getAddress(addressObj);const contract=getErc721Contract(address);const getTokenIdAndData=async index=>{try{const tokenIdBn=await contract.tokenOfOwnerByIndex(account,index);const tokenId=tokenIdBn.toNumber();const walletNft=await getNftByTokenId(address,tokenId);return[tokenId,walletNft.identifier];}catch(error){console.error('getTokenIdAndData',error);return null;}};const balanceOfResponse=await contract.balanceOf(account);const balanceOf=balanceOfResponse.toNumber();if(balanceOf===0){return[];}const nftDataFetchPromises=[];// For each index get the tokenId and data associated with it\nfor(let i=0;i<balanceOf;i++){nftDataFetchPromises.push(getTokenIdAndData(i));}const nftData=await Promise.all(nftDataFetchPromises);return nftData;});const nftSourceData=await Promise.all(nftSourcePromises);return nftSourceData.flat();});export const collectiblesSlice=createSlice({name:'collectibles',initialState,reducers:{},extraReducers:builder=>{builder.addCase(fetchWalletNfts.pending,state=>{state.isLoading=true;});builder.addCase(fetchWalletNfts.fulfilled,(state,action)=>{state.isLoading=false;state.isInitialized=true;state.data=action.payload.reduce((accum,association)=>{if(!association){return accum;}const[tokenId,identifier]=association;return _objectSpread(_objectSpread({},accum),{},{[identifier]:accum[identifier]?[...accum[identifier],tokenId]:[tokenId]});},{});});}});export default collectiblesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","nftSources","getAddress","getErc721Contract","getNftByTokenId","initialState","isInitialized","isLoading","data","fetchWalletNfts","account","nftSourcePromises","Object","keys","map","nftSourceType","address","addressObj","contract","getTokenIdAndData","index","tokenIdBn","tokenOfOwnerByIndex","tokenId","toNumber","walletNft","identifier","error","console","balanceOfResponse","balanceOf","nftDataFetchPromises","i","push","nftData","Promise","all","nftSourceData","flat","collectiblesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","reduce","accum","association","_objectSpread","reducer"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/collectibles/index.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}