{"ast":null,"code":"import{useCallback}from'react';import{useWeb3React,UnsupportedChainIdError}from'@web3-react/core';import{NoBscProviderError}from'@binance-chain/bsc-connector';import{NoEthereumProviderError,UserRejectedRequestError as UserRejectedRequestErrorInjected}from'@web3-react/injected-connector';import{UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,WalletConnectConnector}from'@web3-react/walletconnect-connector';import{connectorLocalStorageKey}from'toolkit/uikit';import{connectorsByName}from'utils/web3React';import{setupNetwork}from'utils/wallet';import useToast from'hooks/useToast';import{profileClear}from'state/profile';import{useAppDispatch}from'state';import{useTranslation}from'contexts/Localization';const useAuth=()=>{const{t}=useTranslation();const dispatch=useAppDispatch();const{activate,deactivate}=useWeb3React();const{toastError}=useToast();const login=useCallback(connectorID=>{const connector=connectorsByName[connectorID];if(connector){activate(connector,async error=>{if(error instanceof UnsupportedChainIdError){const hasSetup=await setupNetwork();if(hasSetup){activate(connector);}}else{window.localStorage.removeItem(connectorLocalStorageKey);if(error instanceof NoEthereumProviderError||error instanceof NoBscProviderError){// console.log('Provider Error', 'No provider was found')\nalert(\"Install Metamask and create Wallet\");}else if(error instanceof UserRejectedRequestErrorInjected||error instanceof UserRejectedRequestErrorWalletConnect){if(connector instanceof WalletConnectConnector){const walletConnector=connector;walletConnector.walletConnectProvider=null;}console.log('Authorization Error','Please authorize to access your account');}else{console.log(error.name,'error.message');}}});}else{console.log('Unable to find connector','The connector config is wrong');}},[activate]);const logout=useCallback(()=>{dispatch(profileClear());deactivate();// This localStorage key is set by @web3-react/walletconnect-connector\nif(window.localStorage.getItem('walletconnect')){connectorsByName.walletconnect.close();connectorsByName.walletconnect.walletConnectProvider=null;}},[deactivate,dispatch]);return{login,logout};};export default useAuth;","map":{"version":3,"names":["useCallback","useWeb3React","UnsupportedChainIdError","NoBscProviderError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","connectorLocalStorageKey","connectorsByName","setupNetwork","useToast","profileClear","useAppDispatch","useTranslation","useAuth","t","dispatch","activate","deactivate","toastError","login","connectorID","connector","error","hasSetup","window","localStorage","removeItem","alert","walletConnector","walletConnectProvider","console","log","name","logout","getItem","walletconnect","close"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/hooks/useAuth.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from 'toolkit/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              // console.log('Provider Error', 'No provider was found')\n              alert(\"Install Metamask and create Wallet\");\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              console.log('Authorization Error', 'Please authorize to access your account')\n            } else {\n              console.log(error.name, 'error.message')\n            }\n          }\n        })\n      } else {\n        console.log('Unable to find connector', 'The connector config is wrong')\n      }\n    },\n    [activate],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}