{"ast":null,"code":"// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE='setPrototypeOf'in Object;/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */export class InsufficientReservesError extends Error{constructor(){super();this.isInsufficientReservesError=true;this.name=this.constructor.name;if(CAN_SET_PROTOTYPE)Object.setPrototypeOf(this,new.target.prototype);}}/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */export class InsufficientInputAmountError extends Error{constructor(){super();this.isInsufficientInputAmountError=true;this.name=this.constructor.name;if(CAN_SET_PROTOTYPE)Object.setPrototypeOf(this,new.target.prototype);}}","map":{"version":3,"names":["CAN_SET_PROTOTYPE","Object","InsufficientReservesError","Error","constructor","isInsufficientReservesError","name","setPrototypeOf","new","target","prototype","InsufficientInputAmountError","isInsufficientInputAmountError"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/toolkit/sdk/errors.ts"],"sourcesContent":["// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,iBAAiB,CAAG,gBAAgB,EAAI,CAAAC,MAAM,CAEpD;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,yBAAyB,QAAS,CAAAC,KAAM,CAG5CC,WAAWA,CAAA,CAAG,CACnB,KAAK,CAAC,CAAC,MAHOC,2BAA2B,CAAS,IAAI,CAItD,IAAI,CAACC,IAAI,CAAG,IAAI,CAACF,WAAW,CAACE,IAAI,CACjC,GAAIN,iBAAiB,CAAEC,MAAM,CAACM,cAAc,CAAC,IAAI,CAAEC,GAAG,CAACC,MAAM,CAACC,SAAS,CAAC,CAC1E,CACF,CAEA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,4BAA4B,QAAS,CAAAR,KAAM,CAG/CC,WAAWA,CAAA,CAAG,CACnB,KAAK,CAAC,CAAC,MAHOQ,8BAA8B,CAAS,IAAI,CAIzD,IAAI,CAACN,IAAI,CAAG,IAAI,CAACF,WAAW,CAACE,IAAI,CACjC,GAAIN,iBAAiB,CAAEC,MAAM,CAACM,cAAc,CAAC,IAAI,CAAEC,GAAG,CAACC,MAAM,CAACC,SAAS,CAAC,CAC1E,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}