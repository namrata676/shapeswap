{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/coinsModal/CoinsModal.tsx\";\nimport React, { useState } from 'react';\nimport { Button, Text, Message, Modal, ModalBody } from 'toolkit/uikit';\nimport {\n// useAudioModeManager,\n\nuseUserSlippageTolerance\n// useUserSingleHopOnly,\n} from 'state/user/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport styled from 'styled-components';\nimport { AutoColumn } from '../../components/Layout/Column';\nimport SearchBar from './SearchBar/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label = styled.div`\nfont-size: 16px;\ncolor: #eee;\nmargin:0px 20px;\npadding-top:10px;\n`;\nconst StyledButton = styled(Button)`\n \n  width: 85px !important;\n  height: 32px !important;\n  border-radius: 8px !important;\n  margin-right: 10px !important;\n`;\nconst CoinsModal = ({\n  onDismiss,\n  tokenFunc2,\n  ListData,\n  tokenName,\n  setInitToken,\n  initToken,\n  tokenRefresh,\n  setChain\n}) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false);\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance();\n  const {\n    t\n  } = useTranslation();\n  if (showConfirmExpertModal) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      title: t('Are you sure?'),\n      onBack: () => setShowConfirmExpertModal(false),\n      onDismiss: onDismiss,\n      style: {\n        maxWidth: '420px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          variant: \"warning\",\n          mb: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: t(\"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mb: \"24px\",\n          children: t('Only use this mode if you know what you’re doing.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          id: \"confirm-expert-mode\",\n          onClick: () => {\n            // eslint-disable-next-line no-alert\n            if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n              // toggleExpertMode()\n              setShowConfirmExpertModal(false);\n            }\n          },\n          children: t('Turn On Expert Mode')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Select Network\",\n    headerBackground: \"headerBG\",\n    onDismiss: onDismiss,\n    style: {\n      width: \"30%\",\n      height: \"75%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        style: {\n          padding: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          onDismiss: onDismiss,\n          tokenFunc2: tokenFunc2,\n          ListData: ListData,\n          tokenName: tokenName,\n          initToken: initToken,\n          setInitToken: setInitToken,\n          tokenRefresh: tokenRefresh,\n          setChain: setChain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\nexport default CoinsModal;","map":{"version":3,"names":["React","useState","Button","Text","Message","Modal","ModalBody","useUserSlippageTolerance","useTranslation","styled","AutoColumn","SearchBar","jsxDEV","_jsxDEV","Label","div","StyledButton","CoinsModal","onDismiss","tokenFunc2","ListData","tokenName","setInitToken","initToken","tokenRefresh","setChain","showConfirmExpertModal","setShowConfirmExpertModal","userSlippageTolerance","setUserslippageTolerance","t","title","onBack","style","maxWidth","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","window","prompt","headerBackground","width","height","gap","padding"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/coinsModal/CoinsModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Text, Message, Modal, ModalBody, InjectedModalProps } from 'toolkit/uikit'\nimport {\n  // useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  // useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\nimport styled from 'styled-components'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport SearchBar from './SearchBar/SearchBar'\n\nconst Label = styled.div<{ labelSize: string }>`\nfont-size: 16px;\ncolor: #eee;\nmargin:0px 20px;\npadding-top:10px;\n`\n\nconst StyledButton = styled(Button)`\n \n  width: 85px !important;\n  height: 32px !important;\n  border-radius: 8px !important;\n  margin-right: 10px !important;\n`\n\ninterface simpleInt {\n  id: number;\n  name: string;\n  stargatechainid: number;\n  isCrossSwapEnabled: boolean;\n  isChainActive: boolean\n}\n\ntype simpleType = simpleInt[];\n\nexport interface TabsProps extends InjectedModalProps {\n  tokenFunc2?: CallableFunction;\n  ListData?: simpleType;\n  tokenName?: string;\n  setInitToken?: CallableFunction;\n  tokenRefresh?: (value: number | ((prevVar: number) => number)) => void;\n  initToken?: boolean\n  setChain?: string\n}\n\nconst CoinsModal: React.FC<TabsProps> = ({ onDismiss, tokenFunc2, ListData, tokenName, setInitToken, initToken, tokenRefresh, setChain }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                // toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title=\"Select Network\" headerBackground=\"headerBG\" onDismiss={onDismiss} style={{ width: \"30%\", height: \"75%\" }}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <SearchBar onDismiss={onDismiss} tokenFunc2={tokenFunc2} ListData={ListData} tokenName={tokenName} initToken={initToken} setInitToken={setInitToken}  tokenRefresh={tokenRefresh} setChain={setChain}/>\n          \n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default CoinsModal\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}