{"ast":null,"code":"import _objectSpread from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useCallback,useEffect,useState}from'react';import{EN,languages}from'config/localization/languages';import translations from'config/localization/translations.json';import{LS_KEY,fetchLocale,getLanguageCodeFromLS}from'./helpers';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={isFetching:true,currentLanguage:EN};// Export the translations directly\nexport const languageMap=new Map();languageMap.set(EN.locale,translations);export const LanguageContext=/*#__PURE__*/createContext(undefined);export const LanguageProvider=_ref=>{let{children}=_ref;const[state,setState]=useState(()=>{const codeFromStorage=getLanguageCodeFromLS();return _objectSpread(_objectSpread({},initialState),{},{currentLanguage:languages[codeFromStorage]});});const{currentLanguage}=state;useEffect(()=>{const fetchInitialLocales=async()=>{const codeFromStorage=getLanguageCodeFromLS();if(codeFromStorage!==EN.locale){const enLocale=languageMap.get(EN.locale);const currentLocale=await fetchLocale(codeFromStorage);languageMap.set(codeFromStorage,_objectSpread(_objectSpread({},enLocale),currentLocale));}setState(prevState=>_objectSpread(_objectSpread({},prevState),{},{isFetching:false}));};fetchInitialLocales();},[setState]);const setLanguage=async language=>{if(!languageMap.has(language.locale)){setState(prevState=>_objectSpread(_objectSpread({},prevState),{},{isFetching:true}));const locale=await fetchLocale(language.locale);const enLocale=languageMap.get(EN.locale);// Merge the EN locale to ensure that any locale fetched has all the keys\nlanguageMap.set(language.locale,_objectSpread(_objectSpread({},enLocale),locale));localStorage.setItem(LS_KEY,language.locale);setState(prevState=>_objectSpread(_objectSpread({},prevState),{},{isFetching:false,currentLanguage:language}));}else{localStorage.setItem(LS_KEY,language.locale);setState(prevState=>_objectSpread(_objectSpread({},prevState),{},{isFetching:false,currentLanguage:language}));}};const translate=useCallback((key,data)=>{const translationSet=languageMap.has(currentLanguage.locale)?languageMap.get(currentLanguage.locale):languageMap.get(EN.locale);const translatedText=translationSet[key]||key;// Check the existence of at least one combination of %%, separated by 1 or more non space characters\nconst includesVariable=translatedText.match(/%\\S+?%/gm);if(includesVariable&&data){let interpolatedText=translatedText;Object.keys(data).forEach(dataKey=>{const templateKey=new RegExp(\"%\".concat(dataKey,\"%\"),'g');interpolatedText=interpolatedText.replace(templateKey,data[dataKey].toString());});return interpolatedText;}return translatedText;},[currentLanguage]);return/*#__PURE__*/_jsx(LanguageContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{setLanguage,t:translate}),children:children});};","map":{"version":3,"names":["React","createContext","useCallback","useEffect","useState","EN","languages","translations","LS_KEY","fetchLocale","getLanguageCodeFromLS","jsx","_jsx","initialState","isFetching","currentLanguage","languageMap","Map","set","locale","LanguageContext","undefined","LanguageProvider","_ref","children","state","setState","codeFromStorage","_objectSpread","fetchInitialLocales","enLocale","get","currentLocale","prevState","setLanguage","language","has","localStorage","setItem","translate","key","data","translationSet","translatedText","includesVariable","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","concat","replace","toString","Provider","value","t"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/contexts/Localization/Provider.tsx"],"sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from 'toolkit/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}