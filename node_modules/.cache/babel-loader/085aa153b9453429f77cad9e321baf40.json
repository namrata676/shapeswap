{"ast":null,"code":"import{useEffect}from'react';import{useSelector}from'react-redux';import{useAppDispatch}from'state';import{useWeb3React}from'@web3-react/core';import BigNumber from'bignumber.js';import{BIG_ZERO}from'utils/bigNumber';import{getBalanceAmount}from'utils/formatBalance';import{farmsConfig}from'config/constants';import useRefresh from'hooks/useRefresh';import{nonArchivedFarms}from'.';export const usePollFarmsData=function(){let includeArchive=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const dispatch=useAppDispatch();const{slowRefresh}=useRefresh();const{account}=useWeb3React();useEffect(()=>{const farmsToFetch=includeArchive?farmsConfig:nonArchivedFarms;const pids=farmsToFetch.map(farmToFetch=>farmToFetch.pid);},[includeArchive,dispatch,slowRefresh,account]);};/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */export const usePollCoreFarmData=()=>{const dispatch=useAppDispatch();const{fastRefresh}=useRefresh();useEffect(()=>{// dispatch(fetchFarmsPublicDataAsync([251, 252]))  \n// dispatch(fetchFarmsPublicDataAsync([0, 1]))  // pid_config\n},[dispatch,fastRefresh]);};export const useFarms=()=>{const farms=useSelector(state=>state.farms);return farms;};export const useFarmFromPid=pid=>{const farm=useSelector(state=>state.farms.data.find(f=>f.pid===pid));return farm;};export const useFarmFromLpSymbol=lpSymbol=>{const farm=useSelector(state=>state.farms.data.find(f=>f.lpSymbol===lpSymbol));return farm;};export const useFarmUser=pid=>{const farm=useFarmFromPid(pid);return{allowance:farm.userData?new BigNumber(farm.userData.allowance):BIG_ZERO,tokenBalance:farm.userData?new BigNumber(farm.userData.tokenBalance):BIG_ZERO,stakedBalance:farm.userData?new BigNumber(farm.userData.stakedBalance):BIG_ZERO,earnings:farm.userData?new BigNumber(farm.userData.earnings):BIG_ZERO};};// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid=pid=>{const farm=useFarmFromPid(pid);return farm&&new BigNumber(farm.token.busdPrice);};export const useLpTokenPrice=symbol=>{const farm=useFarmFromLpSymbol(symbol);const farmTokenPriceInUsd=useBusdPriceFromPid(farm.pid);let lpTokenPrice=BIG_ZERO;if(farm.lpTotalSupply&&farm.lpTotalInQuoteToken){// Total value of base token in LP\nconst valueOfBaseTokenInFarm=farmTokenPriceInUsd.times(farm.tokenAmountTotal);// Double it to get overall value in LP\nconst overallValueOfAllTokensInFarm=valueOfBaseTokenInFarm.times(2);// Divide total value of all tokens, by the number of LP tokens\nconst totalLpTokens=getBalanceAmount(new BigNumber(farm.lpTotalSupply));lpTokenPrice=overallValueOfAllTokensInFarm.div(totalLpTokens);}return lpTokenPrice;};// /!\\ Deprecated , use the BUSD hook in /hooks\nexport const usePriceBnbBusd=()=>{// const bnbBusdFarm = useFarmFromPid(252)\nconst bnbBusdFarm=useFarmFromPid(1);// pid_config\nreturn new BigNumber(bnbBusdFarm.quoteToken.busdPrice);};export const usePriceCakeBusd=()=>{// const cakeBnbFarm = useFarmFromPid(251)\nconst cakeBnbFarm=useFarmFromPid(0);// pid_config\nreturn new BigNumber(cakeBnbFarm.token.busdPrice);};","map":{"version":3,"names":["useEffect","useSelector","useAppDispatch","useWeb3React","BigNumber","BIG_ZERO","getBalanceAmount","farmsConfig","useRefresh","nonArchivedFarms","usePollFarmsData","includeArchive","arguments","length","undefined","dispatch","slowRefresh","account","farmsToFetch","pids","map","farmToFetch","pid","usePollCoreFarmData","fastRefresh","useFarms","farms","state","useFarmFromPid","farm","data","find","f","useFarmFromLpSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","useBusdPriceFromPid","token","busdPrice","useLpTokenPrice","symbol","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","valueOfBaseTokenInFarm","times","tokenAmountTotal","overallValueOfAllTokensInFarm","totalLpTokens","div","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakeBnbFarm"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/farms/hooks.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    // dispatch(fetchFarmsPublicDataAsync([251, 252]))  \n    // dispatch(fetchFarmsPublicDataAsync([0, 1]))  // pid_config\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  // const bnbBusdFarm = useFarmFromPid(252)\n  const bnbBusdFarm = useFarmFromPid(1) // pid_config\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const cakeBnbFarm = useFarmFromPid(251)\n  const cakeBnbFarm = useFarmFromPid(0) // pid_config\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}