{"ast":null,"code":"import styled from \"styled-components\";\nimport { space, layout, variant } from \"styled-system\";\nimport { scaleVariants, styleVariants } from \"./theme\";\nconst getDisabledStyles = ({\n  $isLoading,\n  theme\n}) => {\n  if ($isLoading === true) {\n    return `\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n  return `\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ${theme.colors.backgroundAlt} !important;\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `;\n};\n\n/**\n * This is to get around an issue where if you use a Link component\n * React will throw a invalid DOM attribute error\n * @see https://github.com/styled-components/styled-components/issues/135\n */\n\nconst getOpacity = ({\n  $isLoading = false\n}) => {\n  return $isLoading ? \".5\" : \"1\";\n};\nconst StyledButton = styled.button`\n  align-items: center;\n  border: 0;\n  border-radius: 8px;\n  // box-shadow: 0px -1px 0px 0px rgba(14, 14, 44, 0.4) inset;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 14px;\n  // font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  line-height: 1;\n  opacity: ${getOpacity};\n  outline: 0;\n  background-color: blue !important;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\n    opacity: 0.65;\n  }\n\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n\n  ${getDisabledStyles}\n  ${variant({\n  prop: \"scale\",\n  variants: scaleVariants\n})}\n  ${variant({\n  variants: styleVariants\n})}\n  ${layout}\n  ${space}\n`;\nexport default StyledButton;","map":{"version":3,"names":["styled","space","layout","variant","scaleVariants","styleVariants","getDisabledStyles","$isLoading","theme","colors","backgroundAlt","backgroundDisabled","textDisabled","getOpacity","StyledButton","button","prop","variants"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/components/Button/StyledButton.tsx"],"sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\nimport { space, layout, variant } from \"styled-system\";\nimport { scaleVariants, styleVariants } from \"./theme\";\nimport { BaseButtonProps } from \"./types\";\n\ninterface ThemedButtonProps extends BaseButtonProps {\n  theme: DefaultTheme;\n}\n\ninterface TransientButtonProps extends ThemedButtonProps {\n  $isLoading?: boolean;\n}\n\nconst getDisabledStyles = ({ $isLoading, theme }: TransientButtonProps) => {\n  if ($isLoading === true) {\n    return `\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n\n  return `\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ${theme.colors.backgroundAlt} !important;\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `;\n};\n\n/**\n * This is to get around an issue where if you use a Link component\n * React will throw a invalid DOM attribute error\n * @see https://github.com/styled-components/styled-components/issues/135\n */\n\nconst getOpacity = ({ $isLoading = false }: TransientButtonProps) => {\n  return $isLoading ? \".5\" : \"1\";\n};\n\nconst StyledButton = styled.button<BaseButtonProps>`\n  align-items: center;\n  border: 0;\n  border-radius: 8px;\n  // box-shadow: 0px -1px 0px 0px rgba(14, 14, 44, 0.4) inset;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 14px;\n  // font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  line-height: 1;\n  opacity: ${getOpacity};\n  outline: 0;\n  background-color: blue !important;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\n    opacity: 0.65;\n  }\n\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n\n  ${getDisabledStyles}\n  ${variant({\n    prop: \"scale\",\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n  ${layout}\n  ${space}\n`;\n\nexport default StyledButton;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAwB,mBAAmB;AACxD,SAASC,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,eAAe;AACtD,SAASC,aAAa,EAAEC,aAAa,QAAQ,SAAS;AAWtD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAA4B,CAAC,KAAK;EACzE,IAAID,UAAU,KAAK,IAAI,EAAE;IACvB,OAAO;AACX;AACA;AACA;AACA;AACA,KAAK;EACH;EAEA,OAAO;AACT;AACA;AACA,0BAA0BC,KAAK,CAACC,MAAM,CAACC,aAAa;AACpD,sBAAsBF,KAAK,CAACC,MAAM,CAACE,kBAAkB;AACrD;AACA,eAAeH,KAAK,CAACC,MAAM,CAACG,YAAY;AACxC;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGA,CAAC;EAAEN,UAAU,GAAG;AAA4B,CAAC,KAAK;EACnE,OAAOA,UAAU,GAAG,IAAI,GAAG,GAAG;AAChC,CAAC;AAED,MAAMO,YAAY,GAAGd,MAAM,CAACe,MAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaF,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIP,iBAAiB;AACrB,IAAIH,OAAO,CAAC;EACRa,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAEb;AACZ,CAAC,CAAC;AACJ,IAAID,OAAO,CAAC;EACRc,QAAQ,EAAEZ;AACZ,CAAC,CAAC;AACJ,IAAIH,MAAM;AACV,IAAID,KAAK;AACT,CAAC;AAED,eAAea,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}