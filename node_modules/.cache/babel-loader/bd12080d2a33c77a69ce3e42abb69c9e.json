{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/components/ButtonMenu/ButtonMenuItem.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Button/Button\";\nimport { variants } from \"../Button/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InactiveButton = styled(Button)`\n  background-color: transparent;\n  color: ${({\n  theme,\n  variant\n}) => variant === variants.PRIMARY ? theme.colors.textSubtle : theme.colors.textSubtle};\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n`;\nconst ButtonMenuItem = ({\n  isActive = false,\n  variant = variants.PRIMARY,\n  as,\n  ...props\n}) => {\n  if (!isActive) {\n    return /*#__PURE__*/_jsxDEV(InactiveButton, {\n      forwardedAs: as,\n      variant: variant,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Button, {\n    as: as,\n    variant: variant,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\nexport default ButtonMenuItem;","map":{"version":3,"names":["React","styled","Button","variants","jsxDEV","_jsxDEV","InactiveButton","theme","variant","PRIMARY","colors","textSubtle","ButtonMenuItem","isActive","as","props","forwardedAs","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/components/ButtonMenu/ButtonMenuItem.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Button/Button\";\nimport { BaseButtonProps, PolymorphicComponent, variants } from \"../Button/types\";\nimport { ButtonMenuItemProps } from \"./types\";\n\ninterface InactiveButtonProps extends BaseButtonProps {\n  forwardedAs: BaseButtonProps[\"as\"];\n}\n\nconst InactiveButton: PolymorphicComponent<InactiveButtonProps, \"button\"> = styled(Button)<InactiveButtonProps>`\n  background-color: transparent;\n  color: ${({ theme, variant }) => (variant === variants.PRIMARY ? theme.colors.textSubtle : theme.colors.textSubtle)};\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n`;\n\nconst ButtonMenuItem: PolymorphicComponent<ButtonMenuItemProps, \"button\"> = ({\n  isActive = false,\n  variant = variants.PRIMARY,\n  as,\n  ...props\n}: ButtonMenuItemProps) => {\n  if (!isActive) {\n    return <InactiveButton forwardedAs={as} variant={variant} {...props} />;\n  }\n\n  return <Button as={as} variant={variant} {...props} />;\n};\n\nexport default ButtonMenuItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAAgDC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlF,MAAMC,cAAmE,GAAGL,MAAM,CAACC,MAAM,CAAsB;AAC/G;AACA,WAAW,CAAC;EAAEK,KAAK;EAAEC;AAAQ,CAAC,KAAMA,OAAO,KAAKL,QAAQ,CAACM,OAAO,GAAGF,KAAK,CAACG,MAAM,CAACC,UAAU,GAAGJ,KAAK,CAACG,MAAM,CAACC,UAAW;AACrH;AACA;AACA;AACA,CAAC;AAED,MAAMC,cAAmE,GAAGA,CAAC;EAC3EC,QAAQ,GAAG,KAAK;EAChBL,OAAO,GAAGL,QAAQ,CAACM,OAAO;EAC1BK,EAAE;EACF,GAAGC;AACgB,CAAC,KAAK;EACzB,IAAI,CAACF,QAAQ,EAAE;IACb,oBAAOR,OAAA,CAACC,cAAc;MAACU,WAAW,EAAEF,EAAG;MAACN,OAAO,EAAEA,OAAQ;MAAA,GAAKO;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACzE;EAEA,oBAAOf,OAAA,CAACH,MAAM;IAACY,EAAE,EAAEA,EAAG;IAACN,OAAO,EAAEA,OAAQ;IAAA,GAAKO;EAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACxD,CAAC;AAED,eAAeR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}