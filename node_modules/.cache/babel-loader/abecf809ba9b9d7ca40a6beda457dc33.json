{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/widgets/WalletModal/CopyToClipboard.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"../../components/Text/Text\";\nimport { CopyIcon } from \"../../components/Svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyleButton = styled(Text).attrs({\n  role: \"button\"\n})`\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n`;\nconst Tooltip = styled.div`\n  display: ${({\n  isTooltipDisplayed\n}) => isTooltipDisplayed ? \"block\" : \"none\"};\n  position: absolute;\n  bottom: -22px;\n  right: 0;\n  left: 0;\n  text-align: center;\n  // background-color: ${({\n  theme\n}) => theme.colors.contrast};\n  color: ${({\n  theme\n}) => theme.colors.invertedContrast};\n  border-radius: 8px;\n  opacity: 0.7;\n`;\nconst CopyToClipboard = ({\n  toCopy,\n  children,\n  ...props\n}) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\n  const copyToClipboardWithCommand = content => {\n    const el = document.createElement(\"textarea\");\n    el.value = content;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n  function displayTooltip() {\n    setIsTooltipDisplayed(true);\n    setTimeout(() => {\n      setIsTooltipDisplayed(false);\n    }, 1000);\n  }\n  return /*#__PURE__*/_jsxDEV(StyleButton, {\n    small: true,\n    bold: true,\n    onClick: () => {\n      if (navigator.clipboard && navigator.permissions) {\n        navigator.clipboard.writeText(toCopy).then(() => displayTooltip());\n      } else if (document.queryCommandSupported(\"copy\")) {\n        copyToClipboardWithCommand(toCopy);\n        displayTooltip();\n      }\n    },\n    ...props,\n    children: [children, /*#__PURE__*/_jsxDEV(CopyIcon, {\n      width: \"20px\",\n      color: \"primary\",\n      ml: \"4px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      isTooltipDisplayed: isTooltipDisplayed,\n      children: \"Copied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\nexport default CopyToClipboard;","map":{"version":3,"names":["React","useState","styled","Text","CopyIcon","jsxDEV","_jsxDEV","StyleButton","attrs","role","theme","colors","primary","Tooltip","div","isTooltipDisplayed","contrast","invertedContrast","CopyToClipboard","toCopy","children","props","setIsTooltipDisplayed","copyToClipboardWithCommand","content","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","displayTooltip","setTimeout","small","bold","onClick","navigator","clipboard","permissions","writeText","then","queryCommandSupported","width","color","ml","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/widgets/WalletModal/CopyToClipboard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"../../components/Text/Text\";\nimport { CopyIcon } from \"../../components/Svg\";\n\ninterface Props {\n  toCopy: string;\n}\n\nconst StyleButton = styled(Text).attrs({ role: \"button\" })`\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n`;\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? \"block\" : \"none\")};\n  position: absolute;\n  bottom: -22px;\n  right: 0;\n  left: 0;\n  text-align: center;\n  // background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 8px;\n  opacity: 0.7;\n`;\n\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, children, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\n\n  const copyToClipboardWithCommand = (content: string) => {\n    const el = document.createElement(\"textarea\");\n    el.value = content;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true);\n    setTimeout(() => {\n      setIsTooltipDisplayed(false);\n    }, 1000);\n  }\n\n  return (\n    <StyleButton\n      small\n      bold\n      onClick={() => {\n        if (navigator.clipboard && navigator.permissions) {\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip());\n        } else if (document.queryCommandSupported(\"copy\")) {\n          copyToClipboardWithCommand(toCopy);\n          displayTooltip();\n        }\n      }}\n      {...props}\n    >\n      {children}\n      <CopyIcon width=\"20px\" color=\"primary\" ml=\"4px\" />\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\n    </StyleButton>\n  );\n};\n\nexport default CopyToClipboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,WAAW,GAAGL,MAAM,CAACC,IAAI,CAAC,CAACK,KAAK,CAAC;EAAEC,IAAI,EAAE;AAAS,CAAC,CAAC;AAC1D;AACA;AACA;AACA,WAAW,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACC,OAAO;AAC9C,CAAC;AAED,MAAMC,OAAO,GAAGX,MAAM,CAACY,GAAoC;AAC3D,aAAa,CAAC;EAAEC;AAAmB,CAAC,KAAMA,kBAAkB,GAAG,OAAO,GAAG,MAAO;AAChF;AACA;AACA;AACA;AACA;AACA,yBAAyB,CAAC;EAAEL;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACK,QAAQ;AAC7D,WAAW,CAAC;EAAEN;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACM,gBAAgB;AACvD;AACA;AACA,CAAC;AAED,MAAMC,eAAgC,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,KAAK;EAC3E,MAAM,CAACN,kBAAkB,EAAEO,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMsB,0BAA0B,GAAIC,OAAe,IAAK;IACtD,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IAC7CF,EAAE,CAACG,KAAK,GAAGJ,OAAO;IAClBE,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,EAAE,CAAC;IAC7BA,EAAE,CAACM,MAAM,CAAC,CAAC;IACXL,QAAQ,CAACM,WAAW,CAAC,MAAM,CAAC;IAC5BN,QAAQ,CAACG,IAAI,CAACI,WAAW,CAACR,EAAE,CAAC;EAC/B,CAAC;EAED,SAASS,cAAcA,CAAA,EAAG;IACxBZ,qBAAqB,CAAC,IAAI,CAAC;IAC3Ba,UAAU,CAAC,MAAM;MACfb,qBAAqB,CAAC,KAAK,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,oBACEhB,OAAA,CAACC,WAAW;IACV6B,KAAK;IACLC,IAAI;IACJC,OAAO,EAAEA,CAAA,KAAM;MACb,IAAIC,SAAS,CAACC,SAAS,IAAID,SAAS,CAACE,WAAW,EAAE;QAChDF,SAAS,CAACC,SAAS,CAACE,SAAS,CAACvB,MAAM,CAAC,CAACwB,IAAI,CAAC,MAAMT,cAAc,CAAC,CAAC,CAAC;MACpE,CAAC,MAAM,IAAIR,QAAQ,CAACkB,qBAAqB,CAAC,MAAM,CAAC,EAAE;QACjDrB,0BAA0B,CAACJ,MAAM,CAAC;QAClCe,cAAc,CAAC,CAAC;MAClB;IACF,CAAE;IAAA,GACEb,KAAK;IAAAD,QAAA,GAERA,QAAQ,eACTd,OAAA,CAACF,QAAQ;MAACyC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC,SAAS;MAACC,EAAE,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClD7C,OAAA,CAACO,OAAO;MAACE,kBAAkB,EAAEA,kBAAmB;MAAAK,QAAA,EAAC;IAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAElB,CAAC;AAED,eAAejC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}