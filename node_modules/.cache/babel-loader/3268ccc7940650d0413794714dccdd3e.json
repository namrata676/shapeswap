{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/components/Slider/Slider.tsx\";\nimport React from \"react\";\nimport { Box } from \"../Box\";\nimport { BunnySlider, BarBackground, BarProgress, BunnyButt, StyledInput, SliderLabel, SliderLabelContainer } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = _ref => {\n  let {\n    name,\n    min,\n    max,\n    value,\n    onValueChanged,\n    valueLabel,\n    step = \"any\",\n    disabled = false,\n    ...props\n  } = _ref;\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    onValueChanged(parseFloat(target.value));\n  };\n  const progressPercentage = value / max * 100;\n  const isMax = value === max;\n  let progressWidth;\n  if (progressPercentage <= 10) {\n    progressWidth = `${progressPercentage + 0.5}%`;\n  } else if (progressPercentage >= 90) {\n    progressWidth = `${progressPercentage - 4}%`;\n  } else if (progressPercentage >= 60) {\n    progressWidth = `${progressPercentage - 2.5}%`;\n  } else {\n    progressWidth = `${progressPercentage}%`;\n  }\n  const labelProgress = isMax ? \"calc(100% - 12px)\" : `${progressPercentage}%`;\n  const displayValueLabel = isMax ? \"MAX\" : valueLabel;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    height: \"48px\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(BunnyButt, {\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BunnySlider, {\n      children: [/*#__PURE__*/_jsxDEV(BarBackground, {\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarProgress, {\n        style: {\n          width: progressWidth\n        },\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        name: name,\n        type: \"range\",\n        min: min,\n        max: max,\n        value: value,\n        step: step,\n        onChange: handleChange,\n        isMax: isMax,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), valueLabel && /*#__PURE__*/_jsxDEV(SliderLabelContainer, {\n      children: /*#__PURE__*/_jsxDEV(SliderLabel, {\n        progress: labelProgress,\n        children: displayValueLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\nexport default Slider;","map":{"version":3,"names":["React","Box","BunnySlider","BarBackground","BarProgress","BunnyButt","StyledInput","SliderLabel","SliderLabelContainer","Slider","name","min","max","value","onValueChanged","valueLabel","step","disabled","props","handleChange","target","parseFloat","progressPercentage","isMax","progressWidth","labelProgress","displayValueLabel","width"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/components/Slider/Slider.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport { Box } from \"../Box\";\nimport {\n  BunnySlider,\n  BarBackground,\n  BarProgress,\n  BunnyButt,\n  StyledInput,\n  SliderLabel,\n  SliderLabelContainer,\n} from \"./styles\";\nimport SliderProps from \"./types\";\n\nconst Slider: React.FC<SliderProps> = ({\n  name,\n  min,\n  max,\n  value,\n  onValueChanged,\n  valueLabel,\n  step = \"any\",\n  disabled = false,\n  ...props\n}) => {\n  const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    onValueChanged(parseFloat(target.value));\n  };\n\n  const progressPercentage = (value / max) * 100;\n  const isMax = value === max;\n  let progressWidth: string;\n  if (progressPercentage <= 10) {\n    progressWidth = `${progressPercentage + 0.5}%`;\n  } else if (progressPercentage >= 90) {\n    progressWidth = `${progressPercentage - 4}%`;\n  } else if (progressPercentage >= 60) {\n    progressWidth = `${progressPercentage - 2.5}%`;\n  } else {\n    progressWidth = `${progressPercentage}%`;\n  }\n  const labelProgress = isMax ? \"calc(100% - 12px)\" : `${progressPercentage}%`;\n  const displayValueLabel = isMax ? \"MAX\" : valueLabel;\n  return (\n    <Box position=\"relative\" height=\"48px\" {...props}>\n      <BunnyButt disabled={disabled} />\n      <BunnySlider>\n        <BarBackground disabled={disabled} />\n        <BarProgress style={{ width: progressWidth }} disabled={disabled} />\n        <StyledInput\n          name={name}\n          type=\"range\"\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          onChange={handleChange}\n          isMax={isMax}\n          disabled={disabled}\n        />\n      </BunnySlider>\n      {valueLabel && (\n        <SliderLabelContainer>\n          <SliderLabel progress={labelProgress}>{displayValueLabel}</SliderLabel>\n        </SliderLabelContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default Slider;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAuB,OAAO;AAC1C,SAASC,GAAG,QAAQ,QAAQ;AAC5B,SACEC,WAAW,EACXC,aAAa,EACbC,WAAW,EACXC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,oBAAoB,QACf,UAAU;AAAC;AAGlB,MAAMC,MAA6B,GAAG,QAUhC;EAAA,IAViC;IACrCC,IAAI;IACJC,GAAG;IACHC,GAAG;IACHC,KAAK;IACLC,cAAc;IACdC,UAAU;IACVC,IAAI,GAAG,KAAK;IACZC,QAAQ,GAAG,KAAK;IAChB,GAAGC;EACL,CAAC;EACC,MAAMC,YAAY,GAAG,SAA+C;IAAA,IAA9C;MAAEC;IAAsC,CAAC;IAC7DN,cAAc,CAACO,UAAU,CAACD,MAAM,CAACP,KAAK,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMS,kBAAkB,GAAIT,KAAK,GAAGD,GAAG,GAAI,GAAG;EAC9C,MAAMW,KAAK,GAAGV,KAAK,KAAKD,GAAG;EAC3B,IAAIY,aAAqB;EACzB,IAAIF,kBAAkB,IAAI,EAAE,EAAE;IAC5BE,aAAa,GAAI,GAAEF,kBAAkB,GAAG,GAAI,GAAE;EAChD,CAAC,MAAM,IAAIA,kBAAkB,IAAI,EAAE,EAAE;IACnCE,aAAa,GAAI,GAAEF,kBAAkB,GAAG,CAAE,GAAE;EAC9C,CAAC,MAAM,IAAIA,kBAAkB,IAAI,EAAE,EAAE;IACnCE,aAAa,GAAI,GAAEF,kBAAkB,GAAG,GAAI,GAAE;EAChD,CAAC,MAAM;IACLE,aAAa,GAAI,GAAEF,kBAAmB,GAAE;EAC1C;EACA,MAAMG,aAAa,GAAGF,KAAK,GAAG,mBAAmB,GAAI,GAAED,kBAAmB,GAAE;EAC5E,MAAMI,iBAAiB,GAAGH,KAAK,GAAG,KAAK,GAAGR,UAAU;EACpD,oBACE,QAAC,GAAG;IAAC,QAAQ,EAAC,UAAU;IAAC,MAAM,EAAC,MAAM;IAAA,GAAKG,KAAK;IAAA,wBAC9C,QAAC,SAAS;MAAC,QAAQ,EAAED;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACjC,QAAC,WAAW;MAAA,wBACV,QAAC,aAAa;QAAC,QAAQ,EAAEA;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC,QAAC,WAAW;QAAC,KAAK,EAAE;UAAEU,KAAK,EAAEH;QAAc,CAAE;QAAC,QAAQ,EAAEP;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eACpE,QAAC,WAAW;QACV,IAAI,EAAEP,IAAK;QACX,IAAI,EAAC,OAAO;QACZ,GAAG,EAAEC,GAAI;QACT,GAAG,EAAEC,GAAI;QACT,KAAK,EAAEC,KAAM;QACb,IAAI,EAAEG,IAAK;QACX,QAAQ,EAAEG,YAAa;QACvB,KAAK,EAAEI,KAAM;QACb,QAAQ,EAAEN;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACU,EACbF,UAAU,iBACT,QAAC,oBAAoB;MAAA,uBACnB,QAAC,WAAW;QAAC,QAAQ,EAAEU,aAAc;QAAA,UAAEC;MAAiB;QAAA;QAAA;QAAA;MAAA;IAAe;MAAA;MAAA;MAAA;IAAA,QAE1E;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAED,eAAejB,MAAM"},"metadata":{},"sourceType":"module"}