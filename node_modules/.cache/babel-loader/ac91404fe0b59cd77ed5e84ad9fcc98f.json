{"ast":null,"code":"// import invariant from 'tiny-invariant'\nimport JSBI from'jsbi';import{CurrencyAmount}from'./currencyAmount';export class TokenAmount extends CurrencyAmount{// amount _must_ be raw, i.e. in the native representation\nconstructor(token,amount){super(token,amount);this.token=void 0;this.token=token;}add(other){// invariant(this.token.equals(other.token), 'TOKEN')\nreturn new TokenAmount(this.token,JSBI.add(this.raw,other.raw));}subtract(other){// invariant(this.token.equals(other.token), 'TOKEN')\nreturn new TokenAmount(this.token,JSBI.subtract(this.raw,other.raw));}}","map":{"version":3,"names":["JSBI","CurrencyAmount","TokenAmount","constructor","token","amount","add","other","raw","subtract"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/toolkit/sdk/entities/fractions/tokenAmount.ts"],"sourcesContent":["// import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { CurrencyAmount } from './currencyAmount'\nimport { Token } from '../token'\n\nimport { BigintIsh } from '../../constants'\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token\n\n  // amount _must_ be raw, i.e. in the native representation\n  public constructor(token: Token, amount: BigintIsh) {\n    super(token, amount)\n    this.token = token\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    // invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    // invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw))\n  }\n}\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,IAAI,KAAM,MAAM,CACvB,OAASC,cAAc,KAAQ,kBAAkB,CAKjD,MAAO,MAAM,CAAAC,WAAW,QAAS,CAAAD,cAAe,CAG9C;AACOE,WAAWA,CAACC,KAAY,CAAEC,MAAiB,CAAE,CAClD,KAAK,CAACD,KAAK,CAAEC,MAAM,CAAC,MAJND,KAAK,QAKnB,IAAI,CAACA,KAAK,CAAGA,KAAK,CACpB,CAEOE,GAAGA,CAACC,KAAkB,CAAe,CAC1C;AACA,MAAO,IAAI,CAAAL,WAAW,CAAC,IAAI,CAACE,KAAK,CAAEJ,IAAI,CAACM,GAAG,CAAC,IAAI,CAACE,GAAG,CAAED,KAAK,CAACC,GAAG,CAAC,CAAC,CACnE,CAEOC,QAAQA,CAACF,KAAkB,CAAe,CAC/C;AACA,MAAO,IAAI,CAAAL,WAAW,CAAC,IAAI,CAACE,KAAK,CAAEJ,IAAI,CAACS,QAAQ,CAAC,IAAI,CAACD,GAAG,CAAED,KAAK,CAACC,GAAG,CAAC,CAAC,CACxE,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}