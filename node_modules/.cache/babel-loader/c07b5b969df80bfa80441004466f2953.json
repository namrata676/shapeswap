{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/components/ButtonMenu/ButtonMenu.tsx\";\nimport React, { cloneElement, Children } from \"react\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { scales, variants } from \"../Button/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBackgroundColor = ({\n  theme,\n  variant\n}) => {\n  return theme.colors[variant === variants.SUBTLE ? \"backgroundAlt\" : \"tertiary\"];\n};\nconst getBorderColor = ({\n  theme,\n  variant\n}) => {\n  return theme.colors[variant === variants.SUBTLE ? \"inputSecondary\" : \"cardBorder\"];\n};\nconst StyledButtonMenu = styled.div`\n  background-color: ${getBackgroundColor};\n  border-radius: 8px;\n  display: inline-flex;\n  border: 1px solid ${getBorderColor};\n\n  & > button + button,\n  & > a + a {\n    margin-left: 2px; // To avoid focus shadow overlap\n  }\n\n  & > button,\n  & a {\n    box-shadow: none;\n  }\n\n  ${({\n  disabled,\n  theme,\n  variant\n}) => {\n  if (disabled) {\n    return `\n        opacity: 0.5;\n\n        & > button:disabled {\n          background-color: transparent;\n          color: ${variant === variants.PRIMARY ? theme.colors.primary : theme.colors.textSubtle};\n        }\n    `;\n  }\n  return \"\";\n}}\n  ${space}\n`;\nconst ButtonMenu = ({\n  activeIndex = 0,\n  scale = scales.MD,\n  variant = variants.PRIMARY,\n  onItemClick,\n  disabled,\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledButtonMenu, {\n    disabled: disabled,\n    variant: variant,\n    ...props,\n    children: Children.map(children, (child, index) => {\n      return /*#__PURE__*/cloneElement(child, {\n        isActive: activeIndex === index,\n        onClick: onItemClick ? () => onItemClick(index) : undefined,\n        scale,\n        variant,\n        disabled\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\nexport default ButtonMenu;","map":{"version":3,"names":["React","cloneElement","Children","styled","space","scales","variants","jsxDEV","_jsxDEV","getBackgroundColor","theme","variant","colors","SUBTLE","getBorderColor","StyledButtonMenu","div","disabled","PRIMARY","primary","textSubtle","ButtonMenu","activeIndex","scale","MD","onItemClick","children","props","map","child","index","isActive","onClick","undefined","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/components/ButtonMenu/ButtonMenu.tsx"],"sourcesContent":["import React, { cloneElement, Children, ReactElement } from \"react\";\nimport styled, { DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { scales, variants } from \"../Button/types\";\nimport { ButtonMenuProps } from \"./types\";\n\ninterface StyledButtonMenuProps extends ButtonMenuProps {\n  theme: DefaultTheme;\n}\n\nconst getBackgroundColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? \"backgroundAlt\" : \"tertiary\"];\n};\n\nconst getBorderColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? \"inputSecondary\" : \"cardBorder\"];\n};\n\nconst StyledButtonMenu = styled.div<StyledButtonMenuProps>`\n  background-color: ${getBackgroundColor};\n  border-radius: 8px;\n  display: inline-flex;\n  border: 1px solid ${getBorderColor};\n\n  & > button + button,\n  & > a + a {\n    margin-left: 2px; // To avoid focus shadow overlap\n  }\n\n  & > button,\n  & a {\n    box-shadow: none;\n  }\n\n  ${({ disabled, theme, variant }) => {\n    if (disabled) {\n      return `\n        opacity: 0.5;\n\n        & > button:disabled {\n          background-color: transparent;\n          color: ${variant === variants.PRIMARY ? theme.colors.primary : theme.colors.textSubtle};\n        }\n    `;\n    }\n    return \"\";\n  }}\n  ${space}\n`;\n\nconst ButtonMenu: React.FC<ButtonMenuProps> = ({\n  activeIndex = 0,\n  scale = scales.MD,\n  variant = variants.PRIMARY,\n  onItemClick,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledButtonMenu disabled={disabled} variant={variant} {...props}>\n      {Children.map(children, (child: ReactElement, index) => {\n        return cloneElement(child, {\n          isActive: activeIndex === index,\n          onClick: onItemClick ? () => onItemClick(index) : undefined,\n          scale,\n          variant,\n          disabled,\n        });\n      })}\n    </StyledButtonMenu>\n  );\n};\n\nexport default ButtonMenu;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,YAAY,EAAEC,QAAQ,QAAsB,OAAO;AACnE,OAAOC,MAAM,MAAwB,mBAAmB;AACxD,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAA+B,CAAC,KAAK;EACxE,OAAOD,KAAK,CAACE,MAAM,CAACD,OAAO,KAAKL,QAAQ,CAACO,MAAM,GAAG,eAAe,GAAG,UAAU,CAAC;AACjF,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAC;EAAEJ,KAAK;EAAEC;AAA+B,CAAC,KAAK;EACpE,OAAOD,KAAK,CAACE,MAAM,CAACD,OAAO,KAAKL,QAAQ,CAACO,MAAM,GAAG,gBAAgB,GAAG,YAAY,CAAC;AACpF,CAAC;AAED,MAAME,gBAAgB,GAAGZ,MAAM,CAACa,GAA0B;AAC1D,sBAAsBP,kBAAkB;AACxC;AACA;AACA,sBAAsBK,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;EAAEG,QAAQ;EAAEP,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAClC,IAAIM,QAAQ,EAAE;IACZ,OAAO;AACb;AACA;AACA;AACA;AACA,mBAAmBN,OAAO,KAAKL,QAAQ,CAACY,OAAO,GAAGR,KAAK,CAACE,MAAM,CAACO,OAAO,GAAGT,KAAK,CAACE,MAAM,CAACQ,UAAU;AAChG;AACA,KAAK;EACD;EACA,OAAO,EAAE;AACX,CAAC;AACH,IAAIhB,KAAK;AACT,CAAC;AAED,MAAMiB,UAAqC,GAAGA,CAAC;EAC7CC,WAAW,GAAG,CAAC;EACfC,KAAK,GAAGlB,MAAM,CAACmB,EAAE;EACjBb,OAAO,GAAGL,QAAQ,CAACY,OAAO;EAC1BO,WAAW;EACXR,QAAQ;EACRS,QAAQ;EACR,GAAGC;AACL,CAAC,KAAK;EACJ,oBACEnB,OAAA,CAACO,gBAAgB;IAACE,QAAQ,EAAEA,QAAS;IAACN,OAAO,EAAEA,OAAQ;IAAA,GAAKgB,KAAK;IAAAD,QAAA,EAC9DxB,QAAQ,CAAC0B,GAAG,CAACF,QAAQ,EAAE,CAACG,KAAmB,EAAEC,KAAK,KAAK;MACtD,oBAAO7B,YAAY,CAAC4B,KAAK,EAAE;QACzBE,QAAQ,EAAET,WAAW,KAAKQ,KAAK;QAC/BE,OAAO,EAAEP,WAAW,GAAG,MAAMA,WAAW,CAACK,KAAK,CAAC,GAAGG,SAAS;QAC3DV,KAAK;QACLZ,OAAO;QACPM;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEvB,CAAC;AAED,eAAehB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}