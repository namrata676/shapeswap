{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { updateBlockNumber } from './actions';\nconst initialState = {\n  blockNumber: {}\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}));","map":{"version":3,"names":["createReducer","updateBlockNumber","initialState","blockNumber","builder","addCase","state","action","chainId","payload","Math","max"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/application/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,iBAAiB,QAAQ,WAAW;AAM7C,MAAMC,YAA8B,GAAG;EACrCC,WAAW,EAAE,CAAC;AAChB,CAAC;AAED,eAAeH,aAAa,CAACE,YAAY,EAAGE,OAAO,IACjDA,OAAO,CAACC,OAAO,CAACJ,iBAAiB,EAAE,CAACK,KAAK,EAAEC,MAAM,KAAK;EACpD,MAAM;IAAEC,OAAO;IAAEL;EAAY,CAAC,GAAGI,MAAM,CAACE,OAAO;EAC/C,IAAI,OAAOH,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,KAAK,QAAQ,EAAE;IAClDF,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,GAAGL,WAAW;EAC1C,CAAC,MAAM;IACLG,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACR,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,CAAC;EAChF;AACF,CAAC,CAAC,CACH"},"metadata":{},"sourceType":"module"}