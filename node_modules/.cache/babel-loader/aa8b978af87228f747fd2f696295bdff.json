{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")),\n  CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", {\n  enumerable: true,\n  get: function () {\n    return types_1.ClientError;\n  }\n});\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n  var oHeaders = {};\n  if (headers) {\n    if (typeof Headers !== 'undefined' && headers instanceof Headers || headers instanceof CrossFetch.Headers) {\n      oHeaders = HeadersInstanceToPlainObject(headers);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (_a) {\n        var name = _a[0],\n          value = _a[1];\n        oHeaders[name] = value;\n      });\n    } else {\n      oHeaders = headers;\n    }\n  }\n  return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nvar queryCleanner = function (str) {\n  return str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim();\n};\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nvar buildGetQueryParams = function (_a) {\n  var query = _a.query,\n    variables = _a.variables,\n    operationName = _a.operationName;\n  if (!Array.isArray(query)) {\n    var search = [\"query=\" + encodeURIComponent(queryCleanner(query))];\n    if (variables) {\n      search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n    }\n    if (operationName) {\n      search.push(\"operationName=\" + encodeURIComponent(operationName));\n    }\n    return search.join('&');\n  }\n  if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n    throw new Error('Cannot create query with given variable type, array expected');\n  }\n  // Batch support\n  var payload = query.reduce(function (accu, currentQuery, index) {\n    accu.push({\n      query: queryCleanner(currentQuery),\n      variables: variables ? JSON.stringify(variables[index]) : undefined\n    });\n    return accu;\n  }, []);\n  return \"query=\" + encodeURIComponent(JSON.stringify(payload));\n};\n/**\n * Fetch data using POST method\n */\nvar post = function (_a) {\n  var url = _a.url,\n    query = _a.query,\n    variables = _a.variables,\n    operationName = _a.operationName,\n    headers = _a.headers,\n    fetch = _a.fetch,\n    fetchOptions = _a.fetchOptions;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          body = createRequestBody_1.default(query, variables, operationName);\n          return [4 /*yield*/, fetch(url, __assign({\n            method: 'POST',\n            headers: __assign(__assign({}, typeof body === 'string' ? {\n              'Content-Type': 'application/json'\n            } : {}), headers),\n            body: body\n          }, fetchOptions))];\n        case 1:\n          return [2 /*return*/, _b.sent()];\n      }\n    });\n  });\n};\n/**\n * Fetch data using GET method\n */\nvar get = function (_a) {\n  var url = _a.url,\n    query = _a.query,\n    variables = _a.variables,\n    operationName = _a.operationName,\n    headers = _a.headers,\n    fetch = _a.fetch,\n    fetchOptions = _a.fetchOptions;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var queryParams;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          queryParams = buildGetQueryParams({\n            query: query,\n            variables: variables,\n            operationName: operationName\n          });\n          return [4 /*yield*/, fetch(url + \"?\" + queryParams, __assign({\n            method: 'GET',\n            headers: headers\n          }, fetchOptions))];\n        case 1:\n          return [2 /*return*/, _b.sent()];\n      }\n    });\n  });\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */function () {\n  function GraphQLClient(url, options) {\n    this.url = url;\n    this.options = options || {};\n  }\n  GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n    var _a = this.options,\n      headers = _a.headers,\n      _b = _a.fetch,\n      fetch = _b === void 0 ? cross_fetch_1.default : _b,\n      _c = _a.method,\n      method = _c === void 0 ? 'POST' : _c,\n      fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n    var url = this.url;\n    return makeRequest({\n      url: url,\n      query: query,\n      variables: variables,\n      headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n      operationName: undefined,\n      fetch: fetch,\n      method: method,\n      fetchOptions: fetchOptions\n    });\n  };\n  /**\n   * Send a GraphQL document to the server.\n   */\n  GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n            url = this.url;\n            _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n            return [4 /*yield*/, makeRequest({\n              url: url,\n              query: query,\n              variables: variables,\n              headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n              operationName: operationName,\n              fetch: fetch,\n              method: method,\n              fetchOptions: fetchOptions\n            })];\n          case 1:\n            data = _e.sent().data;\n            return [2 /*return*/, data];\n        }\n      });\n    });\n  };\n  /**\n   * Send a GraphQL document to the server.\n   */\n  GraphQLClient.prototype.batchRequests = function (documents, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, _b, fetch, _c, method, fetchOptions, url, queries, variables, data;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n            url = this.url;\n            queries = documents.map(function (_a) {\n              var document = _a.document;\n              return resolveRequestDocument(document).query;\n            });\n            variables = documents.map(function (_a) {\n              var variables = _a.variables;\n              return variables;\n            });\n            return [4 /*yield*/, makeRequest({\n              url: url,\n              query: queries,\n              variables: variables,\n              headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n              operationName: undefined,\n              fetch: fetch,\n              method: method,\n              fetchOptions: fetchOptions\n            })];\n          case 1:\n            data = _d.sent().data;\n            return [2 /*return*/, data];\n        }\n      });\n    });\n  };\n  GraphQLClient.prototype.setHeaders = function (headers) {\n    this.options.headers = headers;\n    return this;\n  };\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n  GraphQLClient.prototype.setHeader = function (key, value) {\n    var _a;\n    var headers = this.options.headers;\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value;\n    } else {\n      this.options.headers = (_a = {}, _a[key] = value, _a);\n    }\n    return this;\n  };\n  /**\n   * Change the client endpoint. All subsequent requests will send to this endpoint.\n   */\n  GraphQLClient.prototype.setEndpoint = function (value) {\n    this.url = value;\n    return this;\n  };\n  return GraphQLClient;\n}();\nexports.GraphQLClient = GraphQLClient;\nfunction makeRequest(_a) {\n  var url = _a.url,\n    query = _a.query,\n    variables = _a.variables,\n    headers = _a.headers,\n    operationName = _a.operationName,\n    fetch = _a.fetch,\n    _b = _a.method,\n    method = _b === void 0 ? 'POST' : _b,\n    fetchOptions = _a.fetchOptions;\n  return __awaiter(this, void 0, void 0, function () {\n    var fetcher, isBathchingQuery, response, result, successfullyReceivedData, headers_1, status_1, errorResult;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          fetcher = method.toUpperCase() === 'POST' ? post : get;\n          isBathchingQuery = Array.isArray(query);\n          return [4 /*yield*/, fetcher({\n            url: url,\n            query: query,\n            variables: variables,\n            operationName: operationName,\n            headers: headers,\n            fetch: fetch,\n            fetchOptions: fetchOptions\n          })];\n        case 1:\n          response = _c.sent();\n          return [4 /*yield*/, getResult(response)];\n        case 2:\n          result = _c.sent();\n          successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {\n            var data = _a.data;\n            return !data;\n          }) : !!result.data;\n          if (response.ok && !result.errors && successfullyReceivedData) {\n            headers_1 = response.headers, status_1 = response.status;\n            return [2 /*return*/, __assign(__assign({}, isBathchingQuery ? {\n              data: result\n            } : result), {\n              headers: headers_1,\n              status: status_1\n            })];\n          } else {\n            errorResult = typeof result === 'string' ? {\n              error: result\n            } : result;\n            throw new types_1.ClientError(__assign(__assign({}, errorResult), {\n              status: response.status,\n              headers: response.headers\n            }), {\n              query: query,\n              variables: variables\n            });\n          }\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/**\n * todo\n */\nfunction rawRequest(url, query, variables, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.rawRequest(query, variables, requestHeaders)];\n    });\n  });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.request(document, variables, requestHeaders)];\n    });\n  });\n}\nexports.request = request;\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nfunction batchRequests(url, documents, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.batchRequests(documents, requestHeaders)];\n    });\n  });\n}\nexports.batchRequests = batchRequests;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n  var contentType = response.headers.get('Content-Type');\n  if (contentType && contentType.startsWith('application/json')) {\n    return response.json();\n  } else {\n    return response.text();\n  }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n  var _a;\n  if (typeof document === 'string') return {\n    query: document\n  };\n  var operationName = undefined;\n  var operationDefinitions = document.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  });\n  if (operationDefinitions.length === 1) {\n    operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n  }\n  return {\n    query: printer_1.print(document),\n    operationName: operationName\n  };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n  var variables = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    variables[_i - 1] = arguments[_i];\n  }\n  return chunks.reduce(function (accumulator, chunk, index) {\n    return \"\" + accumulator + chunk + (index in variables ? variables[index] : '');\n  }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n  var o = {};\n  headers.forEach(function (v, k) {\n    o[k] = v;\n  });\n  return o;\n}","map":{"version":3,"names":["cross_fetch_1","__importStar","require","CrossFetch","printer_1","createRequestBody_1","__importDefault","types_1","Object","defineProperty","exports","enumerable","get","ClientError","resolveHeaders","headers","oHeaders","Headers","HeadersInstanceToPlainObject","Array","isArray","forEach","_a","name","value","queryCleanner","str","replace","trim","buildGetQueryParams","query","variables","operationName","search","encodeURIComponent","push","JSON","stringify","join","Error","payload","reduce","accu","currentQuery","index","undefined","post","url","fetch","fetchOptions","body","default","__assign","method","_b","sent","queryParams","GraphQLClient","options","prototype","rawRequest","requestHeaders","_c","__rest","makeRequest","request","document","_d","resolveRequestDocument","data","_e","batchRequests","documents","queries","map","setHeaders","setHeader","key","setEndpoint","fetcher","toUpperCase","isBathchingQuery","response","getResult","result","successfullyReceivedData","some","ok","errors","headers_1","status_1","status","errorResult","error","client","contentType","startsWith","json","text","operationDefinitions","definitions","filter","definition","kind","length","print","gql","chunks","_i","arguments","accumulator","chunk","o","v","k"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}