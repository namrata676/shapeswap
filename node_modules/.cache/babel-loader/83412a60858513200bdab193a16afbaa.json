{"ast":null,"code":"/* eslint-disable prefer-destructuring */\nimport JSBI from 'jsbi';\nimport { SolidityType } from '../constants';\nimport { validateSolidityTypeInstance } from '../utils';\n\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\nexport class Currency {\n  /**\n   * The only instance of the base class `Currency`.\n   */\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  constructor(decimals, symbol, name) {\n    this.decimals = void 0;\n    this.symbol = void 0;\n    this.name = void 0;\n    validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8);\n    this.decimals = decimals;\n    this.symbol = symbol;\n    this.name = name;\n  }\n}\nCurrency.ETHER = new Currency(18, 'BNB', 'BNB');\nconst ETHER = Currency.ETHER;\nexport { ETHER };","map":{"version":3,"names":["JSBI","SolidityType","validateSolidityTypeInstance","Currency","constructor","decimals","symbol","name","BigInt","uint8","ETHER"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/toolkit/sdk/entities/currency.ts"],"sourcesContent":["/* eslint-disable prefer-destructuring */\nimport JSBI from 'jsbi'\n\nimport { SolidityType } from '../constants'\nimport { validateSolidityTypeInstance } from '../utils'\n\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\nexport class Currency {\n  public readonly decimals: number\n\n  public readonly symbol?: string\n\n  public readonly name?: string\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly ETHER: Currency = new Currency(18, 'BNB', 'BNB')\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(decimals: number, symbol?: string, name?: string) {\n    validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8)\n\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n}\n\nconst ETHER = Currency.ETHER\n\nexport { ETHER }\n"],"mappings":"AAAA;AACA,OAAOA,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,4BAA4B,QAAQ,UAAU;;AAEvD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,CAAC;EAOpB;AACF;AACA;;EAGE;AACF;AACA;AACA;AACA;AACA;EACYC,WAAW,CAACC,QAAgB,EAAEC,MAAe,EAAEC,IAAa,EAAE;IAAA,KAjBxDF,QAAQ;IAAA,KAERC,MAAM;IAAA,KAENC,IAAI;IAclBL,4BAA4B,CAACF,IAAI,CAACQ,MAAM,CAACH,QAAQ,CAAC,EAAEJ,YAAY,CAACQ,KAAK,CAAC;IAEvE,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;AACF;AAzBaJ,QAAQ,CAUIO,KAAK,GAAa,IAAIP,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;AAiBzE,MAAMO,KAAK,GAAGP,QAAQ,CAACO,KAAK;AAE5B,SAASA,KAAK"},"metadata":{},"sourceType":"module"}