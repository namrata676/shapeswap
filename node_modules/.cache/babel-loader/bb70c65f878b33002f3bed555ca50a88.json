{"ast":null,"code":"/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri) {\n  var _uri$match, _uri$match2;\n  const protocol = uri.split(':')[0].toLowerCase();\n  switch (protocol) {\n    case 'https':\n      return [uri];\n    case 'http':\n      return [`https${uri.substr(4)}`, uri];\n    case 'ipfs':\n      const hash = (_uri$match = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)) === null || _uri$match === void 0 ? void 0 : _uri$match[2];\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`];\n    case 'ipns':\n      const name = (_uri$match2 = uri.match(/^ipns:(\\/\\/)?(.*)$/i)) === null || _uri$match2 === void 0 ? void 0 : _uri$match2[2];\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`];\n    default:\n      return [];\n  }\n}","map":{"version":3,"names":["uriToHttp","uri","protocol","split","toLowerCase","substr","hash","match","name"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/utils/uriToHttp.ts"],"sourcesContent":["/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,SAAS,CAACC,GAAW,EAAY;EAAA;EACvD,MAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;EAChD,QAAQF,QAAQ;IACd,KAAK,OAAO;MACV,OAAO,CAACD,GAAG,CAAC;IACd,KAAK,MAAM;MACT,OAAO,CAAE,QAAOA,GAAG,CAACI,MAAM,CAAC,CAAC,CAAE,EAAC,EAAEJ,GAAG,CAAC;IACvC,KAAK,MAAM;MACT,MAAMK,IAAI,iBAAGL,GAAG,CAACM,KAAK,CAAC,qBAAqB,CAAC,+CAAhC,WAAmC,CAAC,CAAC;MAClD,OAAO,CAAE,oCAAmCD,IAAK,GAAE,EAAG,wBAAuBA,IAAK,GAAE,CAAC;IACvF,KAAK,MAAM;MACT,MAAME,IAAI,kBAAGP,GAAG,CAACM,KAAK,CAAC,qBAAqB,CAAC,gDAAhC,YAAmC,CAAC,CAAC;MAClD,OAAO,CAAE,oCAAmCC,IAAK,GAAE,EAAG,wBAAuBA,IAAK,GAAE,CAAC;IACvF;MACE,OAAO,EAAE;EAAA;AAEf"},"metadata":{},"sourceType":"module"}