{"ast":null,"code":"import React from\"react\";import{useModal}from\"../Modal\";import ConnectModal from\"./ConnectModal\";import AccountModal from\"./AccountModal\";import{jsx as _jsx}from\"react/jsx-runtime\";const useWalletModal=(login,logout,account)=>{const[onPresentConnectModal]=useModal(/*#__PURE__*/_jsx(ConnectModal,{login:login}));const[onPresentAccountModal]=useModal(/*#__PURE__*/_jsx(AccountModal,{account:account||\"\",logout:logout}));return{onPresentConnectModal,onPresentAccountModal};};export default useWalletModal;","map":{"version":3,"names":["React","useModal","ConnectModal","AccountModal","jsx","_jsx","useWalletModal","login","logout","account","onPresentConnectModal","onPresentAccountModal"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/uikit/widgets/WalletModal/useWalletModal.tsx"],"sourcesContent":["import React from \"react\";\nimport { useModal } from \"../Modal\";\nimport ConnectModal from \"./ConnectModal\";\nimport AccountModal from \"./AccountModal\";\nimport { Login } from \"./types\";\n\ninterface ReturnType {\n  onPresentConnectModal: () => void;\n  onPresentAccountModal: () => void;\n}\n\nconst useWalletModal = (login: Login, logout: () => void, account?: string): ReturnType => {\n  const [onPresentConnectModal] = useModal(<ConnectModal login={login} />);\n  const [onPresentAccountModal] = useModal(<AccountModal account={account || \"\"} logout={logout} />);\n  return { onPresentConnectModal, onPresentAccountModal };\n};\n\nexport default useWalletModal;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,UAAU,CACnC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAQ1C,KAAM,CAAAC,cAAc,CAAGA,CAACC,KAAY,CAAEC,MAAkB,CAAEC,OAAgB,GAAiB,CACzF,KAAM,CAACC,qBAAqB,CAAC,CAAGT,QAAQ,cAACI,IAAA,CAACH,YAAY,EAACK,KAAK,CAAEA,KAAM,CAAE,CAAC,CAAC,CACxE,KAAM,CAACI,qBAAqB,CAAC,CAAGV,QAAQ,cAACI,IAAA,CAACF,YAAY,EAACM,OAAO,CAAEA,OAAO,EAAI,EAAG,CAACD,MAAM,CAAEA,MAAO,CAAE,CAAC,CAAC,CAClG,MAAO,CAAEE,qBAAqB,CAAEC,qBAAsB,CAAC,CACzD,CAAC,CAED,cAAe,CAAAL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}