{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport useDebounce from 'hooks/useDebounce';\nimport useIsWindowVisible from 'hooks/useIsWindowVisible';\nimport { updateBlockNumber } from './actions';\nexport default function Updater() {\n  const {\n    library,\n    chainId\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  const windowVisible = useIsWindowVisible();\n  const [state, setState] = useState({\n    chainId,\n    blockNumber: null\n  });\n  const blockNumberCallback = useCallback(blockNumber => {\n    setState(prev => {\n      if (chainId === prev.chainId) {\n        if (typeof prev.blockNumber !== 'number') return {\n          chainId,\n          blockNumber\n        };\n        return {\n          chainId,\n          blockNumber: Math.max(blockNumber, prev.blockNumber)\n        };\n      }\n      return prev;\n    });\n  }, [chainId, setState]);\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined;\n    setState({\n      chainId,\n      blockNumber: null\n    });\n    library.getBlockNumber().then(blockNumberCallback).catch(error => console.error(`Failed to get block number for chainId: ${chainId}`, error));\n    library.on('block', blockNumberCallback);\n    return () => {\n      library.removeListener('block', blockNumberCallback);\n    };\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible]);\n  const debouncedState = useDebounce(state, 100);\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\n    dispatch(updateBlockNumber({\n      chainId: debouncedState.chainId,\n      blockNumber: debouncedState.blockNumber\n    }));\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n  return null;\n}","map":{"version":3,"names":["useCallback","useEffect","useState","useDispatch","useActiveWeb3React","useDebounce","useIsWindowVisible","updateBlockNumber","Updater","library","chainId","dispatch","windowVisible","state","setState","blockNumber","blockNumberCallback","prev","Math","max","undefined","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/application/updater.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,kBAAkB,MAAM,0BAA0B;AACzD,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,kBAAkB,MAAM,0BAA0B;AACzD,SAASC,iBAAiB,QAAQ,WAAW;AAE7C,eAAe,SAASC,OAAOA,CAAA,EAAS;EACtC,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGN,kBAAkB,CAAC,CAAC;EACjD,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,aAAa,GAAGN,kBAAkB,CAAC,CAAC;EAE1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAA8D;IAC9FQ,OAAO;IACPK,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,mBAAmB,GAAGhB,WAAW,CACpCe,WAAmB,IAAK;IACvBD,QAAQ,CAAEG,IAAI,IAAK;MACjB,IAAIP,OAAO,KAAKO,IAAI,CAACP,OAAO,EAAE;QAC5B,IAAI,OAAOO,IAAI,CAACF,WAAW,KAAK,QAAQ,EAAE,OAAO;UAAEL,OAAO;UAAEK;QAAY,CAAC;QACzE,OAAO;UAAEL,OAAO;UAAEK,WAAW,EAAEG,IAAI,CAACC,GAAG,CAACJ,WAAW,EAAEE,IAAI,CAACF,WAAW;QAAE,CAAC;MAC1E;MACA,OAAOE,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EACD,CAACP,OAAO,EAAEI,QAAQ,CACpB,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,OAAO,IAAI,CAACC,OAAO,IAAI,CAACE,aAAa,EAAE,OAAOQ,SAAS;IAE5DN,QAAQ,CAAC;MAAEJ,OAAO;MAAEK,WAAW,EAAE;IAAK,CAAC,CAAC;IAExCN,OAAO,CACJY,cAAc,CAAC,CAAC,CAChBC,IAAI,CAACN,mBAAmB,CAAC,CACzBO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2CAA2Cd,OAAO,EAAE,EAAEc,KAAK,CAAC,CAAC;IAE/Ff,OAAO,CAACiB,EAAE,CAAC,OAAO,EAAEV,mBAAmB,CAAC;IACxC,OAAO,MAAM;MACXP,OAAO,CAACkB,cAAc,CAAC,OAAO,EAAEX,mBAAmB,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACL,QAAQ,EAAED,OAAO,EAAED,OAAO,EAAEO,mBAAmB,EAAEJ,aAAa,CAAC,CAAC;EAEpE,MAAMgB,cAAc,GAAGvB,WAAW,CAACQ,KAAK,EAAE,GAAG,CAAC;EAE9CZ,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2B,cAAc,CAAClB,OAAO,IAAI,CAACkB,cAAc,CAACb,WAAW,IAAI,CAACH,aAAa,EAAE;IAC9ED,QAAQ,CAACJ,iBAAiB,CAAC;MAAEG,OAAO,EAAEkB,cAAc,CAAClB,OAAO;MAAEK,WAAW,EAAEa,cAAc,CAACb;IAAY,CAAC,CAAC,CAAC;EAC3G,CAAC,EAAE,CAACH,aAAa,EAAED,QAAQ,EAAEiB,cAAc,CAACb,WAAW,EAAEa,cAAc,CAAClB,OAAO,CAAC,CAAC;EAEjF,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module"}