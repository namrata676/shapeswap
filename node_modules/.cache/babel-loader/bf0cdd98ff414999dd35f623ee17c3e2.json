{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/mintModal/TransactionSettings.tsx\";\nimport React, { useState } from 'react';\nimport Web3 from \"web3\";\nimport { useTranslation } from 'contexts/Localization';\nimport { Button } from 'toolkit/uikit';\nimport styled from 'styled-components';\nimport { useModal } from 'toolkit/uikit';\nimport CoinsModal from '../coinsModal/CoinsModal';\nimport CoinsSelectModal from '../coinsSelectModal/CoinsSelectModal';\nimport { toast } from 'react-toastify';\nimport { AutoColumn } from '../../components/Layout/Column';\nimport { getTokenImage, getNetwork } from './avalancheutils';\nimport { setupNetwork2, setupNetwork1 } from '../../utils/wallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SlippageError; // enum DeadlineError {\n//   InvalidInput = 'InvalidInput',\n// }\n(function (SlippageError) {\n  SlippageError[\"InvalidInput\"] = \"InvalidInput\";\n  SlippageError[\"RiskyLow\"] = \"RiskyLow\";\n  SlippageError[\"RiskyHigh\"] = \"RiskyHigh\";\n})(SlippageError || (SlippageError = {}));\nconst StyledButton = styled(Button)`\n \n  width: 85px !important;\n  height: 32px !important;\n  border-radius: 8px !important;\n  margin-right: 10px !important;\n`;\nexport default function SlippageTabs() {\n  var _token1List;\n  const [slippageInput, setSlippageInput] = useState('');\n  const [selectButton, setSelectButton] = useState('None');\n  const [currentChain, setCurrentChain] = useState(0);\n  const [chainChanged, setChainChanged] = useState(false);\n  const {\n    ethereum\n  } = window;\n  if (ethereum) {\n    const outerHtmlElement = ethereum;\n    outerHtmlElement.on(\"chainChanged\", async _chainId => {\n      setChainChanged(!chainChanged);\n      const chain = await web3.eth.getChainId();\n      setCurrentChain(chain);\n    });\n  }\n\n  // const [deadlineInput, setDeadlineInput] = useState('')\n\n  const {\n    t\n  } = useTranslation();\n  // const { account } = useWeb3React()\n  const web3 = new Web3(window.ethereum);\n  const [showBalance, setShowBalance] = useState(false);\n  const notifyEth = () => {\n    toast.warning('Please connect to ethereum network !', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true\n    });\n    errorSound.play();\n  };\n  const networkSelect1 = async (tokenName, selectNetwork) => {\n    setGetNetwork1(selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name);\n    if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"bsc\") {\n      setupNetwork1(56);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"avalanche\") {\n      setupNetwork2();\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"polygon\") {\n      setupNetwork1(137);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"ethereum\") {\n      console.log('currentchain', currentChain);\n      if (currentChain !== 1) {\n        notifyEth();\n      }\n      setupNetwork1(1);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"fantom\") {\n      setupNetwork1(250);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"optimism\") {\n      setupNetwork1(10);\n    } else if ((selectNetwork === null || selectNetwork === void 0 ? void 0 : selectNetwork.name) === \"arbitrum\") {\n      setupNetwork1(42161);\n    }\n  };\n  const [onPresentNetworkModal] = useModal( /*#__PURE__*/_jsxDEV(CoinsModal, {\n    tokenFunc2: networkSelect1,\n    ListData: swapType === 2 ? networkList : networkListCross,\n    tokenName: \"token1\",\n    setInitToken: setInitToken,\n    initToken: initToken,\n    tokenRefresh: tokenRefresh,\n    setChain: \"avax\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 45\n  }, this));\n  const [onPresentSettingsModal1] = useModal( /*#__PURE__*/_jsxDEV(CoinsSelectModal, {\n    ListData: (_token1List = token1List) === null || _token1List === void 0 ? void 0 : _token1List.slice(0, 7),\n    tokenName: \"token1\",\n    tokenFunc2: tokenFunc1,\n    setChain: getNetwork1,\n    setChain2: getNetwork2,\n    account: account,\n    balList: tokenBal,\n    order: order,\n    usdcToken: usdcToken,\n    usdtToken: usdtToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 46\n  }, this));\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"md\",\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#292929\"\n          },\n          onClick: onPresentNetworkModal,\n          children: getNetwork(getNetwork1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: onPresentSettingsModal1,\n          children: getTokenImage(token2Object)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: () => {\n          // tokenFunc2(tokenName, ListData[0])\n          // onDismiss()\n          // setSelectButton((ListData[0]?.name)?.toUpperCase())\n        },\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","Web3","useTranslation","Button","styled","useModal","CoinsModal","CoinsSelectModal","toast","AutoColumn","getTokenImage","getNetwork","setupNetwork2","setupNetwork1","SlippageError","StyledButton","SlippageTabs","slippageInput","setSlippageInput","selectButton","setSelectButton","currentChain","setCurrentChain","chainChanged","setChainChanged","ethereum","window","outerHtmlElement","on","_chainId","chain","web3","eth","getChainId","t","showBalance","setShowBalance","notifyEth","warning","position","autoClose","closeOnClick","errorSound","play","networkSelect1","tokenName","selectNetwork","setGetNetwork1","name","console","log","onPresentNetworkModal","swapType","networkList","networkListCross","setInitToken","initToken","tokenRefresh","onPresentSettingsModal1","token1List","slice","tokenFunc1","getNetwork1","getNetwork2","account","tokenBal","order","usdcToken","usdtToken","backgroundColor","token2Object"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/mintModal/TransactionSettings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport usePoll from 'react-use-poll';\nimport Web3 from \"web3\";\nimport axios from 'axios';\nimport { isEmpty } from 'lodash';\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Button, Input, Flex, Grid } from 'toolkit/uikit'\nimport styled from 'styled-components'\nimport {TokenInjectedModalProps } from '../../toolkit/uikit/widgets/TokenModal'\nimport {  useModal  } from 'toolkit/uikit'\nimport CoinsModal from '../coinsModal/CoinsModal'\nimport CoinsSelectModal from '../coinsSelectModal/CoinsSelectModal'\nimport {  ToastContainer, toast } from 'react-toastify';\n\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { polarcontractAddress, polarABI, joePairPolar} from '../../Abi/avalancheSwap/polarConfig'\nimport { getTokenImage, getNetwork } from './avalancheutils'\nimport { setupNetwork2, setupNetwork1 } from '../../utils/wallet'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\n// enum DeadlineError {\n//   InvalidInput = 'InvalidInput',\n// }\n\nconst StyledButton = styled(Button)`\n \n  width: 85px !important;\n  height: 32px !important;\n  border-radius: 8px !important;\n  margin-right: 10px !important;\n`\ninterface simpleInt {\n  id: number;\n  text: string;\n  icon: string;\n  tokenAddress: string;\n  name: string;\n  balance: string;\n  photoUrl: string;\n}\n\ninterface simp {\n  tokenAddress: string,\n  balance : string\n}\n\n\n\ntype simpleType = simpleInt[];\ntype simpType = simp[];\nexport interface SlippageTabsProps extends TokenInjectedModalProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  setSlippage?: (value: number | ((prevVar: number) => number)) => void;\n  tokenFunc2?: CallableFunction;\n  ListData?: simpleType;\n  tokenName?: string;\n  setChain?: string;\n  account?: string;\n  balList?: simpType;\n  setChain2?: string;\n  order?: boolean;\n  usdtToken?: simpleInt ;\n  usdcToken?: simpleInt ;\n\n}\n\nexport default function SlippageTabs() {\n  const [slippageInput, setSlippageInput] = useState('')\n\n  const [selectButton, setSelectButton] = useState('None')\n\n  const [currentChain, setCurrentChain] = useState(0)\n\n  const [chainChanged, setChainChanged] = useState(false)\n\n\n  const { ethereum  } = window;\n  if(ethereum) {\n    const outerHtmlElement: any = ethereum;\n    outerHtmlElement.on(\"chainChanged\", async (_chainId) => {\n     setChainChanged(!chainChanged)\n     const chain = await web3.eth.getChainId()\n     setCurrentChain(chain)\n   \n   });\n   }\n\n  \n\n  \n  \n\n  // const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n // const { account } = useWeb3React()\n  const web3 = new Web3(window.ethereum as any)\n  const [showBalance, setShowBalance] = useState(false)\n\n\n  const notifyEth = () => {\n    \n    toast.warning('Please connect to ethereum network !', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true,\n      });      \n      errorSound.play()\n  };\n  \n\n  const networkSelect1 = async (tokenName,selectNetwork) =>{\n\n\n\n\n  \n      setGetNetwork1(selectNetwork?.name)\n   \n  \n \n      if(selectNetwork?.name === \"bsc\"){\n         setupNetwork1(56)\n      } else if (selectNetwork?.name === \"avalanche\"){\n        setupNetwork2()\n      } else if (selectNetwork?.name === \"polygon\"){\n        setupNetwork1(137)\n      }\n      else if (selectNetwork?.name === \"ethereum\"){\n        console.log('currentchain',currentChain)\n        if(currentChain !== 1){\n        notifyEth()\n        }\n        setupNetwork1(1)\n      }\n      else if (selectNetwork?.name === \"fantom\"){\n        setupNetwork1(250)\n      } else if (selectNetwork?.name === \"optimism\"){\n        setupNetwork1(10)\n      } else if (selectNetwork?.name === \"arbitrum\"){\n        setupNetwork1(42161)\n      }\n      \n    \n  \n  \n  \n  }\n  \n\n\n  const [onPresentNetworkModal] =  useModal(<CoinsModal tokenFunc2={networkSelect1} ListData={swapType === 2 ? networkList : networkListCross} tokenName=\"token1\" setInitToken={setInitToken} initToken={initToken} tokenRefresh={tokenRefresh} setChain=\"avax\" /> )\n\n  const [onPresentSettingsModal1] = useModal(<CoinsSelectModal ListData={(token1List)?.slice(0,7)} tokenName=\"token1\" tokenFunc2={tokenFunc1} setChain={getNetwork1} setChain2={getNetwork2} account={account} balList={tokenBal} order={order} usdcToken={usdcToken} usdtToken={usdtToken}/>)\n  return (\n    \n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n       \n         \n            <div className=\"d-flex flex-row justify-content-between\" >\n              \n            <div style={{backgroundColor:\"#292929\"}} onClick={onPresentNetworkModal}>\n              {getNetwork(getNetwork1)}      \n              </div>\n        \n\n          <div onClick={onPresentSettingsModal1} >\n              {getTokenImage(token2Object)}      \n              </div>\n            \n            </div>\n            <StyledButton\n              onClick={() => {\n                // tokenFunc2(tokenName, ListData[0])\n                // onDismiss()\n                // setSelectButton((ListData[0]?.name)?.toUpperCase())\n              }}\n              \n            >\n              Mint\n            </StyledButton>\n\n            \n           \n    \n   \n       \n      </AutoColumn>\n\n  \n    </AutoColumn>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAGlD,OAAOC,IAAI,MAAM,MAAM;AAGvB,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAAeC,MAAM,QAA2B,eAAe;AAC/D,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAAUC,QAAQ,QAAS,eAAe;AAC1C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAA0BC,KAAK,QAAQ,gBAAgB;AAGvD,SAASC,UAAU,QAAQ,gCAAgC;AAG3D,SAASC,aAAa,EAAEC,UAAU,QAAQ,kBAAkB;AAC5D,SAASC,aAAa,EAAEC,aAAa,QAAQ,oBAAoB;AAAA;AAAA,IAE5DC,aAAa,EAMlB;AACA;AACA;AAAA,WARKA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;AAAA,GAAbA,aAAa,KAAbA,aAAa;AAUlB,MAAMC,YAAY,GAAGX,MAAM,CAACD,MAAM,CAAE;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;AAqCD,eAAe,SAASa,YAAY,GAAG;EAAA;EACrC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAGvD,MAAM;IAAEyB;EAAU,CAAC,GAAGC,MAAM;EAC5B,IAAGD,QAAQ,EAAE;IACX,MAAME,gBAAqB,GAAGF,QAAQ;IACtCE,gBAAgB,CAACC,EAAE,CAAC,cAAc,EAAE,MAAOC,QAAQ,IAAK;MACvDL,eAAe,CAAC,CAACD,YAAY,CAAC;MAC9B,MAAMO,KAAK,GAAG,MAAMC,IAAI,CAACC,GAAG,CAACC,UAAU,EAAE;MACzCX,eAAe,CAACQ,KAAK,CAAC;IAExB,CAAC,CAAC;EACF;;EAOD;;EAEA,MAAM;IAAEI;EAAE,CAAC,GAAGhC,cAAc,EAAE;EAC/B;EACC,MAAM6B,IAAI,GAAG,IAAI9B,IAAI,CAACyB,MAAM,CAACD,QAAQ,CAAQ;EAC7C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAGrD,MAAMqC,SAAS,GAAG,MAAM;IAEtB7B,KAAK,CAAC8B,OAAO,CAAC,sCAAsC,EAAE;MACpDC,QAAQ,EAAE,cAAc;MACxBC,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE;IACd,CAAC,CAAC;IACFC,UAAU,CAACC,IAAI,EAAE;EACrB,CAAC;EAGD,MAAMC,cAAc,GAAG,OAAOC,SAAS,EAACC,aAAa,KAAI;IAMrDC,cAAc,CAACD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,CAAC;IAInC,IAAG,CAAAF,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,MAAK,KAAK,EAAC;MAC9BnC,aAAa,CAAC,EAAE,CAAC;IACpB,CAAC,MAAM,IAAI,CAAAiC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,MAAK,WAAW,EAAC;MAC7CpC,aAAa,EAAE;IACjB,CAAC,MAAM,IAAI,CAAAkC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,MAAK,SAAS,EAAC;MAC3CnC,aAAa,CAAC,GAAG,CAAC;IACpB,CAAC,MACI,IAAI,CAAAiC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,MAAK,UAAU,EAAC;MAC1CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAC7B,YAAY,CAAC;MACxC,IAAGA,YAAY,KAAK,CAAC,EAAC;QACtBgB,SAAS,EAAE;MACX;MACAxB,aAAa,CAAC,CAAC,CAAC;IAClB,CAAC,MACI,IAAI,CAAAiC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,MAAK,QAAQ,EAAC;MACxCnC,aAAa,CAAC,GAAG,CAAC;IACpB,CAAC,MAAM,IAAI,CAAAiC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,MAAK,UAAU,EAAC;MAC5CnC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM,IAAI,CAAAiC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,IAAI,MAAK,UAAU,EAAC;MAC5CnC,aAAa,CAAC,KAAK,CAAC;IACtB;EAMJ,CAAC;EAID,MAAM,CAACsC,qBAAqB,CAAC,GAAI9C,QAAQ,eAAC,QAAC,UAAU;IAAC,UAAU,EAAEuC,cAAe;IAAC,QAAQ,EAAEQ,QAAQ,KAAK,CAAC,GAAGC,WAAW,GAAGC,gBAAiB;IAAC,SAAS,EAAC,QAAQ;IAAC,YAAY,EAAEC,YAAa;IAAC,SAAS,EAAEC,SAAU;IAAC,YAAY,EAAEC,YAAa;IAAC,QAAQ,EAAC;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG,CAAE;EAElQ,MAAM,CAACC,uBAAuB,CAAC,GAAGrD,QAAQ,eAAC,QAAC,gBAAgB;IAAC,QAAQ,iBAAGsD,UAAU,gDAAX,YAAcC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAE;IAAC,SAAS,EAAC,QAAQ;IAAC,UAAU,EAAEC,UAAW;IAAC,QAAQ,EAAEC,WAAY;IAAC,SAAS,EAAEC,WAAY;IAAC,OAAO,EAAEC,OAAQ;IAAC,OAAO,EAAEC,QAAS;IAAC,KAAK,EAAEC,KAAM;IAAC,SAAS,EAAEC,SAAU;IAAC,SAAS,EAAEC;EAAU;IAAA;IAAA;IAAA;EAAA,QAAE,CAAC;EAC5R,oBAEE,QAAC,UAAU;IAAC,GAAG,EAAC,IAAI;IAAA,uBAClB,QAAC,UAAU;MAAC,GAAG,EAAC,IAAI;MAAA,wBAGd;QAAK,SAAS,EAAC,yCAAyC;QAAA,wBAExD;UAAK,KAAK,EAAE;YAACC,eAAe,EAAC;UAAS,CAAE;UAAC,OAAO,EAAElB,qBAAsB;UAAA,UACrExC,UAAU,CAACmD,WAAW;QAAC;UAAA;UAAA;UAAA;QAAA,QAClB,eAGV;UAAK,OAAO,EAAEJ,uBAAwB;UAAA,UACjChD,aAAa,CAAC4D,YAAY;QAAC;UAAA;UAAA;UAAA;QAAA,QACtB;MAAA;QAAA;QAAA;QAAA;MAAA,QAEF,eACN,QAAC,YAAY;QACX,OAAO,EAAE,MAAM;UACb;UACA;UACA;QAAA,CACA;QAAA,UAEH;MAED;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EAOR;IAAA;IAAA;IAAA;EAAA,QAGF;AAEjB"},"metadata":{},"sourceType":"module"}