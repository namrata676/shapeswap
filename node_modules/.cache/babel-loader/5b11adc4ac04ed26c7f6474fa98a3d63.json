{"ast":null,"code":"import _objectSpread from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/* eslint-disable no-param-reassign */import{parseBytes32String}from'@ethersproject/strings';import{ETHER,Token,currencyEquals}from'toolkit/sdk';import{useMemo}from'react';import{arrayify}from'ethers/lib/utils';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useDefaultTokenList,useUnsupportedTokenList,useCombinedActiveList,useCombinedInactiveList}from'../state/lists/hooks';import{NEVER_RELOAD,useSingleCallResult}from'../state/multicall/hooks';import useUserAddedTokens from'../state/user/hooks/useUserAddedTokens';import{isAddress}from'../utils';import{useBytes32TokenContract,useTokenContract}from'./useContract';import{filterTokens}from'../components/SearchModal/filtering';// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap,includeUserAdded){const{chainId}=useActiveWeb3React();const userAddedTokens=useUserAddedTokens();return useMemo(()=>{if(!chainId)return{};// reduce to just tokens\nconst mapWithoutUrls={};// const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n//   newMap[address] = tokenMap[chainId][address].token\n//   return newMap\n// }, {})\nif(includeUserAdded){return userAddedTokens// reduce into all ALL_TOKENS filtered by the current chain\n.reduce((tokenMap_,token)=>{tokenMap_[token.address]=token;return tokenMap_;},// must make a copy because reduce modifies the map, and we do not\n// want to make a copy in every iteration\n_objectSpread({},mapWithoutUrls));}return mapWithoutUrls;},[chainId,userAddedTokens,includeUserAdded]);}export function useDefaultTokens(){const defaultList=useDefaultTokenList();return useTokensFromMap(defaultList,false);}export function useAllTokens(){const allTokens=useCombinedActiveList();return useTokensFromMap(allTokens,true);}export function useAllInactiveTokens(){// get inactive tokens\nconst inactiveTokensMap=useCombinedInactiveList();const inactiveTokens=useTokensFromMap(inactiveTokensMap,false);// filter out any token that are on active list\nconst activeTokensAddresses=Object.keys(useAllTokens());const filteredInactive=activeTokensAddresses?Object.keys(inactiveTokens).reduce((newMap,address)=>{if(!activeTokensAddresses.includes(address)){newMap[address]=inactiveTokens[address];}return newMap;},{}):inactiveTokens;return filteredInactive;}export function useUnsupportedTokens(){const unsupportedTokensMap=useUnsupportedTokenList();return useTokensFromMap(unsupportedTokensMap,false);}export function useIsTokenActive(token){const activeTokens=useAllTokens();if(!activeTokens||!token){return false;}return!!activeTokens[token.address];}// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery){const{chainId}=useActiveWeb3React();const inactiveTokens=useAllInactiveTokens();return useMemo(()=>{if(!chainId||searchQuery===''){return undefined;}const tokens=filterTokens(Object.values(inactiveTokens),searchQuery);return tokens;},[chainId,inactiveTokens,searchQuery]);}// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency){const userAddedTokens=useUserAddedTokens();if(!currency){return false;}return!!userAddedTokens.find(token=>currencyEquals(currency,token));}// parse a name or symbol from a token response\nconst BYTES32_REGEX=/^0x[a-fA-F0-9]{64}$/;function parseStringOrBytes32(str,bytes32,defaultValue){return str&&str.length>0?str:// need to check for proper bytes string and valid terminator\nbytes32&&BYTES32_REGEX.test(bytes32)&&arrayify(bytes32)[31]===0?parseBytes32String(bytes32):defaultValue;}// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress){const{chainId}=useActiveWeb3React();const tokens=useAllTokens();const address=isAddress(tokenAddress);const tokenContract=useTokenContract(address||undefined,false);const tokenContractBytes32=useBytes32TokenContract(address||undefined,false);const token=address?tokens[address]:undefined;const tokenName=useSingleCallResult(token?undefined:tokenContract,'name',undefined,NEVER_RELOAD);const tokenNameBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'name',undefined,NEVER_RELOAD);const symbol=useSingleCallResult(token?undefined:tokenContract,'symbol',undefined,NEVER_RELOAD);const symbolBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'symbol',undefined,NEVER_RELOAD);const decimals=useSingleCallResult(token?undefined:tokenContract,'decimals',undefined,NEVER_RELOAD);return useMemo(()=>{if(token)return token;if(!chainId||!address)return undefined;if(decimals.loading||symbol.loading||tokenName.loading)return null;if(decimals.result){var _symbol$result,_symbolBytes32$result,_tokenName$result,_tokenNameBytes32$res;return new Token(chainId,address,decimals.result[0],parseStringOrBytes32((_symbol$result=symbol.result)===null||_symbol$result===void 0?void 0:_symbol$result[0],(_symbolBytes32$result=symbolBytes32.result)===null||_symbolBytes32$result===void 0?void 0:_symbolBytes32$result[0],'UNKNOWN'),parseStringOrBytes32((_tokenName$result=tokenName.result)===null||_tokenName$result===void 0?void 0:_tokenName$result[0],(_tokenNameBytes32$res=tokenNameBytes32.result)===null||_tokenNameBytes32$res===void 0?void 0:_tokenNameBytes32$res[0],'Unknown Token'));}return undefined;},[address,chainId,decimals.loading,decimals.result,symbol.loading,symbol.result,symbolBytes32.result,token,tokenName.loading,tokenName.result,tokenNameBytes32.result]);}export function useCurrency(currencyId){const isBNB=(currencyId===null||currencyId===void 0?void 0:currencyId.toUpperCase())==='BNB';const token=useToken(isBNB?undefined:currencyId);return isBNB?ETHER:token;}","map":{"version":3,"names":["parseBytes32String","ETHER","Token","currencyEquals","useMemo","arrayify","useActiveWeb3React","useDefaultTokenList","useUnsupportedTokenList","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useBytes32TokenContract","useTokenContract","filterTokens","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","reduce","tokenMap_","token","address","_objectSpread","useDefaultTokens","defaultList","useAllTokens","allTokens","useAllInactiveTokens","inactiveTokensMap","inactiveTokens","activeTokensAddresses","Object","keys","filteredInactive","newMap","includes","useUnsupportedTokens","unsupportedTokensMap","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","undefined","tokens","values","useIsUserAddedToken","currency","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","_symbol$result","_symbolBytes32$result","_tokenName$result","_tokenNameBytes32$res","useCurrency","currencyId","isBNB","toUpperCase"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/hooks/Tokens.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from 'toolkit/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = {};\n    // const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n    //   newMap[address] = tokenMap[chainId][address].token\n    //   return newMap\n    // }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n      if (!activeTokensAddresses.includes(address)) {\n        newMap[address] = inactiveTokens[address]\n      }\n      return newMap\n    }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n      ? parseBytes32String(bytes32)\n      : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}