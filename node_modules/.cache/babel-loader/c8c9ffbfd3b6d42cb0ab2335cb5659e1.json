{"ast":null,"code":"import { useCallback } from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoBscProviderError } from '@binance-chain/bsc-connector';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect, WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { connectorLocalStorageKey } from 'toolkit/uikit';\nimport { connectorsByName } from 'utils/web3React';\nimport { setupNetwork } from 'utils/wallet';\nimport useToast from 'hooks/useToast';\nimport { profileClear } from 'state/profile';\nimport { useAppDispatch } from 'state';\nimport { useTranslation } from 'contexts/Localization';\nconst useAuth = () => {\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const {\n    activate,\n    deactivate\n  } = useWeb3React();\n  const {\n    toastError\n  } = useToast();\n  const login = useCallback(connectorID => {\n    const connector = connectorsByName[connectorID];\n    if (connector) {\n      activate(connector, async error => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork();\n          if (hasSetup) {\n            activate(connector);\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey);\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            // console.log('Provider Error', 'No provider was found')\n            alert(\"Install Metamask and create Wallet\");\n          } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector;\n              walletConnector.walletConnectProvider = null;\n            }\n            console.log('Authorization Error', 'Please authorize to access your account');\n          } else {\n            console.log(error.name, 'error.message');\n          }\n        }\n      });\n    } else {\n      console.log('Unable to find connector', 'The connector config is wrong');\n    }\n  }, [activate]);\n  const logout = useCallback(() => {\n    dispatch(profileClear());\n    deactivate();\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close();\n      connectorsByName.walletconnect.walletConnectProvider = null;\n    }\n  }, [deactivate, dispatch]);\n  return {\n    login,\n    logout\n  };\n};\nexport default useAuth;","map":{"version":3,"names":["useCallback","useWeb3React","UnsupportedChainIdError","NoBscProviderError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","connectorLocalStorageKey","connectorsByName","setupNetwork","useToast","profileClear","useAppDispatch","useTranslation","useAuth","t","dispatch","activate","deactivate","toastError","login","connectorID","connector","error","hasSetup","window","localStorage","removeItem","alert","walletConnector","walletConnectProvider","console","log","name","logout","getItem","walletconnect","close"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/hooks/useAuth.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from 'toolkit/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              // console.log('Provider Error', 'No provider was found')\n              alert(\"Install Metamask and create Wallet\");\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              console.log('Authorization Error', 'Please authorize to access your account')\n            } else {\n              console.log(error.name, 'error.message')\n            }\n          }\n        })\n      } else {\n        console.log('Unable to find connector', 'The connector config is wrong')\n      }\n    },\n    [activate],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,YAAY,EAAEC,uBAAuB,QAAQ,kBAAkB;AACxE,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SACEC,uBAAuB,EACvBC,wBAAwB,IAAIC,gCAAgC,QACvD,gCAAgC;AACvC,SACED,wBAAwB,IAAIE,qCAAqC,EACjEC,sBAAsB,QACjB,qCAAqC;AAC5C,SAAyBC,wBAAwB,QAAQ,eAAe;AACxE,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,YAAY,QAAQ,cAAc;AAC3C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,MAAMC,OAAO,GAAG,MAAM;EACpB,MAAM;IAAEC;EAAE,CAAC,GAAGF,cAAc,EAAE;EAC9B,MAAMG,QAAQ,GAAGJ,cAAc,EAAE;EACjC,MAAM;IAAEK,QAAQ;IAAEC;EAAW,CAAC,GAAGnB,YAAY,EAAE;EAC/C,MAAM;IAAEoB;EAAW,CAAC,GAAGT,QAAQ,EAAE;EAEjC,MAAMU,KAAK,GAAGtB,WAAW,CACtBuB,WAA2B,IAAK;IAC/B,MAAMC,SAAS,GAAGd,gBAAgB,CAACa,WAAW,CAAC;IAC/C,IAAIC,SAAS,EAAE;MACbL,QAAQ,CAACK,SAAS,EAAE,MAAOC,KAAY,IAAK;QAC1C,IAAIA,KAAK,YAAYvB,uBAAuB,EAAE;UAC5C,MAAMwB,QAAQ,GAAG,MAAMf,YAAY,EAAE;UACrC,IAAIe,QAAQ,EAAE;YACZP,QAAQ,CAACK,SAAS,CAAC;UACrB;QACF,CAAC,MAAM;UACLG,MAAM,CAACC,YAAY,CAACC,UAAU,CAACpB,wBAAwB,CAAC;UACxD,IAAIgB,KAAK,YAAYrB,uBAAuB,IAAIqB,KAAK,YAAYtB,kBAAkB,EAAE;YACnF;YACA2B,KAAK,CAAC,oCAAoC,CAAC;UAC7C,CAAC,MAAM,IACLL,KAAK,YAAYnB,gCAAgC,IACjDmB,KAAK,YAAYlB,qCAAqC,EACtD;YACA,IAAIiB,SAAS,YAAYhB,sBAAsB,EAAE;cAC/C,MAAMuB,eAAe,GAAGP,SAAmC;cAC3DO,eAAe,CAACC,qBAAqB,GAAG,IAAI;YAC9C;YACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,yCAAyC,CAAC;UAC/E,CAAC,MAAM;YACLD,OAAO,CAACC,GAAG,CAACT,KAAK,CAACU,IAAI,EAAE,eAAe,CAAC;UAC1C;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,+BAA+B,CAAC;IAC1E;EACF,CAAC,EACD,CAACf,QAAQ,CAAC,CACX;EAED,MAAMiB,MAAM,GAAGpC,WAAW,CAAC,MAAM;IAC/BkB,QAAQ,CAACL,YAAY,EAAE,CAAC;IACxBO,UAAU,EAAE;IACZ;IACA,IAAIO,MAAM,CAACC,YAAY,CAACS,OAAO,CAAC,eAAe,CAAC,EAAE;MAChD3B,gBAAgB,CAAC4B,aAAa,CAACC,KAAK,EAAE;MACtC7B,gBAAgB,CAAC4B,aAAa,CAACN,qBAAqB,GAAG,IAAI;IAC7D;EACF,CAAC,EAAE,CAACZ,UAAU,EAAEF,QAAQ,CAAC,CAAC;EAE1B,OAAO;IAAEI,KAAK;IAAEc;EAAO,CAAC;AAC1B,CAAC;AAED,eAAepB,OAAO"},"metadata":{},"sourceType":"module"}