{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/toolkit/uikit/hooks/useTooltip/useTooltip.tsx\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePopper } from \"react-popper\";\nimport { ThemeProvider } from \"styled-components\";\nimport { light, dark } from \"../../theme\";\nimport { StyledTooltip, Arrow } from \"./StyledTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isTouchDevice() {\n  return \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n}\nconst invertTheme = currentTheme => {\n  if (currentTheme.isDark) {\n    return light;\n  }\n  return dark;\n};\nconst portalRoot = document.getElementById(\"portal-root\");\nconst useTooltip = (content, options) => {\n  const {\n    placement = \"auto\",\n    trigger = \"hover\",\n    arrowPadding = 16,\n    tooltipPadding = {\n      left: 16,\n      right: 16\n    },\n    tooltipOffset = [0, 10]\n  } = options;\n  const [targetElement, setTargetElement] = useState(null);\n  const [tooltipElement, setTooltipElement] = useState(null);\n  const [arrowElement, setArrowElement] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const isHoveringOverTooltip = useRef(false);\n  const hideTimeout = useRef();\n  const hideTooltip = useCallback(e => {\n    const hide = () => {\n      e.stopPropagation();\n      e.preventDefault();\n      setVisible(false);\n    };\n    if (trigger === \"hover\") {\n      if (hideTimeout.current) {\n        window.clearTimeout(hideTimeout.current);\n      }\n      if (e.target === tooltipElement) {\n        isHoveringOverTooltip.current = false;\n      }\n      if (!isHoveringOverTooltip.current) {\n        hideTimeout.current = window.setTimeout(() => {\n          if (!isHoveringOverTooltip.current) {\n            hide();\n          }\n        }, 100);\n      }\n    } else {\n      hide();\n    }\n  }, [tooltipElement, trigger]);\n  const showTooltip = useCallback(e => {\n    e.stopPropagation();\n    e.preventDefault();\n    setVisible(true);\n    if (trigger === \"hover\") {\n      if (e.target === targetElement) {\n        // If we were about to close the tooltip and got back to it\n        // then prevent closing it.\n        clearTimeout(hideTimeout.current);\n      }\n      if (e.target === tooltipElement) {\n        isHoveringOverTooltip.current = true;\n      }\n    }\n  }, [tooltipElement, targetElement, trigger]);\n  const toggleTooltip = useCallback(e => {\n    e.stopPropagation();\n    setVisible(!visible);\n  }, [visible]);\n\n  // Trigger = hover\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"hover\") return undefined;\n    if (isTouchDevice()) {\n      targetElement.addEventListener(\"touchstart\", showTooltip);\n      targetElement.addEventListener(\"touchend\", hideTooltip);\n    } else {\n      targetElement.addEventListener(\"mouseenter\", showTooltip);\n      targetElement.addEventListener(\"mouseleave\", hideTooltip);\n    }\n    return () => {\n      targetElement.removeEventListener(\"touchstart\", showTooltip);\n      targetElement.removeEventListener(\"touchend\", hideTooltip);\n      targetElement.removeEventListener(\"mouseenter\", showTooltip);\n      targetElement.removeEventListener(\"mouseleave\", showTooltip);\n    };\n  }, [trigger, targetElement, hideTooltip, showTooltip]);\n\n  // Keep tooltip open when cursor moves from the targetElement to the tooltip\n  useEffect(() => {\n    if (tooltipElement === null || trigger !== \"hover\") return undefined;\n    tooltipElement.addEventListener(\"mouseenter\", showTooltip);\n    tooltipElement.addEventListener(\"mouseleave\", hideTooltip);\n    return () => {\n      tooltipElement.removeEventListener(\"mouseenter\", showTooltip);\n      tooltipElement.removeEventListener(\"mouseleave\", hideTooltip);\n    };\n  }, [trigger, tooltipElement, hideTooltip, showTooltip]);\n\n  // Trigger = click\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"click\") return undefined;\n    targetElement.addEventListener(\"click\", toggleTooltip);\n    return () => targetElement.removeEventListener(\"click\", toggleTooltip);\n  }, [trigger, targetElement, visible, toggleTooltip]);\n\n  // Handle click outside\n  useEffect(() => {\n    if (trigger !== \"click\") return undefined;\n    const handleClickOutside = ({\n      target\n    }) => {\n      if (target instanceof Node) {\n        if (tooltipElement != null && targetElement != null && !tooltipElement.contains(target) && !targetElement.contains(target)) {\n          setVisible(false);\n        }\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [trigger, targetElement, tooltipElement]);\n\n  // Trigger = focus\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"focus\") return undefined;\n    targetElement.addEventListener(\"focus\", showTooltip);\n    targetElement.addEventListener(\"blur\", hideTooltip);\n    return () => {\n      targetElement.removeEventListener(\"focus\", showTooltip);\n      targetElement.removeEventListener(\"blur\", hideTooltip);\n    };\n  }, [trigger, targetElement, showTooltip, hideTooltip]);\n\n  // On small screens Popper.js tries to squeeze the tooltip to available space without overflowing beyound the edge\n  // of the screen. While it works fine when the element is in the middle of the screen it does not handle well the\n  // cases when the target element is very close to the edge of the screen - no margin is applied between the tooltip\n  // and the screen edge.\n  // preventOverflow mitigates this behaviour, default 16px paddings on left and right solve the problem for all screen sizes\n  // that we support.\n  // Note that in the farm page where there are tooltips very close to the edge of the screen this padding works perfectly\n  // even on the iPhone 5 screen (320px wide), BUT in the storybook with the contrived example ScreenEdges example\n  // iPhone 5 behaves differently overflowing beyound the edge. All paddings are identical so I have no idea why it is,\n  // and fixing that seems like a very bad use of time.\n  const {\n    styles,\n    attributes\n  } = usePopper(targetElement, tooltipElement, {\n    placement,\n    modifiers: [{\n      name: \"arrow\",\n      options: {\n        element: arrowElement,\n        padding: arrowPadding\n      }\n    }, {\n      name: \"offset\",\n      options: {\n        offset: tooltipOffset\n      }\n    }, {\n      name: \"preventOverflow\",\n      options: {\n        padding: tooltipPadding\n      }\n    }]\n  });\n  const tooltip = /*#__PURE__*/_jsxDEV(StyledTooltip, {\n    ref: setTooltipElement,\n    style: styles.popper,\n    ...attributes.popper,\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: invertTheme,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      ref: setArrowElement,\n      style: styles.arrow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n  const tooltipInPortal = portalRoot ? /*#__PURE__*/createPortal(tooltip, portalRoot) : null;\n  return {\n    targetRef: setTargetElement,\n    tooltip: tooltipInPortal !== null && tooltipInPortal !== void 0 ? tooltipInPortal : tooltip,\n    tooltipVisible: visible\n  };\n};\nexport default useTooltip;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","createPortal","usePopper","ThemeProvider","light","dark","StyledTooltip","Arrow","jsxDEV","_jsxDEV","isTouchDevice","window","navigator","maxTouchPoints","invertTheme","currentTheme","isDark","portalRoot","document","getElementById","useTooltip","content","options","placement","trigger","arrowPadding","tooltipPadding","left","right","tooltipOffset","targetElement","setTargetElement","tooltipElement","setTooltipElement","arrowElement","setArrowElement","visible","setVisible","isHoveringOverTooltip","hideTimeout","hideTooltip","e","hide","stopPropagation","preventDefault","current","clearTimeout","target","setTimeout","showTooltip","toggleTooltip","undefined","addEventListener","removeEventListener","handleClickOutside","Node","contains","styles","attributes","modifiers","name","element","padding","offset","tooltip","ref","style","popper","children","theme","fileName","_jsxFileName","lineNumber","columnNumber","arrow","tooltipInPortal","targetRef","tooltipVisible"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/toolkit/uikit/hooks/useTooltip/useTooltip.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePopper } from \"react-popper\";\nimport { ThemeProvider, DefaultTheme } from \"styled-components\";\nimport { light, dark } from \"../../theme\";\nimport { StyledTooltip, Arrow } from \"./StyledTooltip\";\nimport { TooltipOptions, TooltipRefs } from \"./types\";\n\nfunction isTouchDevice() {\n  return \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n}\n\nconst invertTheme = (currentTheme: DefaultTheme) => {\n  if (currentTheme.isDark) {\n    return light;\n  }\n  return dark;\n};\n\nconst portalRoot = document.getElementById(\"portal-root\");\n\nconst useTooltip = (content: React.ReactNode, options: TooltipOptions): TooltipRefs => {\n  const {\n    placement = \"auto\",\n    trigger = \"hover\",\n    arrowPadding = 16,\n    tooltipPadding = { left: 16, right: 16 },\n    tooltipOffset = [0, 10],\n  } = options;\n  const [targetElement, setTargetElement] = useState<HTMLElement | null>(null);\n  const [tooltipElement, setTooltipElement] = useState<HTMLElement | null>(null);\n  const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null);\n\n  const [visible, setVisible] = useState(false);\n  const isHoveringOverTooltip = useRef(false);\n  const hideTimeout = useRef<number>();\n\n  const hideTooltip = useCallback(\n    (e: Event) => {\n      const hide = () => {\n        e.stopPropagation();\n        e.preventDefault();\n        setVisible(false);\n      };\n\n      if (trigger === \"hover\") {\n        if (hideTimeout.current) {\n          window.clearTimeout(hideTimeout.current);\n        }\n        if (e.target === tooltipElement) {\n          isHoveringOverTooltip.current = false;\n        }\n        if (!isHoveringOverTooltip.current) {\n          hideTimeout.current = window.setTimeout(() => {\n            if (!isHoveringOverTooltip.current) {\n              hide();\n            }\n          }, 100);\n        }\n      } else {\n        hide();\n      }\n    },\n    [tooltipElement, trigger]\n  );\n\n  const showTooltip = useCallback(\n    (e: Event) => {\n      e.stopPropagation();\n      e.preventDefault();\n      setVisible(true);\n      if (trigger === \"hover\") {\n        if (e.target === targetElement) {\n          // If we were about to close the tooltip and got back to it\n          // then prevent closing it.\n          clearTimeout(hideTimeout.current);\n        }\n        if (e.target === tooltipElement) {\n          isHoveringOverTooltip.current = true;\n        }\n      }\n    },\n    [tooltipElement, targetElement, trigger]\n  );\n\n  const toggleTooltip = useCallback(\n    (e: Event) => {\n      e.stopPropagation();\n      setVisible(!visible);\n    },\n    [visible]\n  );\n\n  // Trigger = hover\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"hover\") return undefined;\n\n    if (isTouchDevice()) {\n      targetElement.addEventListener(\"touchstart\", showTooltip);\n      targetElement.addEventListener(\"touchend\", hideTooltip);\n    } else {\n      targetElement.addEventListener(\"mouseenter\", showTooltip);\n      targetElement.addEventListener(\"mouseleave\", hideTooltip);\n    }\n    return () => {\n      targetElement.removeEventListener(\"touchstart\", showTooltip);\n      targetElement.removeEventListener(\"touchend\", hideTooltip);\n      targetElement.removeEventListener(\"mouseenter\", showTooltip);\n      targetElement.removeEventListener(\"mouseleave\", showTooltip);\n    };\n  }, [trigger, targetElement, hideTooltip, showTooltip]);\n\n  // Keep tooltip open when cursor moves from the targetElement to the tooltip\n  useEffect(() => {\n    if (tooltipElement === null || trigger !== \"hover\") return undefined;\n\n    tooltipElement.addEventListener(\"mouseenter\", showTooltip);\n    tooltipElement.addEventListener(\"mouseleave\", hideTooltip);\n    return () => {\n      tooltipElement.removeEventListener(\"mouseenter\", showTooltip);\n      tooltipElement.removeEventListener(\"mouseleave\", hideTooltip);\n    };\n  }, [trigger, tooltipElement, hideTooltip, showTooltip]);\n\n  // Trigger = click\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"click\") return undefined;\n\n    targetElement.addEventListener(\"click\", toggleTooltip);\n\n    return () => targetElement.removeEventListener(\"click\", toggleTooltip);\n  }, [trigger, targetElement, visible, toggleTooltip]);\n\n  // Handle click outside\n  useEffect(() => {\n    if (trigger !== \"click\") return undefined;\n\n    const handleClickOutside = ({ target }: Event) => {\n      if (target instanceof Node) {\n        if (\n          tooltipElement != null &&\n          targetElement != null &&\n          !tooltipElement.contains(target) &&\n          !targetElement.contains(target)\n        ) {\n          setVisible(false);\n        }\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [trigger, targetElement, tooltipElement]);\n\n  // Trigger = focus\n  useEffect(() => {\n    if (targetElement === null || trigger !== \"focus\") return undefined;\n\n    targetElement.addEventListener(\"focus\", showTooltip);\n    targetElement.addEventListener(\"blur\", hideTooltip);\n    return () => {\n      targetElement.removeEventListener(\"focus\", showTooltip);\n      targetElement.removeEventListener(\"blur\", hideTooltip);\n    };\n  }, [trigger, targetElement, showTooltip, hideTooltip]);\n\n  // On small screens Popper.js tries to squeeze the tooltip to available space without overflowing beyound the edge\n  // of the screen. While it works fine when the element is in the middle of the screen it does not handle well the\n  // cases when the target element is very close to the edge of the screen - no margin is applied between the tooltip\n  // and the screen edge.\n  // preventOverflow mitigates this behaviour, default 16px paddings on left and right solve the problem for all screen sizes\n  // that we support.\n  // Note that in the farm page where there are tooltips very close to the edge of the screen this padding works perfectly\n  // even on the iPhone 5 screen (320px wide), BUT in the storybook with the contrived example ScreenEdges example\n  // iPhone 5 behaves differently overflowing beyound the edge. All paddings are identical so I have no idea why it is,\n  // and fixing that seems like a very bad use of time.\n  const { styles, attributes } = usePopper(targetElement, tooltipElement, {\n    placement,\n    modifiers: [\n      {\n        name: \"arrow\",\n        options: { element: arrowElement, padding: arrowPadding },\n      },\n      { name: \"offset\", options: { offset: tooltipOffset } },\n      { name: \"preventOverflow\", options: { padding: tooltipPadding } },\n    ],\n  });\n\n  const tooltip = (\n    <StyledTooltip ref={setTooltipElement} style={styles.popper} {...attributes.popper}>\n      <ThemeProvider theme={invertTheme}>{content}</ThemeProvider>\n      <Arrow ref={setArrowElement} style={styles.arrow} />\n    </StyledTooltip>\n  );\n\n  const tooltipInPortal = portalRoot ? createPortal(tooltip, portalRoot) : null;\n\n  return {\n    targetRef: setTargetElement,\n    tooltip: tooltipInPortal ?? tooltip,\n    tooltipVisible: visible,\n  };\n};\n\nexport default useTooltip;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}