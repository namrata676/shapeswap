{"ast":null,"code":"import React,{useState}from'react';import{Button,Text,Message}from'toolkit/uikit';import{useTranslation}from'contexts/Localization';import{useUserSlippageTolerance// useUserSingleHopOnly,\n}from'state/user/hooks';import{TokenModal,TokenModalBody}from'../../toolkit/uikit/widgets/TokenModal';import{AutoColumn}from'../../components/Layout/Column';import TransactionSettings from'./TransactionSettings';import\"./settings.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SettingsModal=_ref=>{let{onDismiss,setSlippage,ListData,tokenName,tokenFunc2,setChain,account,balList,setChain2,order,usdcToken,usdtToken}=_ref;const[showConfirmExpertModal,setShowConfirmExpertModal]=useState(false);const[userSlippageTolerance,setUserslippageTolerance]=useUserSlippageTolerance();// const [ttl, setTtl] = useUserTransactionTTL()\n// const [expertMode, toggleExpertMode] = useExpertModeManager()\n// const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n// const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n// const { onChangeRecipient } = useSwapActionHandlers()\nconst{t}=useTranslation();if(showConfirmExpertModal){return/*#__PURE__*/_jsx(TokenModal,{title:t('Are you sure?'),onBack:()=>setShowConfirmExpertModal(false),onDismiss:onDismiss,style:{maxWidth:'420px'},children:/*#__PURE__*/_jsxs(TokenModalBody,{children:[/*#__PURE__*/_jsx(Message,{variant:\"warning\",mb:\"24px\",children:/*#__PURE__*/_jsx(Text,{children:t(\"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\")})}),/*#__PURE__*/_jsx(Text,{mb:\"24px\",children:t('Only use this mode if you know what you’re doing.')}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",id:\"confirm-expert-mode\",onClick:()=>{// eslint-disable-next-line no-alert\nif(window.prompt(\"Please type the word \\\"confirm\\\" to enable expert mode.\")==='confirm'){// toggleExpertMode()\nsetShowConfirmExpertModal(false);}},children:t('Turn On Expert Mode')})]})});}return/*#__PURE__*/_jsx(TokenModal,{title:\"Select Token\",headerBackground:\"headerBG\",onDismiss:onDismiss,className:\"setModal\",children:/*#__PURE__*/_jsx(TokenModalBody,{children:/*#__PURE__*/_jsx(AutoColumn,{gap:\"md\",style:{padding:'1rem'},children:/*#__PURE__*/_jsx(TransactionSettings,{rawSlippage:userSlippageTolerance,setRawSlippage:setUserslippageTolerance,setSlippage:setSlippage,onDismiss:onDismiss,tokenFunc2:tokenFunc2,ListData:ListData,tokenName:tokenName,setChain:setChain,account:account,balList:balList,setChain2:setChain2,order:order,usdtToken:usdtToken,usdcToken:usdcToken// deadline={ttl}\n// setDeadline={setTtl}\n})})})});};export default SettingsModal;","map":{"version":3,"names":["React","useState","Button","Text","Message","useTranslation","useUserSlippageTolerance","TokenModal","TokenModalBody","AutoColumn","TransactionSettings","jsx","_jsx","jsxs","_jsxs","SettingsModal","_ref","onDismiss","setSlippage","ListData","tokenName","tokenFunc2","setChain","account","balList","setChain2","order","usdcToken","usdtToken","showConfirmExpertModal","setShowConfirmExpertModal","userSlippageTolerance","setUserslippageTolerance","t","title","onBack","style","maxWidth","children","variant","mb","id","onClick","window","prompt","headerBackground","className","gap","padding","rawSlippage","setRawSlippage"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/coinsSelectModal/CoinsSelectModal.tsx"],"sourcesContent":["\nimport React, { useState } from 'react'\nimport { Button, Text, Message } from 'toolkit/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  useUserSlippageTolerance,\n  // useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport {TokenModal, TokenModalBody, TokenInjectedModalProps } from '../../toolkit/uikit/widgets/TokenModal'\n\n\nimport { AutoColumn } from '../../components/Layout/Column'\nimport TransactionSettings from './TransactionSettings'\nimport \"./settings.css\"\n\ninterface simpleInt {\n  id: number;\n  text: string;\n  icon: string;\n  tokenAddress: string;\n  name: string;\n  photoUrl : string, \n  balance : string\n}\n\ntype simpleType = simpleInt[];\n\ninterface simp {\n  tokenAddress: string,\n  balance : string\n}\n\ntype simpType = simp[];\n\n\nexport interface TabsProps extends TokenInjectedModalProps {\n  tokenFunc2?: CallableFunction;\n  ListData?: simpleType;\n  tokenName?: string;\n  setChain?: string;\n  account?: string;  \n  balList?: simpType;\n  setChain2?: string;\n  order?: boolean;\n  usdtToken?: simpleInt ;\n  usdcToken?: simpleInt ;\n // setInitToken?: CallableFunction;\n // tokenRefresh?: (value: number | ((prevVar: number) => number)) => void;\n  // initToken?: boolean\n // setChain?: string\n}\n\nconst SettingsModal: React.FC<TabsProps> = ({ onDismiss, setSlippage, ListData, tokenName, tokenFunc2, setChain, account, balList, setChain2, order, usdcToken, usdtToken }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  // const [ttl, setTtl] = useUserTransactionTTL()\n  // const [expertMode, toggleExpertMode] = useExpertModeManager()\n  // const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  // const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  // const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <TokenModal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <TokenModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                // toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </TokenModalBody>\n      </TokenModal>\n    )\n  }\n\n  return (\n    <TokenModal title=\"Select Token\" headerBackground=\"headerBG\" onDismiss={onDismiss} className=\"setModal\" >\n      <TokenModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            setSlippage={setSlippage}\n            onDismiss={onDismiss}\n            tokenFunc2={tokenFunc2} ListData={ListData} tokenName={tokenName}\n            setChain= {setChain}\n            account={account}\n            balList={balList}\n            setChain2={setChain2}\n            order={order}\n            usdtToken={usdtToken}\n            usdcToken={usdcToken}\n            // deadline={ttl}\n            // setDeadline={setTtl}\n          />\n         \n        </AutoColumn>\n      </TokenModalBody>\n    </TokenModal>\n  )\n}\n\nexport default SettingsModal\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,CAAEC,IAAI,CAAEC,OAAO,KAAQ,eAAe,CACrD,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OACEC,wBACA;AAAA,KACK,kBAAkB,CACzB,OAAQC,UAAU,CAAEC,cAAc,KAAiC,wCAAwC,CAG3G,OAASC,UAAU,KAAQ,gCAAgC,CAC3D,MAAO,CAAAC,mBAAmB,KAAM,uBAAuB,CACvD,MAAO,gBAAgB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAuCvB,KAAM,CAAAC,aAAkC,CAAGC,IAAA,EAAqI,IAApI,CAAEC,SAAS,CAAEC,WAAW,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,OAAO,CAAEC,SAAS,CAAEC,KAAK,CAAEC,SAAS,CAAEC,SAAU,CAAC,CAAAZ,IAAA,CACzK,KAAM,CAACa,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAC3E,KAAM,CAAC8B,qBAAqB,CAAEC,wBAAwB,CAAC,CAAG1B,wBAAwB,CAAC,CAAC,CACpF;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAE2B,CAAE,CAAC,CAAG5B,cAAc,CAAC,CAAC,CAE9B,GAAIwB,sBAAsB,CAAE,CAC1B,mBACEjB,IAAA,CAACL,UAAU,EACT2B,KAAK,CAAED,CAAC,CAAC,eAAe,CAAE,CAC1BE,MAAM,CAAEA,CAAA,GAAML,yBAAyB,CAAC,KAAK,CAAE,CAC/Cb,SAAS,CAAEA,SAAU,CACrBmB,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAQ,CAAE,CAAAC,QAAA,cAE7BxB,KAAA,CAACN,cAAc,EAAA8B,QAAA,eACb1B,IAAA,CAACR,OAAO,EAACmC,OAAO,CAAC,SAAS,CAACC,EAAE,CAAC,MAAM,CAAAF,QAAA,cAClC1B,IAAA,CAACT,IAAI,EAAAmC,QAAA,CACFL,CAAC,CACA,wIACF,CAAC,CACG,CAAC,CACA,CAAC,cACVrB,IAAA,CAACT,IAAI,EAACqC,EAAE,CAAC,MAAM,CAAAF,QAAA,CAAEL,CAAC,CAAC,mDAAmD,CAAC,CAAO,CAAC,cAC/ErB,IAAA,CAACV,MAAM,EACLqC,OAAO,CAAC,QAAQ,CAChBE,EAAE,CAAC,qBAAqB,CACxBC,OAAO,CAAEA,CAAA,GAAM,CACb;AACA,GAAIC,MAAM,CAACC,MAAM,0DAAwD,CAAC,GAAK,SAAS,CAAE,CACxF;AACAd,yBAAyB,CAAC,KAAK,CAAC,CAClC,CACF,CAAE,CAAAQ,QAAA,CAEDL,CAAC,CAAC,qBAAqB,CAAC,CACnB,CAAC,EACK,CAAC,CACP,CAAC,CAEjB,CAEA,mBACErB,IAAA,CAACL,UAAU,EAAC2B,KAAK,CAAC,cAAc,CAACW,gBAAgB,CAAC,UAAU,CAAC5B,SAAS,CAAEA,SAAU,CAAC6B,SAAS,CAAC,UAAU,CAAAR,QAAA,cACrG1B,IAAA,CAACJ,cAAc,EAAA8B,QAAA,cACb1B,IAAA,CAACH,UAAU,EAACsC,GAAG,CAAC,IAAI,CAACX,KAAK,CAAE,CAAEY,OAAO,CAAE,MAAO,CAAE,CAAAV,QAAA,cAC9C1B,IAAA,CAACF,mBAAmB,EAClBuC,WAAW,CAAElB,qBAAsB,CACnCmB,cAAc,CAAElB,wBAAyB,CACzCd,WAAW,CAAEA,WAAY,CACzBD,SAAS,CAAEA,SAAU,CACrBI,UAAU,CAAEA,UAAW,CAACF,QAAQ,CAAEA,QAAS,CAACC,SAAS,CAAEA,SAAU,CACjEE,QAAQ,CAAGA,QAAS,CACpBC,OAAO,CAAEA,OAAQ,CACjBC,OAAO,CAAEA,OAAQ,CACjBC,SAAS,CAAEA,SAAU,CACrBC,KAAK,CAAEA,KAAM,CACbE,SAAS,CAAEA,SAAU,CACrBD,SAAS,CAAEA,SACX;AACA;AAAA,CACD,CAAC,CAEQ,CAAC,CACC,CAAC,CACP,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}