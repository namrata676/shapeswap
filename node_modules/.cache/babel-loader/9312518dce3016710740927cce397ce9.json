{"ast":null,"code":"import{ChainId,JSBI,Percent,WETH}from'toolkit/sdk';import{BUSD,DAI,USDT,BTCB,CAKE,WBNB,UST,ETH,USDC}from'./tokens';// export const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS='process.env.REACT_APP_ROUTER';// a list of tokens by chain\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST={[ChainId.MAINNET]:[WETH[ChainId.MAINNET],CAKE[ChainId.MAINNET],BUSD[ChainId.MAINNET],USDT,BTCB,UST,ETH,USDC],[ChainId.TESTNET]:[WETH[ChainId.TESTNET],CAKE[ChainId.TESTNET],BUSD[ChainId.TESTNET]]};/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */export const ADDITIONAL_BASES={[ChainId.MAINNET]:{},[ChainId.TESTNET]:{}};/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */export const CUSTOM_BASES={[ChainId.MAINNET]:{}};// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES={[ChainId.MAINNET]:[BUSD[ChainId.MAINNET],CAKE[ChainId.MAINNET],BTCB],[ChainId.TESTNET]:[WETH[ChainId.TESTNET],CAKE[ChainId.TESTNET],BUSD[ChainId.TESTNET]]};// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR={[ChainId.MAINNET]:[WETH[ChainId.MAINNET],DAI,BUSD[ChainId.MAINNET],USDT],[ChainId.TESTNET]:[WETH[ChainId.TESTNET],CAKE[ChainId.TESTNET],BUSD[ChainId.TESTNET]]};export const PINNED_PAIRS={[ChainId.MAINNET]:[[CAKE[ChainId.MAINNET],WBNB],[BUSD[ChainId.MAINNET],USDT],[DAI,USDT]]};export const NetworkContextName='NETWORK';// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE=50;// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW=60*20;export const BIG_INT_ZERO=JSBI.BigInt(0);// one basis point\nexport const ONE_BIPS=new Percent(JSBI.BigInt(1),JSBI.BigInt(10000));export const BIPS_BASE=JSBI.BigInt(10000);// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW=new Percent(JSBI.BigInt(100),BIPS_BASE);// 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM=new Percent(JSBI.BigInt(300),BIPS_BASE);// 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH=new Percent(JSBI.BigInt(500),BIPS_BASE);// 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN=new Percent(JSBI.BigInt(1000),BIPS_BASE);// 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT=new Percent(JSBI.BigInt(1500),BIPS_BASE);// 15%\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(16));// .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD=new Percent(JSBI.BigInt(50),JSBI.BigInt(10000));export const ZERO_PERCENT=new Percent('0');export const ONE_HUNDRED_PERCENT=new Percent('1');// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES=['0x7F367cC41522cE07553e823bf3be79A889DEbe1B','0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b','0x901bb9583b24D97e995513C6778dc6888AB6870e','0xA7e5d5A720f06526557c513402f2e6B5fA20b008','0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C'];export{default as farmsConfig}from'./farms';export{default as poolsConfig}from'./pools';export{default as ifosConfig}from'./ifo';","map":{"version":3,"names":["ChainId","JSBI","Percent","WETH","BUSD","DAI","USDT","BTCB","CAKE","WBNB","UST","ETH","USDC","ROUTER_ADDRESS","BASES_TO_CHECK_TRADES_AGAINST","MAINNET","TESTNET","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","BigInt","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","default","farmsConfig","poolsConfig","ifosConfig"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/config/constants/index.ts"],"sourcesContent":["import { ChainId, JSBI, Percent, Token, WETH } from 'toolkit/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\n// export const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS = 'process.env.REACT_APP_ROUTER'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}