{"ast":null,"code":"import _objectSpread from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from'@reduxjs/toolkit';import teamsList from'config/constants/teams';import{getTeam,getTeams}from'./helpers';const teamsById=teamsList.reduce((accum,team)=>{return _objectSpread(_objectSpread({},accum),{},{[team.id]:team});},{});const initialState={isInitialized:false,isLoading:true,data:teamsById};export const teamsSlice=createSlice({name:'teams',initialState,reducers:{fetchStart:state=>{state.isLoading=true;},fetchFailed:state=>{state.isLoading=false;state.isInitialized=true;},teamFetchSucceeded:(state,action)=>{state.isInitialized=true;state.isLoading=false;state.data[action.payload.id]=action.payload;},teamsFetchSucceeded:(state,action)=>{state.isInitialized=true;state.isLoading=false;state.data=action.payload;}}});// Actions\nexport const{fetchStart,teamFetchSucceeded,fetchFailed,teamsFetchSucceeded}=teamsSlice.actions;// Thunks\nexport const fetchTeam=teamId=>async dispatch=>{try{dispatch(fetchStart());const team=await getTeam(teamId);dispatch(teamFetchSucceeded(team));}catch(error){dispatch(fetchFailed());}};export const fetchTeams=()=>async dispatch=>{try{dispatch(fetchStart());const teams=await getTeams();dispatch(teamsFetchSucceeded(teams));}catch(error){dispatch(fetchFailed());}};export default teamsSlice.reducer;","map":{"version":3,"names":["createSlice","teamsList","getTeam","getTeams","teamsById","reduce","accum","team","_objectSpread","id","initialState","isInitialized","isLoading","data","teamsSlice","name","reducers","fetchStart","state","fetchFailed","teamFetchSucceeded","action","payload","teamsFetchSucceeded","actions","fetchTeam","teamId","dispatch","error","fetchTeams","teams","reducer"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/teams/index.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n"],"mappings":"oIAAA,OAASA,WAAW,KAAuB,kBAAkB,CAC7D,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAG9C,OAASC,OAAO,CAAEC,QAAQ,KAAQ,WAAW,CAE7C,KAAM,CAAAC,SAAoB,CAAGH,SAAS,CAACI,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAK,CAC7D,OAAAC,aAAA,CAAAA,aAAA,IACKF,KAAK,MACR,CAACC,IAAI,CAACE,EAAE,EAAGF,IAAI,GAEnB,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,KAAM,CAAAG,YAAwB,CAAG,CAC/BC,aAAa,CAAE,KAAK,CACpBC,SAAS,CAAE,IAAI,CACfC,IAAI,CAAET,SACR,CAAC,CAED,MAAO,MAAM,CAAAU,UAAU,CAAGd,WAAW,CAAC,CACpCe,IAAI,CAAE,OAAO,CACbL,YAAY,CACZM,QAAQ,CAAE,CACRC,UAAU,CAAGC,KAAK,EAAK,CACrBA,KAAK,CAACN,SAAS,CAAG,IAAI,CACxB,CAAC,CACDO,WAAW,CAAGD,KAAK,EAAK,CACtBA,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACP,aAAa,CAAG,IAAI,CAC5B,CAAC,CACDS,kBAAkB,CAAEA,CAACF,KAAK,CAAEG,MAA2B,GAAK,CAC1DH,KAAK,CAACP,aAAa,CAAG,IAAI,CAC1BO,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,IAAI,CAACQ,MAAM,CAACC,OAAO,CAACb,EAAE,CAAC,CAAGY,MAAM,CAACC,OAAO,CAChD,CAAC,CACDC,mBAAmB,CAAEA,CAACL,KAAK,CAAEG,MAAgC,GAAK,CAChEH,KAAK,CAACP,aAAa,CAAG,IAAI,CAC1BO,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,IAAI,CAAGQ,MAAM,CAACC,OAAO,CAC7B,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEL,UAAU,CAAEG,kBAAkB,CAAED,WAAW,CAAEI,mBAAoB,CAAC,CAAGT,UAAU,CAACU,OAAO,CAEtG;AACA,MAAO,MAAM,CAAAC,SAAS,CAAIC,MAAc,EAAK,KAAO,CAAAC,QAAQ,EAAK,CAC/D,GAAI,CACFA,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CACtB,KAAM,CAAAV,IAAI,CAAG,KAAM,CAAAL,OAAO,CAACwB,MAAM,CAAC,CAClCC,QAAQ,CAACP,kBAAkB,CAACb,IAAI,CAAC,CAAC,CACpC,CAAE,MAAOqB,KAAK,CAAE,CACdD,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC,CACzB,CACF,CAAC,CAED,MAAO,MAAM,CAAAU,UAAU,CAAGA,CAAA,GAAM,KAAO,CAAAF,QAAQ,EAAK,CAClD,GAAI,CACFA,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CACtB,KAAM,CAAAa,KAAK,CAAG,KAAM,CAAA3B,QAAQ,CAAC,CAAC,CAC9BwB,QAAQ,CAACJ,mBAAmB,CAACO,KAAK,CAAC,CAAC,CACtC,CAAE,MAAOF,KAAK,CAAE,CACdD,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC,CACzB,CACF,CAAC,CAED,cAAe,CAAAL,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}