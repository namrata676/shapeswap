{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists';\n// eslint-disable-next-line import/no-unresolved\n\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists';\nimport { updateVersion } from '../global/actions';\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions';\nconst NEW_LIST_STATE = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null\n};\nconst initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE;\n      return memo;\n    }, {})\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS\n};\nexport default createReducer(initialState, builder => builder.addCase(fetchTokenList.pending, (state, _ref) => {\n  let {\n    payload: {\n      requestId,\n      url\n    }\n  } = _ref;\n  state.byUrl[url] = {\n    current: null,\n    pendingUpdate: null,\n    ...state.byUrl[url],\n    loadingRequestId: requestId,\n    error: null\n  };\n}).addCase(fetchTokenList.fulfilled, (state, _ref2) => {\n  var _state$byUrl$url, _state$byUrl$url2;\n  let {\n    payload: {\n      requestId,\n      tokenList,\n      url\n    }\n  } = _ref2;\n  const current = (_state$byUrl$url = state.byUrl[url]) === null || _state$byUrl$url === void 0 ? void 0 : _state$byUrl$url.current;\n  const loadingRequestId = (_state$byUrl$url2 = state.byUrl[url]) === null || _state$byUrl$url2 === void 0 ? void 0 : _state$byUrl$url2.loadingRequestId;\n\n  // no-op if update does nothing\n  if (current) {\n    const upgradeType = getVersionUpgrade(current.version, tokenList.version);\n    if (upgradeType === VersionUpgrade.NONE) return;\n    if (loadingRequestId === null || loadingRequestId === requestId) {\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: null,\n        current,\n        pendingUpdate: tokenList\n      };\n    }\n  } else {\n    // activate if on default active\n    if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n      var _state$activeListUrls;\n      (_state$activeListUrls = state.activeListUrls) === null || _state$activeListUrls === void 0 ? void 0 : _state$activeListUrls.push(url);\n    }\n    state.byUrl[url] = {\n      ...state.byUrl[url],\n      loadingRequestId: null,\n      error: null,\n      current: tokenList,\n      pendingUpdate: null\n    };\n  }\n}).addCase(fetchTokenList.rejected, (state, _ref3) => {\n  var _state$byUrl$url3;\n  let {\n    payload: {\n      url,\n      requestId,\n      errorMessage\n    }\n  } = _ref3;\n  if (((_state$byUrl$url3 = state.byUrl[url]) === null || _state$byUrl$url3 === void 0 ? void 0 : _state$byUrl$url3.loadingRequestId) !== requestId) {\n    // no-op since it's not the latest request\n    return;\n  }\n  state.byUrl[url] = {\n    ...state.byUrl[url],\n    loadingRequestId: null,\n    error: errorMessage,\n    current: null,\n    pendingUpdate: null\n  };\n}).addCase(addList, (state, _ref4) => {\n  let {\n    payload: url\n  } = _ref4;\n  if (!state.byUrl[url]) {\n    state.byUrl[url] = NEW_LIST_STATE;\n  }\n}).addCase(removeList, (state, _ref5) => {\n  let {\n    payload: url\n  } = _ref5;\n  if (state.byUrl[url]) {\n    delete state.byUrl[url];\n  }\n  // remove list from active urls if needed\n  if (state.activeListUrls && state.activeListUrls.includes(url)) {\n    state.activeListUrls = state.activeListUrls.filter(u => u !== url);\n  }\n}).addCase(enableList, (state, _ref6) => {\n  let {\n    payload: url\n  } = _ref6;\n  if (!state.byUrl[url]) {\n    state.byUrl[url] = NEW_LIST_STATE;\n  }\n  if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n    state.activeListUrls.push(url);\n  }\n  if (!state.activeListUrls) {\n    state.activeListUrls = [url];\n  }\n}).addCase(disableList, (state, _ref7) => {\n  let {\n    payload: url\n  } = _ref7;\n  if (state.activeListUrls && state.activeListUrls.includes(url)) {\n    state.activeListUrls = state.activeListUrls.filter(u => u !== url);\n  }\n}).addCase(acceptListUpdate, (state, _ref8) => {\n  var _state$byUrl$url4;\n  let {\n    payload: url\n  } = _ref8;\n  if (!((_state$byUrl$url4 = state.byUrl[url]) !== null && _state$byUrl$url4 !== void 0 && _state$byUrl$url4.pendingUpdate)) {\n    throw new Error('accept list update called without pending update');\n  }\n  state.byUrl[url] = {\n    ...state.byUrl[url],\n    pendingUpdate: null,\n    current: state.byUrl[url].pendingUpdate\n  };\n}).addCase(updateVersion, state => {\n  // state loaded from localStorage, but new lists have never been initialized\n  if (!state.lastInitializedDefaultListOfLists) {\n    state.byUrl = initialState.byUrl;\n    state.activeListUrls = initialState.activeListUrls;\n  } else if (state.lastInitializedDefaultListOfLists) {\n    const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce((s, l) => s.add(l), new Set());\n    const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce((s, l) => s.add(l), new Set());\n    DEFAULT_LIST_OF_LISTS.forEach(listUrl => {\n      if (!lastInitializedSet.has(listUrl)) {\n        state.byUrl[listUrl] = NEW_LIST_STATE;\n      }\n    });\n    state.lastInitializedDefaultListOfLists.forEach(listUrl => {\n      if (!newListOfListsSet.has(listUrl)) {\n        delete state.byUrl[listUrl];\n      }\n    });\n  }\n  state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS;\n\n  // if no active lists, activate defaults\n  if (!state.activeListUrls) {\n    state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS;\n\n    // for each list on default list, initialize if needed\n    DEFAULT_ACTIVE_LIST_URLS.map(listUrl => {\n      if (!state.byUrl[listUrl]) {\n        state.byUrl[listUrl] = NEW_LIST_STATE;\n      }\n      return true;\n    });\n  }\n}));","map":{"version":3,"names":["createReducer","getVersionUpgrade","VersionUpgrade","DEFAULT_ACTIVE_LIST_URLS","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","updateVersion","acceptListUpdate","addList","fetchTokenList","removeList","enableList","disableList","NEW_LIST_STATE","error","current","loadingRequestId","pendingUpdate","initialState","lastInitializedDefaultListOfLists","byUrl","concat","reduce","memo","listUrl","activeListUrls","builder","addCase","pending","state","payload","requestId","url","fulfilled","tokenList","upgradeType","version","NONE","includes","push","rejected","errorMessage","filter","u","Error","lastInitializedSet","s","l","add","Set","newListOfListsSet","forEach","has","map"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/lists/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}