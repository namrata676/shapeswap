{"ast":null,"code":"import _objectSpread from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import BigNumber from'bignumber.js';import{BIG_ONE,BIG_ZERO}from'utils/bigNumber';import{filterFarmsByQuoteToken}from'utils/farmsPriceHelpers';const getFarmFromTokenSymbol=(farms,tokenSymbol,preferredQuoteTokens)=>{const farmsWithTokenSymbol=farms.filter(farm=>farm.token.symbol===tokenSymbol);const filteredFarm=filterFarmsByQuoteToken(farmsWithTokenSymbol,preferredQuoteTokens);return filteredFarm;};const getFarmBaseTokenPrice=(farm,quoteTokenFarm,bnbPriceBusd)=>{const hasTokenPriceVsQuote=Boolean(farm.tokenPriceVsQuote);if(farm.quoteToken.symbol==='BUSD'){return hasTokenPriceVsQuote?new BigNumber(farm.tokenPriceVsQuote):BIG_ZERO;}if(farm.quoteToken.symbol==='wBNB'){return hasTokenPriceVsQuote?bnbPriceBusd.times(farm.tokenPriceVsQuote):BIG_ZERO;}// We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\nif(!quoteTokenFarm){return BIG_ZERO;}// Possible alternative farm quoteTokens:\n// UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n// If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n// i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n// from the BNB - pBTC price, we can calculate the PNT - BUSD price\nif(quoteTokenFarm.quoteToken.symbol==='wBNB'){const quoteTokenInBusd=bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote);return hasTokenPriceVsQuote&&quoteTokenInBusd?new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd):BIG_ZERO;}if(quoteTokenFarm.quoteToken.symbol==='BUSD'){const quoteTokenInBusd=quoteTokenFarm.tokenPriceVsQuote;return hasTokenPriceVsQuote&&quoteTokenInBusd?new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd):BIG_ZERO;}// Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\nreturn BIG_ZERO;};const getFarmQuoteTokenPrice=(farm,quoteTokenFarm,bnbPriceBusd)=>{if(farm.quoteToken.symbol==='BUSD'){return BIG_ONE;}if(farm.quoteToken.symbol==='wBNB'){return bnbPriceBusd;}if(!quoteTokenFarm){return BIG_ZERO;}if(quoteTokenFarm.quoteToken.symbol==='wBNB'){return quoteTokenFarm.tokenPriceVsQuote?bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote):BIG_ZERO;}if(quoteTokenFarm.quoteToken.symbol==='BUSD'){return quoteTokenFarm.tokenPriceVsQuote?new BigNumber(quoteTokenFarm.tokenPriceVsQuote):BIG_ZERO;}return BIG_ZERO;};const fetchFarmsPrices=async farms=>{// const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n// BNB-BUSD LP pid\nconst bnbBusdFarm=farms.find(farm=>farm.pid===1);// pid_config\nconst bnbPriceBusd=bnbBusdFarm.tokenPriceVsQuote?BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote):BIG_ZERO;const farmsWithPrices=farms.map(farm=>{const quoteTokenFarm=getFarmFromTokenSymbol(farms,farm.quoteToken.symbol);const baseTokenPrice=getFarmBaseTokenPrice(farm,quoteTokenFarm,bnbPriceBusd);const quoteTokenPrice=getFarmQuoteTokenPrice(farm,quoteTokenFarm,bnbPriceBusd);const token=_objectSpread(_objectSpread({},farm.token),{},{busdPrice:baseTokenPrice.toJSON()});const quoteToken=_objectSpread(_objectSpread({},farm.quoteToken),{},{busdPrice:quoteTokenPrice.toJSON()});return _objectSpread(_objectSpread({},farm),{},{token,quoteToken});});return farmsWithPrices;};export default fetchFarmsPrices;","map":{"version":3,"names":["BigNumber","BIG_ONE","BIG_ZERO","filterFarmsByQuoteToken","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","farm","token","symbol","filteredFarm","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","tokenPriceVsQuote","quoteToken","times","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","find","pid","div","farmsWithPrices","map","baseTokenPrice","quoteTokenPrice","_objectSpread","busdPrice","toJSON"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/farms/fetchFarmsPrices.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  // const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  // BNB-BUSD LP pid\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 1) // pid_config\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}