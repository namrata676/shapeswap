{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/toolkit/uikit/widgets/WalletModal/CopyToClipboard.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"../../components/Text/Text\";\nimport { CopyIcon } from \"../../components/Svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyleButton = styled(Text).attrs({\n  role: \"button\"\n})`\n  position: relative;\n  display: flex;\n  align-items: center;\n  \n  color: white !important;\n`;\nconst Tooltip = styled.div`\n  display: ${_ref => {\n  let {\n    isTooltipDisplayed\n  } = _ref;\n  return isTooltipDisplayed ? \"block\" : \"none\";\n}};\n  position: absolute;\n  bottom: -22px;\n  right: 0;\n  left: 0;\n  text-align: center;\n  background-color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.contrast;\n}};\n  color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.invertedContrast;\n}};\n  border-radius: 16px;\n  opacity: 0.7;\n`;\nconst CopyToClipboard = _ref4 => {\n  let {\n    toCopy,\n    children,\n    ...props\n  } = _ref4;\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\n  const copyToClipboardWithCommand = content => {\n    const el = document.createElement(\"textarea\");\n    el.value = content;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n  function displayTooltip() {\n    setIsTooltipDisplayed(true);\n    setTimeout(() => {\n      setIsTooltipDisplayed(false);\n    }, 1000);\n  }\n  return /*#__PURE__*/_jsxDEV(StyleButton, {\n    small: true,\n    bold: true,\n    onClick: () => {\n      if (navigator.clipboard && navigator.permissions) {\n        navigator.clipboard.writeText(toCopy).then(() => displayTooltip());\n      } else if (document.queryCommandSupported(\"copy\")) {\n        copyToClipboardWithCommand(toCopy);\n        displayTooltip();\n      }\n    },\n    ...props,\n    style: {\n      color: 'white'\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(CopyIcon, {\n      width: \"20px\",\n      color: \"white\",\n      ml: \"4px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      isTooltipDisplayed: isTooltipDisplayed,\n      children: \"Copied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\nexport default CopyToClipboard;","map":{"version":3,"names":["React","useState","styled","Text","CopyIcon","StyleButton","attrs","role","Tooltip","div","isTooltipDisplayed","theme","colors","contrast","invertedContrast","CopyToClipboard","toCopy","children","props","setIsTooltipDisplayed","copyToClipboardWithCommand","content","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","displayTooltip","setTimeout","navigator","clipboard","permissions","writeText","then","queryCommandSupported","color"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/toolkit/uikit/widgets/WalletModal/CopyToClipboard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"../../components/Text/Text\";\nimport { CopyIcon } from \"../../components/Svg\";\n\ninterface Props {\n  toCopy: string;\n}\n\nconst StyleButton = styled(Text).attrs({ role: \"button\" })`\n  position: relative;\n  display: flex;\n  align-items: center;\n  \n  color: white !important;\n`;\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? \"block\" : \"none\")};\n  position: absolute;\n  bottom: -22px;\n  right: 0;\n  left: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n`;\n\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, children, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\n\n  const copyToClipboardWithCommand = (content: string) => {\n    const el = document.createElement(\"textarea\");\n    el.value = content;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true);\n    setTimeout(() => {\n      setIsTooltipDisplayed(false);\n    }, 1000);\n  }\n\n  return (\n    <StyleButton\n      small\n      bold\n      onClick={() => {\n        if (navigator.clipboard && navigator.permissions) {\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip());\n        } else if (document.queryCommandSupported(\"copy\")) {\n          copyToClipboardWithCommand(toCopy);\n          displayTooltip();\n        }\n      }}\n      {...props}\n      style={{color:'white'}}\n    >\n      {children}\n      <CopyIcon width=\"20px\" color=\"white\" ml=\"4px\" />\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\n    </StyleButton>\n  );\n};\n\nexport default CopyToClipboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,QAAQ,QAAQ,sBAAsB;AAAC;AAMhD,MAAMC,WAAW,GAAGH,MAAM,CAACC,IAAI,CAAC,CAACG,KAAK,CAAC;EAAEC,IAAI,EAAE;AAAS,CAAC,CAAE;AAC3D;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAqC;AAC5D,aAAa;EAAA,IAAC;IAAEC;EAAmB,CAAC;EAAA,OAAMA,kBAAkB,GAAG,OAAO,GAAG,MAAM;AAAA,CAAE;AACjF;AACA;AACA;AACA;AACA;AACA,sBAAsB;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,MAAM,CAACC,QAAQ;AAAA,CAAC;AAC3D,WAAW;EAAA,IAAC;IAAEF;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,MAAM,CAACE,gBAAgB;AAAA,CAAC;AACxD;AACA;AACA,CAAC;AAED,MAAMC,eAAgC,GAAG,SAAoC;EAAA,IAAnC;IAAEC,MAAM;IAAEC,QAAQ;IAAE,GAAGC;EAAM,CAAC;EACtE,MAAM,CAACR,kBAAkB,EAAES,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMmB,0BAA0B,GAAIC,OAAe,IAAK;IACtD,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IAC7CF,EAAE,CAACG,KAAK,GAAGJ,OAAO;IAClBE,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,EAAE,CAAC;IAC7BA,EAAE,CAACM,MAAM,EAAE;IACXL,QAAQ,CAACM,WAAW,CAAC,MAAM,CAAC;IAC5BN,QAAQ,CAACG,IAAI,CAACI,WAAW,CAACR,EAAE,CAAC;EAC/B,CAAC;EAED,SAASS,cAAc,GAAG;IACxBZ,qBAAqB,CAAC,IAAI,CAAC;IAC3Ba,UAAU,CAAC,MAAM;MACfb,qBAAqB,CAAC,KAAK,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,oBACE,QAAC,WAAW;IACV,KAAK;IACL,IAAI;IACJ,OAAO,EAAE,MAAM;MACb,IAAIc,SAAS,CAACC,SAAS,IAAID,SAAS,CAACE,WAAW,EAAE;QAChDF,SAAS,CAACC,SAAS,CAACE,SAAS,CAACpB,MAAM,CAAC,CAACqB,IAAI,CAAC,MAAMN,cAAc,EAAE,CAAC;MACpE,CAAC,MAAM,IAAIR,QAAQ,CAACe,qBAAqB,CAAC,MAAM,CAAC,EAAE;QACjDlB,0BAA0B,CAACJ,MAAM,CAAC;QAClCe,cAAc,EAAE;MAClB;IACF,CAAE;IAAA,GACEb,KAAK;IACT,KAAK,EAAE;MAACqB,KAAK,EAAC;IAAO,CAAE;IAAA,WAEtBtB,QAAQ,eACT,QAAC,QAAQ;MAAC,KAAK,EAAC,MAAM;MAAC,KAAK,EAAC,OAAO;MAAC,EAAE,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD,QAAC,OAAO;MAAC,kBAAkB,EAAEP,kBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAElB,CAAC;AAED,eAAeK,eAAe"},"metadata":{},"sourceType":"module"}