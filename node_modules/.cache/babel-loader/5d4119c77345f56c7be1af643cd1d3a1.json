{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{updateBlockNumber}from'./actions';const initialState={blockNumber:{}};export default createReducer(initialState,builder=>builder.addCase(updateBlockNumber,(state,action)=>{const{chainId,blockNumber}=action.payload;if(typeof state.blockNumber[chainId]!=='number'){state.blockNumber[chainId]=blockNumber;}else{state.blockNumber[chainId]=Math.max(blockNumber,state.blockNumber[chainId]);}}));","map":{"version":3,"names":["createReducer","updateBlockNumber","initialState","blockNumber","builder","addCase","state","action","chainId","payload","Math","max"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/application/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,iBAAiB,KAAQ,WAAW,CAM7C,KAAM,CAAAC,YAA8B,CAAG,CACrCC,WAAW,CAAE,CAAC,CAChB,CAAC,CAED,cAAe,CAAAH,aAAa,CAACE,YAAY,CAAGE,OAAO,EACjDA,OAAO,CAACC,OAAO,CAACJ,iBAAiB,CAAE,CAACK,KAAK,CAAEC,MAAM,GAAK,CACpD,KAAM,CAAEC,OAAO,CAAEL,WAAY,CAAC,CAAGI,MAAM,CAACE,OAAO,CAC/C,GAAI,MAAO,CAAAH,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,GAAK,QAAQ,CAAE,CAClDF,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,CAAGL,WAAW,CAC1C,CAAC,IAAM,CACLG,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,CAAGE,IAAI,CAACC,GAAG,CAACR,WAAW,CAAEG,KAAK,CAACH,WAAW,CAACK,OAAO,CAAC,CAAC,CAChF,CACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}