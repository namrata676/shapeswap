{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/Home/components/ToggleButtonAC.tsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { orange } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: orange[300],\n    '&$checked': {\n      color: orange[500]\n    },\n    '&$checked + $track': {\n      backgroundColor: orange[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\nexport default function ToggleButtonAC(props) {\n  const [isChecked, setCheck] = React.useState(false);\n  const {\n    onClick\n  } = props;\n  const handleChange = () => {\n    setCheck(!isChecked);\n    onClick();\n  };\n  return /*#__PURE__*/_jsxDEV(PurpleSwitch, {\n    checked: isChecked,\n    onChange: handleChange,\n    name: \"toggleSwitch\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","withStyles","orange","Switch","jsxDEV","_jsxDEV","PurpleSwitch","switchBase","color","backgroundColor","checked","track","ToggleButtonAC","props","isChecked","setCheck","useState","onClick","handleChange","onChange","name","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/Home/components/ToggleButtonAC.tsx"],"sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { orange } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: orange[300],\n    '&$checked': {\n      color: orange[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: orange[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nexport default function ToggleButtonAC(props) {\n  const [isChecked, setCheck] = React.useState(false);\n  const { onClick } = props;\n\n  const handleChange = () => {\n    setCheck(!isChecked);\n    onClick();\n  };\n\n  return (\n    <PurpleSwitch checked={isChecked} onChange={handleChange} name=\"toggleSwitch\" />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,MAAM,QAAQ,0BAA0B;AACjD,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGL,UAAU,CAAC;EAC9BM,UAAU,EAAE;IACVC,KAAK,EAAEN,MAAM,CAAC,GAAG,CAAC;IAClB,WAAW,EAAE;MACXM,KAAK,EAAEN,MAAM,CAAC,GAAG;IACnB,CAAC;IACD,oBAAoB,EAAE;MACpBO,eAAe,EAAEP,MAAM,CAAC,GAAG;IAC7B;EACF,CAAC;EACDQ,OAAO,EAAE,CAAC,CAAC;EACXC,KAAK,EAAE,CAAC;AACV,CAAC,CAAC,CAACR,MAAM,CAAC;AAEV,eAAe,SAASS,cAAcA,CAACC,KAAK,EAAE;EAC5C,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EAEzB,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBH,QAAQ,CAAC,CAACD,SAAS,CAAC;IACpBG,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY;IAACI,OAAO,EAAEI,SAAU;IAACK,QAAQ,EAAED,YAAa;IAACE,IAAI,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpF","ignoreList":[]},"metadata":{},"sourceType":"module"}