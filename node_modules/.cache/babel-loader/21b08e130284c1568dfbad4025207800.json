{"ast":null,"code":"// Set of helper functions to facilitate wallet setup\nimport{BASE_URL}from'config';import Web3 from\"web3\";/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */// 0xa86a (hex) = 43114 (dec);\n// 0xa869 (hex) = 43113 (dec);\nconst chainMatic=\"0x\".concat(137 .toString(16));const chainBinance=\"0x\".concat(56 .toString(16));const chainCronos=\"0x\".concat(25 .toString(16));const chainFantom=\"0x\".concat(250 .toString(16));const chainEthereum=\"0x\".concat(1 .toString(16));const chainAvax=\"0x\".concat(43114 .toString(16));const chainTestAvax=\"0x\".concat(43113 .toString(16));const chainArbitrum=\"0x\".concat(42161 .toString(16));const chainOptimism=\"0x\".concat(10 .toString(16));const avalancheParam=[{chainId:chainAvax,chainName:'Avalanche Network',rpcUrls:['https://api.avax.network/ext/bc/C/rpc'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'AVAX',symbol:'AVAX',decimals:18},blockExplorerUrls:['https://snowtrace.io/']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const mumbaiParam=[{chainId:chainMatic,chainName:'Polygon Mainnet',rpcUrls:['https://polygon-rpc.com/'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'MATIC',symbol:'MATIC',decimals:18},blockExplorerUrls:['https://polygonscan.com/']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const binanceParam=[{chainId:chainBinance,chainName:'Smart Chain',rpcUrls:['https://bsc-dataseed.binance.org/'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'BNB',symbol:'BNB',decimals:18},blockExplorerUrls:['https://bscscan.com']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const cronosParam=[{chainId:chainCronos,chainName:'Cronos',rpcUrls:['https://evm.cronos.org'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'CRO',symbol:'CRO',decimals:18},blockExplorerUrls:['https://cronoscan.com/']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const fantomParam=[{chainId:chainFantom,chainName:'Fantom Opera',rpcUrls:['https://rpc.ftm.tools'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'FTM',symbol:'FTM',decimals:18},blockExplorerUrls:['https://ftmscan.com']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const ethereumParam=[{chainId:chainEthereum,chainName:'mainnet',rpcUrls:['https://etherscan.io/block/16068872'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'Ether',symbol:'ETH',decimals:18},blockExplorerUrls:['https://etherscan.io']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const arbitrumParam=[{chainId:chainArbitrum,chainName:'Arbitrum One',rpcUrls:['https://arb1.arbitrum.io/rpc'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'AETH',symbol:'AETH',decimals:18},blockExplorerUrls:['https://arbiscan.io']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const optimismParam=[{chainId:chainOptimism,chainName:'Optimism',rpcUrls:['https://mainnet.optimism.io'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'OP',symbol:'OP',decimals:18},blockExplorerUrls:['https://optimistic.ethereum.io']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const avalancheTestParam=[{chainId:chainTestAvax,chainName:'testnet',rpcUrls:['https://api.avax-test.network/ext/bc/C/rpc'],// rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\nnativeCurrency:{name:'Avax',symbol:'AVAX',decimals:18},blockExplorerUrls:['https://cchain.explorer.avax-test.network']// blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n}];const getNetworkObject=chainId=>{let networkParam;if(chainId===1){networkParam=ethereumParam;}else if(chainId===137){networkParam=mumbaiParam;}else if(chainId===56){networkParam=binanceParam;}else if(chainId===250){networkParam=fantomParam;}else if(chainId===43114){networkParam=avalancheParam;}else if(chainId===25){networkParam=cronosParam;}else if(chainId===43113){networkParam=avalancheTestParam;}else if(chainId===42161){networkParam=arbitrumParam;}else if(chainId===10){networkParam=optimismParam;}return networkParam;};export const setupNetwork=async()=>{const web3=new Web3(window.ethereum);const chainID=await web3.eth.net.getId();console.log(\"chainId\",chainID);console.log(\"chainId1\",chainID===137);console.log(\"entersetupnetwork\");const provider=window.ethereum;if(provider){try{await provider.request({method:'wallet_addEthereumChain',params:getNetworkObject(chainID)});return true;}catch(error){console.error('Failed to setup the network in Metamask:',error);return false;}}else{console.error(\"Can't setup the Avalanche network on metamask because window.ethereum is undefined\");return false;}};export const setupNetwork1=async chainId=>{const provider=window.ethereum;if(provider){try{await provider.request({method:'wallet_addEthereumChain',params:getNetworkObject(chainId)});return true;}catch(error){console.error('Failed to setup the network in Metamask:',error);return false;}}else{console.error(\"Can't setup the Avalanche network on metamask because window.ethereum is undefined\");return false;}};export const setupNetwork2=async()=>{console.log(\"entersetupnetwork\");const provider=window.ethereum;if(provider){const chainId=137;const chainIdHex=\"0x\".concat(chainId.toString(16));try{await provider.request({method:'wallet_addEthereumChain',params:avalancheParam});return true;}catch(error){console.error('Failed to setup the network in Metamask:',error);return false;}}else{console.error(\"Can't setup the Avalanche network on metamask because window.ethereum is undefined\");return false;}};/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */export const registerToken=async(tokenAddress,tokenSymbol,tokenDecimals)=>{const tokenAdded=await window.ethereum.request({method:'wallet_watchAsset',params:{type:'ERC20',options:{address:tokenAddress,symbol:tokenSymbol,decimals:tokenDecimals,image:\"\".concat(BASE_URL,\"/images/tokens/\").concat(tokenAddress,\".png\")}}});return tokenAdded;};","map":{"version":3,"names":["BASE_URL","Web3","chainMatic","concat","toString","chainBinance","chainCronos","chainFantom","chainEthereum","chainAvax","chainTestAvax","chainArbitrum","chainOptimism","avalancheParam","chainId","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","mumbaiParam","binanceParam","cronosParam","fantomParam","ethereumParam","arbitrumParam","optimismParam","avalancheTestParam","getNetworkObject","networkParam","setupNetwork","web3","window","ethereum","chainID","eth","net","getId","console","log","provider","request","method","params","error","setupNetwork1","setupNetwork2","chainIdHex","registerToken","tokenAddress","tokenSymbol","tokenDecimals","tokenAdded","type","options","address","image"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/utils/wallet.ts"],"sourcesContent":["// Set of helper functions to facilitate wallet setup\nimport { ChainId } from 'toolkit/sdk'\nimport { BASE_URL, BASE_BSC_SCAN_URLS } from 'config'\nimport Web3 from \"web3\";\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\n\n\n// 0xa86a (hex) = 43114 (dec);\n// 0xa869 (hex) = 43113 (dec);\nconst chainMatic = `0x${(137).toString(16)}`\nconst chainBinance =  `0x${(56).toString(16)}`\nconst chainCronos = `0x${(25).toString(16)}`\nconst chainFantom =  `0x${(250).toString(16)}`\nconst chainEthereum = `0x${(1).toString(16)}`\nconst chainAvax = `0x${(43114).toString(16)}`\nconst chainTestAvax = `0x${(43113).toString(16)}`\nconst chainArbitrum = `0x${(42161).toString(16)}`\nconst chainOptimism =  `0x${(10).toString(16)}`\n\nconst avalancheParam = [\n  {    \n    chainId: chainAvax,\n    chainName:  'Avalanche Network',\n    rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'AVAX',\n      symbol: 'AVAX',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://snowtrace.io/'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\nconst mumbaiParam = [\n  {\n    chainId:  chainMatic,\n    chainName:  'Polygon Mainnet',\n    rpcUrls: ['https://polygon-rpc.com/'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://polygonscan.com/'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\nconst binanceParam = [\n  {\n    chainId:  chainBinance,\n    chainName:  'Smart Chain',\n    rpcUrls: ['https://bsc-dataseed.binance.org/'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'BNB',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://bscscan.com'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\n\nconst cronosParam = [\n  {\n    chainId:  chainCronos,\n    chainName:  'Cronos',\n    rpcUrls: ['https://evm.cronos.org'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'CRO',\n      symbol: 'CRO',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://cronoscan.com/'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\n\nconst fantomParam = [\n  {\n    chainId:  chainFantom,\n    chainName:  'Fantom Opera',\n    rpcUrls: ['https://rpc.ftm.tools'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'FTM',\n      symbol: 'FTM',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://ftmscan.com'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\nconst ethereumParam = [\n  {\n    chainId:  chainEthereum,\n    chainName:  'mainnet',\n    rpcUrls: ['https://etherscan.io/block/16068872'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://etherscan.io'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\nconst arbitrumParam = [\n  {\n    chainId:  chainArbitrum,\n    chainName:  'Arbitrum One',\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'AETH',\n      symbol: 'AETH',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://arbiscan.io'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\nconst optimismParam = [\n  {\n    chainId:  chainOptimism,\n    chainName:  'Optimism',\n    rpcUrls: ['https://mainnet.optimism.io'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'OP',\n      symbol: 'OP',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://optimistic.ethereum.io'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\nconst avalancheTestParam = [\n  {\n    chainId:  chainTestAvax,\n    chainName:  'testnet',\n    rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    // rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n    nativeCurrency: {\n      name: 'Avax',\n      symbol: 'AVAX',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n    // blockExplorerUrls: ['https://cchain.explorer.avax-test.network'],\n  },\n]\n\nconst getNetworkObject = (chainId) => {\n\nlet networkParam \nif (chainId === 1){\n  networkParam = ethereumParam\n} else if (chainId === 137){\n   networkParam = mumbaiParam\n} else if (chainId === 56){\n  networkParam = binanceParam\n} else if (chainId === 250){\n\n   networkParam = fantomParam\n} else if (chainId === 43114){\n  networkParam = avalancheParam\n} else if(chainId === 25){\n  networkParam = cronosParam\n} else if(chainId === 43113){\n  networkParam = avalancheTestParam\n} \nelse if (chainId === 42161) {\n  networkParam = arbitrumParam\n}\nelse if (chainId === 10) {\n  networkParam = optimismParam\n}\n  return networkParam\n}\n\n\nexport const setupNetwork = async () => {\n  \n\n  const web3 = new Web3(window.ethereum as any);\n  const chainID =  await web3.eth.net.getId();\n  console.log(\"chainId\",chainID)\n\n  console.log(\"chainId1\",chainID === 137)\n\n  console.log(\"entersetupnetwork\")\n  const provider = window.ethereum\n  if (provider) {\n    \n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: getNetworkObject(chainID),\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the Avalanche network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\nexport const setupNetwork1 = async (chainId) => {\n\n  \n  const provider = window.ethereum\n  if (provider) {\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: getNetworkObject(chainId),\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the Avalanche network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\nexport const setupNetwork2 = async () => {\n  console.log(\"entersetupnetwork\")\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = 137;\n    const chainIdHex = `0x${chainId.toString(16)}`;\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: avalancheParam,\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the Avalanche network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n\n\n\n\n\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}