{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/contexts/ToastsContext/Provider.tsx\";\nimport React, { createContext, useCallback, useState } from 'react';\nimport { kebabCase } from 'lodash';\nimport { toastTypes } from 'toolkit/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToastsContext = /*#__PURE__*/createContext(undefined);\nexport const ToastsProvider = ({\n  children\n}) => {\n  const [toasts, setToasts] = useState([]);\n  const toast = useCallback(({\n    title,\n    description,\n    type\n  }) => {\n    setToasts(prevToasts => {\n      const id = kebabCase(title);\n\n      // Remove any existing toasts with the same id\n      const currentToasts = prevToasts.filter(prevToast => prevToast.id !== id);\n      return [{\n        id,\n        title,\n        description,\n        type\n      }, ...currentToasts];\n    });\n  }, [setToasts]);\n  const toastError = (title, description) => {\n    return toast({\n      title,\n      description,\n      type: toastTypes.DANGER\n    });\n  };\n  const toastInfo = (title, description) => {\n    return toast({\n      title,\n      description,\n      type: toastTypes.INFO\n    });\n  };\n  const toastSuccess = (title, description) => {\n    return toast({\n      title,\n      description,\n      type: toastTypes.SUCCESS\n    });\n  };\n  const toastWarning = (title, description) => {\n    return toast({\n      title,\n      description,\n      type: toastTypes.WARNING\n    });\n  };\n  const clear = () => setToasts([]);\n  const remove = id => {\n    setToasts(prevToasts => prevToasts.filter(prevToast => prevToast.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(ToastsContext.Provider, {\n    value: {\n      toasts,\n      clear,\n      remove,\n      toastError,\n      toastInfo,\n      toastSuccess,\n      toastWarning\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useCallback","useState","kebabCase","toastTypes","jsxDEV","_jsxDEV","ToastsContext","undefined","ToastsProvider","children","toasts","setToasts","toast","title","description","type","prevToasts","id","currentToasts","filter","prevToast","toastError","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","clear","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/contexts/ToastsContext/Provider.tsx"],"sourcesContent":["import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'toolkit/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAaC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC9E,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAAgBC,UAAU,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjD,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAAkBQ,SAAS,CAAC;AAEtE,OAAO,MAAMC,cAAwB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAA4B,EAAE,CAAC;EAEnE,MAAMW,KAAK,GAAGZ,WAAW,CACvB,CAAC;IAAEa,KAAK;IAAEC,WAAW;IAAEC;EAAwB,CAAC,KAAK;IACnDJ,SAAS,CAAEK,UAAU,IAAK;MACxB,MAAMC,EAAE,GAAGf,SAAS,CAACW,KAAK,CAAC;;MAE3B;MACA,MAAMK,aAAa,GAAGF,UAAU,CAACG,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACH,EAAE,KAAKA,EAAE,CAAC;MAE3E,OAAO,CACL;QACEA,EAAE;QACFJ,KAAK;QACLC,WAAW;QACXC;MACF,CAAC,EACD,GAAGG,aAAa,CACjB;IACH,CAAC,CAAC;EACJ,CAAC,EACD,CAACP,SAAS,CACZ,CAAC;EAED,MAAMU,UAAU,GAAGA,CAACR,KAAa,EAAEC,WAAuB,KAAK;IAC7D,OAAOF,KAAK,CAAC;MAAEC,KAAK;MAAEC,WAAW;MAAEC,IAAI,EAAEZ,UAAU,CAACmB;IAAO,CAAC,CAAC;EAC/D,CAAC;EACD,MAAMC,SAAS,GAAGA,CAACV,KAAa,EAAEC,WAAuB,KAAK;IAC5D,OAAOF,KAAK,CAAC;MAAEC,KAAK;MAAEC,WAAW;MAAEC,IAAI,EAAEZ,UAAU,CAACqB;IAAK,CAAC,CAAC;EAC7D,CAAC;EACD,MAAMC,YAAY,GAAGA,CAACZ,KAAa,EAAEC,WAAuB,KAAK;IAC/D,OAAOF,KAAK,CAAC;MAAEC,KAAK;MAAEC,WAAW;MAAEC,IAAI,EAAEZ,UAAU,CAACuB;IAAQ,CAAC,CAAC;EAChE,CAAC;EACD,MAAMC,YAAY,GAAGA,CAACd,KAAa,EAAEC,WAAuB,KAAK;IAC/D,OAAOF,KAAK,CAAC;MAAEC,KAAK;MAAEC,WAAW;MAAEC,IAAI,EAAEZ,UAAU,CAACyB;IAAQ,CAAC,CAAC;EAChE,CAAC;EACD,MAAMC,KAAK,GAAGA,CAAA,KAAMlB,SAAS,CAAC,EAAE,CAAC;EACjC,MAAMmB,MAAM,GAAIb,EAAU,IAAK;IAC7BN,SAAS,CAAEK,UAAU,IAAKA,UAAU,CAACG,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClF,CAAC;EAED,oBACEZ,OAAA,CAACC,aAAa,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,MAAM;MAAEmB,KAAK;MAAEC,MAAM;MAAET,UAAU;MAAEE,SAAS;MAAEE,YAAY;MAAEE;IAAa,CAAE;IAAAlB,QAAA,EACzGA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}