{"ast":null,"code":"var _jsxFileName = \"/Users/namratapatel/upwork/SmartFinance-OmniDex/src/components/App/Settings/SettingsModal.tsx\";\nimport React, { useState } from 'react';\nimport { Button, Text, Message } from 'toolkit/uikit';\nimport {\n// useAudioModeManager,\n\nuseUserSlippageTolerance\n// useUserSingleHopOnly,\n} from 'state/user/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { SlippageModal, SlippageModalBody } from '../../../toolkit/uikit/widgets/SlippageModal';\n\n// import { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column';\n// import QuestionHelper from '../../QuestionHelper'\n// import { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings';\nimport \"./settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsModal = _ref => {\n  let {\n    onDismiss,\n    setSlippage\n  } = _ref;\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false);\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance();\n  // const [ttl, setTtl] = useUserTransactionTTL()\n  // const [expertMode, toggleExpertMode] = useExpertModeManager()\n  // const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  // const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  // const { onChangeRecipient } = useSwapActionHandlers()\n\n  const {\n    t\n  } = useTranslation();\n  if (showConfirmExpertModal) {\n    return /*#__PURE__*/_jsxDEV(SlippageModal, {\n      title: t('Are you sure?'),\n      onBack: () => setShowConfirmExpertModal(false),\n      onDismiss: onDismiss,\n      style: {\n        maxWidth: '420px'\n      },\n      children: /*#__PURE__*/_jsxDEV(SlippageModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          variant: \"warning\",\n          mb: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: t(\"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mb: \"24px\",\n          children: t('Only use this mode if you know what you’re doing.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          id: \"confirm-expert-mode\",\n          onClick: () => {\n            // eslint-disable-next-line no-alert\n            if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n              // toggleExpertMode()\n              setShowConfirmExpertModal(false);\n            }\n          },\n          children: t('Turn On Expert Mode')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(SlippageModal, {\n    title: \"Transaction Settings\",\n    headerBackground: \"headerBG\",\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxDEV(SlippageModalBody, {\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        style: {\n          padding: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(TransactionSettings, {\n          rawSlippage: userSlippageTolerance,\n          setRawSlippage: setUserslippageTolerance,\n          setSlippage: setSlippage\n          // deadline={ttl}\n          // setDeadline={setTtl}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\nexport default SettingsModal;","map":{"version":3,"names":["React","useState","Button","Text","Message","useUserSlippageTolerance","useTranslation","SlippageModal","SlippageModalBody","AutoColumn","TransactionSettings","SettingsModal","onDismiss","setSlippage","showConfirmExpertModal","setShowConfirmExpertModal","userSlippageTolerance","setUserslippageTolerance","t","maxWidth","window","prompt","padding"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/components/App/Settings/SettingsModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Text, Message } from 'toolkit/uikit'\nimport {\n  // useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  // useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport {SlippageModal, SlippageModalBody, SlippageInjectedModalProps } from '../../../toolkit/uikit/widgets/SlippageModal'\n\n// import { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\n// import QuestionHelper from '../../QuestionHelper'\n// import { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\nimport \"./settings.css\"\n\nconst SettingsModal: React.FC<SlippageInjectedModalProps> = ({ onDismiss, setSlippage }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  // const [ttl, setTtl] = useUserTransactionTTL()\n  // const [expertMode, toggleExpertMode] = useExpertModeManager()\n  // const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  // const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  // const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <SlippageModal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <SlippageModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                // toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </SlippageModalBody>\n      </SlippageModal>\n    )\n  }\n\n  return (\n    <SlippageModal title=\"Transaction Settings\" headerBackground=\"headerBG\" onDismiss={onDismiss}>\n      <SlippageModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            setSlippage={setSlippage}\n            // deadline={ttl}\n            // setDeadline={setTtl}\n          />\n         \n        </AutoColumn>\n      </SlippageModalBody>\n    </SlippageModal>\n  )\n}\n\nexport default SettingsModal\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,OAAO,QAAQ,eAAe;AACrD;AACE;;AAGAC;AACA;AAAA,OACK,kBAAkB;AACzB,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAAQC,aAAa,EAAEC,iBAAiB,QAAoC,8CAA8C;;AAE1H;AACA,SAASC,UAAU,QAAQ,qBAAqB;AAChD;AACA;AACA,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAO,gBAAgB;AAAA;AAEvB,MAAMC,aAAmD,GAAG,QAAgC;EAAA,IAA/B;IAAEC,SAAS;IAAEC;EAAY,CAAC;EACrF,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACe,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGZ,wBAAwB,EAAE;EACpF;EACA;EACA;EACA;EACA;;EAEA,MAAM;IAAEa;EAAE,CAAC,GAAGZ,cAAc,EAAE;EAE9B,IAAIQ,sBAAsB,EAAE;IAC1B,oBACE,QAAC,aAAa;MACZ,KAAK,EAAEI,CAAC,CAAC,eAAe,CAAE;MAC1B,MAAM,EAAE,MAAMH,yBAAyB,CAAC,KAAK,CAAE;MAC/C,SAAS,EAAEH,SAAU;MACrB,KAAK,EAAE;QAAEO,QAAQ,EAAE;MAAQ,CAAE;MAAA,uBAE7B,QAAC,iBAAiB;QAAA,wBAChB,QAAC,OAAO;UAAC,OAAO,EAAC,SAAS;UAAC,EAAE,EAAC,MAAM;UAAA,uBAClC,QAAC,IAAI;YAAA,UACFD,CAAC,CACA,wIAAwI;UACzI;YAAA;YAAA;YAAA;UAAA;QACI;UAAA;UAAA;UAAA;QAAA,QACC,eACV,QAAC,IAAI;UAAC,EAAE,EAAC,MAAM;UAAA,UAAEA,CAAC,CAAC,mDAAmD;QAAC;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC/E,QAAC,MAAM;UACL,OAAO,EAAC,QAAQ;UAChB,EAAE,EAAC,qBAAqB;UACxB,OAAO,EAAE,MAAM;YACb;YACA,IAAIE,MAAM,CAACC,MAAM,CAAE,uDAAsD,CAAC,KAAK,SAAS,EAAE;cACxF;cACAN,yBAAyB,CAAC,KAAK,CAAC;YAClC;UACF,CAAE;UAAA,UAEDG,CAAC,CAAC,qBAAqB;QAAC;UAAA;UAAA;UAAA;QAAA,QAClB;MAAA;QAAA;QAAA;QAAA;MAAA;IACS;MAAA;MAAA;MAAA;IAAA,QACN;EAEpB;EAEA,oBACE,QAAC,aAAa;IAAC,KAAK,EAAC,sBAAsB;IAAC,gBAAgB,EAAC,UAAU;IAAC,SAAS,EAAEN,SAAU;IAAA,uBAC3F,QAAC,iBAAiB;MAAA,uBAChB,QAAC,UAAU;QAAC,GAAG,EAAC,IAAI;QAAC,KAAK,EAAE;UAAEU,OAAO,EAAE;QAAO,CAAE;QAAA,uBAC9C,QAAC,mBAAmB;UAClB,WAAW,EAAEN,qBAAsB;UACnC,cAAc,EAAEC,wBAAyB;UACzC,WAAW,EAAEJ;UACb;UACA;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA;IAES;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACN;AAEpB,CAAC;AAED,eAAeF,aAAa"},"metadata":{},"sourceType":"module"}