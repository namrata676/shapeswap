{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/namratapatel/upwork/SmartFinance-OmniDex/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState}from'react';import Web3 from\"web3\";import{ToastContainer,toast}from'react-toastify';import{useTranslation}from'contexts/Localization';import{Button,useModal}from'toolkit/uikit';import styled from'styled-components';import CoinsModal from'../coinsModal/CoinsModal';import{AutoColumn}from'../../components/Layout/Column';import{getNetwork}from'./avalancheutils';import{setupNetwork2,setupNetwork1}from'../../utils/wallet';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var SlippageError=/*#__PURE__*/function(SlippageError){SlippageError[\"InvalidInput\"]=\"InvalidInput\";SlippageError[\"RiskyLow\"]=\"RiskyLow\";SlippageError[\"RiskyHigh\"]=\"RiskyHigh\";return SlippageError;}(SlippageError||{});// enum DeadlineError {\n//   InvalidInput = 'InvalidInput',\n// }\nconst StyledButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n \\n  width: 85px !important;\\n  height: 32px !important;\\n  border-radius: 8px !important;\\n  margin-right: 10px !important;\\n\"])));export default function SlippageTabs(){const[slippageInput,setSlippageInput]=useState('');const[selectButton,setSelectButton]=useState('None');const[currentChain,setCurrentChain]=useState(0);const[chainChanged,setChainChanged]=useState(false);const[getNetwork1,setGetNetwork1]=useState(\"None\");const[initToken,setInitToken]=useState(false);const[networkListCross,setGetNetworkListCross]=useState([{\"id\":1,\"name\":\"bsc\",\"stargatechainid\":102,\"isCrossSwapEnabled\":true,\"isChainActive\":true}// {\n//     \"id\": 10,\n//     \"name\": \"ethereum\",\n//     \"stargatechainid\": 101,\n//     \"isCrossSwapEnabled\": true,\n//     \"isChainActive\": true\n// },\n// {\n//     \"id\": 4,\n//     \"name\": \"avalanche\",\n//     \"stargatechainid\": 106,\n//     \"isCrossSwapEnabled\": true,\n//     \"isChainActive\": true\n// },\n// {\n//     \"id\": 6,\n//     \"name\": \"polygon\",\n//     \"stargatechainid\": 109,\n//     \"isCrossSwapEnabled\": true,\n//     \"isChainActive\": true\n// }\n]);const{ethereum}=window;if(ethereum){const outerHtmlElement=ethereum;outerHtmlElement.on(\"chainChanged\",async _chainId=>{setChainChanged(!chainChanged);const chain=await web3.eth.getChainId();setCurrentChain(chain);});}// const [deadlineInput, setDeadlineInput] = useState('')\nconst{t}=useTranslation();// const { account } = useWeb3React()\nconst web3=new Web3(window.ethereum);const[showBalance,setShowBalance]=useState(false);const notifyEth=()=>{toast.warning('Please connect to ethereum network !',{position:\"bottom-right\",autoClose:5000,closeOnClick:true});// errorSound.play()\n};const networkSelect1=async(tokenName,selectNetwork)=>{setGetNetwork1(selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name);if((selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name)===\"bsc\"){setupNetwork1(56);}else if((selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name)===\"avalanche\"){setupNetwork2();}else if((selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name)===\"polygon\"){setupNetwork1(137);}else if((selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name)===\"ethereum\"){console.log('currentchain',currentChain);if(currentChain!==1){notifyEth();}setupNetwork1(1);}else if((selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name)===\"fantom\"){setupNetwork1(250);}else if((selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name)===\"optimism\"){setupNetwork1(10);}else if((selectNetwork===null||selectNetwork===void 0?void 0:selectNetwork.name)===\"arbitrum\"){setupNetwork1(42161);}};const tokenRefresh=()=>{console.log(\"hello\");};const[onPresentNetworkModal]=useModal(/*#__PURE__*/_jsx(CoinsModal,{tokenFunc2:networkSelect1,ListData:networkListCross,tokenName:\"token1\",setInitToken:setInitToken,initToken:initToken,tokenRefresh:tokenRefresh,setChain:\"avax\"}));// const [onPresentSettingsModal1] = useModal(<CoinsSelectModal ListData={(token1List)?.slice(0,7)} tokenName=\"token1\" tokenFunc2={tokenFunc1} setChain={getNetwork1} setChain2={getNetwork2} account={account} balList={tokenBal} order={order} usdcToken={usdcToken} usdtToken={usdtToken}/>)\nreturn/*#__PURE__*/_jsx(AutoColumn,{gap:\"md\",children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"sm\",children:[/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-row justify-content-between\",children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:\"#292929\"},onClick:onPresentNetworkModal,children:getNetwork(getNetwork1)})}),/*#__PURE__*/_jsx(StyledButton,{onClick:()=>{// tokenFunc2(tokenName, ListData[0])\n// onDismiss()\n// setSelectButton((ListData[0]?.name)?.toUpperCase())\n},children:\"Mint\"})]})});}","map":{"version":3,"names":["React","useState","Web3","ToastContainer","toast","useTranslation","Button","useModal","styled","CoinsModal","AutoColumn","getNetwork","setupNetwork2","setupNetwork1","jsx","_jsx","jsxs","_jsxs","SlippageError","StyledButton","_templateObject","_taggedTemplateLiteral","SlippageTabs","slippageInput","setSlippageInput","selectButton","setSelectButton","currentChain","setCurrentChain","chainChanged","setChainChanged","getNetwork1","setGetNetwork1","initToken","setInitToken","networkListCross","setGetNetworkListCross","ethereum","window","outerHtmlElement","on","_chainId","chain","web3","eth","getChainId","t","showBalance","setShowBalance","notifyEth","warning","position","autoClose","closeOnClick","networkSelect1","tokenName","selectNetwork","name","console","log","tokenRefresh","onPresentNetworkModal","tokenFunc2","ListData","setChain","gap","children","className","style","backgroundColor","onClick"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/views/mintModal/TransactionSettings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport usePoll from 'react-use-poll';\nimport Web3 from \"web3\";\nimport axios from 'axios';\nimport { isEmpty } from 'lodash';\nimport {  ToastContainer, toast } from 'react-toastify';\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Button, Input, Flex, Grid, useModal } from 'toolkit/uikit'\nimport styled from 'styled-components'\nimport {TokenInjectedModalProps } from '../../toolkit/uikit/widgets/TokenModal'\nimport CoinsModal from '../coinsModal/CoinsModal'\nimport CoinsSelectModal from '../coinsSelectModal/CoinsSelectModal'\n\n\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { polarcontractAddress, polarABI, joePairPolar} from '../../Abi/avalancheSwap/polarConfig'\nimport { getTokenImage, getNetwork } from './avalancheutils'\nimport { setupNetwork2, setupNetwork1 } from '../../utils/wallet'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\n// enum DeadlineError {\n//   InvalidInput = 'InvalidInput',\n// }\n\nconst StyledButton = styled(Button)`\n \n  width: 85px !important;\n  height: 32px !important;\n  border-radius: 8px !important;\n  margin-right: 10px !important;\n`\ninterface simpleInt {\n  id: number;\n  text: string;\n  icon: string;\n  tokenAddress: string;\n  name: string;\n  balance: string;\n  photoUrl: string;\n}\n\ninterface simp {\n  tokenAddress: string,\n  balance : string\n}\n\n\n\ntype simpleType = simpleInt[];\ntype simpType = simp[];\nexport interface SlippageTabsProps extends TokenInjectedModalProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  setSlippage?: (value: number | ((prevVar: number) => number)) => void;\n  tokenFunc2?: CallableFunction;\n  ListData?: simpleType;\n  tokenName?: string;\n  setChain?: string;\n  account?: string;\n  balList?: simpType;\n  setChain2?: string;\n  order?: boolean;\n  usdtToken?: simpleInt ;\n  usdcToken?: simpleInt ;\n\n}\n\nexport default function SlippageTabs() {\n  const [slippageInput, setSlippageInput] = useState('')\n\n  const [selectButton, setSelectButton] = useState('None')\n\n  const [currentChain, setCurrentChain] = useState(0)\n\n  const [chainChanged, setChainChanged] = useState(false)\n\n  const [getNetwork1, setGetNetwork1] = useState(\"None\")\n\n  const [initToken, setInitToken] = useState(false)\n\n  const [networkListCross, setGetNetworkListCross] = useState([\n    {\n        \"id\": 1,\n        \"name\": \"bsc\",\n        \"stargatechainid\": 102,\n        \"isCrossSwapEnabled\": true,\n        \"isChainActive\": true\n    }\n    // {\n    //     \"id\": 10,\n    //     \"name\": \"ethereum\",\n    //     \"stargatechainid\": 101,\n    //     \"isCrossSwapEnabled\": true,\n    //     \"isChainActive\": true\n    // },\n    // {\n    //     \"id\": 4,\n    //     \"name\": \"avalanche\",\n    //     \"stargatechainid\": 106,\n    //     \"isCrossSwapEnabled\": true,\n    //     \"isChainActive\": true\n    // },\n    // {\n    //     \"id\": 6,\n    //     \"name\": \"polygon\",\n    //     \"stargatechainid\": 109,\n    //     \"isCrossSwapEnabled\": true,\n    //     \"isChainActive\": true\n    // }\n  ] )\n\n\n  const { ethereum  } = window;\n  if(ethereum) {\n    const outerHtmlElement: any = ethereum;\n    outerHtmlElement.on(\"chainChanged\", async (_chainId) => {\n     setChainChanged(!chainChanged)\n     const chain = await web3.eth.getChainId()\n     setCurrentChain(chain)\n   \n   });\n   }\n\n  \n\n  \n  \n\n  // const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n // const { account } = useWeb3React()\n  const web3 = new Web3(window.ethereum as any)\n  const [showBalance, setShowBalance] = useState(false)\n\n\n  const notifyEth = () => {\n    \n    toast.warning('Please connect to ethereum network !', {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      closeOnClick: true,\n      });      \n     // errorSound.play()\n  };\n  \n\n  const networkSelect1 = async (tokenName,selectNetwork) =>{\n\n\n\n\n  \n      setGetNetwork1(selectNetwork?.name)\n   \n  \n \n      if(selectNetwork?.name === \"bsc\"){\n         setupNetwork1(56)\n      } else if (selectNetwork?.name === \"avalanche\"){\n        setupNetwork2()\n      } else if (selectNetwork?.name === \"polygon\"){\n        setupNetwork1(137)\n      }\n      else if (selectNetwork?.name === \"ethereum\"){\n        console.log('currentchain',currentChain)\n        if(currentChain !== 1){\n        notifyEth()\n        }\n        setupNetwork1(1)\n      }\n      else if (selectNetwork?.name === \"fantom\"){\n        setupNetwork1(250)\n      } else if (selectNetwork?.name === \"optimism\"){\n        setupNetwork1(10)\n      } else if (selectNetwork?.name === \"arbitrum\"){\n        setupNetwork1(42161)\n      }\n      \n    \n  \n  \n  \n  }\n\n  const tokenRefresh = () => {\n    console.log(\"hello\")\n      }\n    \n  \n\n\n  const [onPresentNetworkModal] =  useModal(<CoinsModal tokenFunc2={networkSelect1} ListData={networkListCross} tokenName=\"token1\" setInitToken={setInitToken} initToken={initToken} tokenRefresh={tokenRefresh} setChain=\"avax\" /> )\n\n // const [onPresentSettingsModal1] = useModal(<CoinsSelectModal ListData={(token1List)?.slice(0,7)} tokenName=\"token1\" tokenFunc2={tokenFunc1} setChain={getNetwork1} setChain2={getNetwork2} account={account} balList={tokenBal} order={order} usdcToken={usdcToken} usdtToken={usdtToken}/>)\n  return (\n    \n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n      <ToastContainer/>\n         \n            <div className=\"d-flex flex-row justify-content-between\" >\n              \n            <div style={{backgroundColor:\"#292929\"}} onClick={onPresentNetworkModal}>\n              {getNetwork(getNetwork1)}      \n              </div>\n        \n\n          {/* <div onClick={onPresentSettingsModal1} >\n              {getTokenImage(token2Object)}      \n              </div> */}\n            \n            </div>\n            <StyledButton\n              onClick={() => {\n                // tokenFunc2(tokenName, ListData[0])\n                // onDismiss()\n                // setSelectButton((ListData[0]?.name)?.toUpperCase())\n              }}\n              \n            >\n              Mint\n            </StyledButton>\n\n            \n           \n    \n   \n       \n      </AutoColumn>\n\n  \n    </AutoColumn>\n  )\n}\n"],"mappings":"yKAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAmB,OAAO,CAGlD,MAAO,CAAAC,IAAI,KAAM,MAAM,CAGvB,OAAUC,cAAc,CAAEC,KAAK,KAAQ,gBAAgB,CACvD,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAAeC,MAAM,CAAqBC,QAAQ,KAAQ,eAAe,CACzE,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAEtC,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CAKjD,OAASC,UAAU,KAAQ,gCAAgC,CAG3D,OAAwBC,UAAU,KAAQ,kBAAkB,CAC5D,OAASC,aAAa,CAAEC,aAAa,KAAQ,oBAAoB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,4BAE5D,CAAAC,aAAa,uBAAbA,aAAa,EAAbA,aAAa,gCAAbA,aAAa,wBAAbA,aAAa,gCAAb,CAAAA,aAAa,GAAbA,aAAa,MAMlB;AACA;AACA;AAEA,KAAM,CAAAC,YAAY,CAAGX,MAAM,CAACF,MAAM,CAAC,CAAAc,eAAA,GAAAA,eAAA,CAAAC,sBAAA,wIAMlC,CAqCD,cAAe,SAAS,CAAAC,YAAYA,CAAA,CAAG,CACrC,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAEtD,KAAM,CAACwB,YAAY,CAAEC,eAAe,CAAC,CAAGzB,QAAQ,CAAC,MAAM,CAAC,CAExD,KAAM,CAAC0B,YAAY,CAAEC,eAAe,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CAEnD,KAAM,CAAC4B,YAAY,CAAEC,eAAe,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAEvD,KAAM,CAAC8B,WAAW,CAAEC,cAAc,CAAC,CAAG/B,QAAQ,CAAC,MAAM,CAAC,CAEtD,KAAM,CAACgC,SAAS,CAAEC,YAAY,CAAC,CAAGjC,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAACkC,gBAAgB,CAAEC,sBAAsB,CAAC,CAAGnC,QAAQ,CAAC,CAC1D,CACI,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,KAAK,CACb,iBAAiB,CAAE,GAAG,CACtB,oBAAoB,CAAE,IAAI,CAC1B,eAAe,CAAE,IACrB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACA,CAAC,CAGH,KAAM,CAAEoC,QAAU,CAAC,CAAGC,MAAM,CAC5B,GAAGD,QAAQ,CAAE,CACX,KAAM,CAAAE,gBAAqB,CAAGF,QAAQ,CACtCE,gBAAgB,CAACC,EAAE,CAAC,cAAc,CAAE,KAAO,CAAAC,QAAQ,EAAK,CACvDX,eAAe,CAAC,CAACD,YAAY,CAAC,CAC9B,KAAM,CAAAa,KAAK,CAAG,KAAM,CAAAC,IAAI,CAACC,GAAG,CAACC,UAAU,CAAC,CAAC,CACzCjB,eAAe,CAACc,KAAK,CAAC,CAExB,CAAC,CAAC,CACF,CAOD;AAEA,KAAM,CAAEI,CAAE,CAAC,CAAGzC,cAAc,CAAC,CAAC,CAC/B;AACC,KAAM,CAAAsC,IAAI,CAAG,GAAI,CAAAzC,IAAI,CAACoC,MAAM,CAACD,QAAe,CAAC,CAC7C,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAG/C,QAAQ,CAAC,KAAK,CAAC,CAGrD,KAAM,CAAAgD,SAAS,CAAGA,CAAA,GAAM,CAEtB7C,KAAK,CAAC8C,OAAO,CAAC,sCAAsC,CAAE,CACpDC,QAAQ,CAAE,cAAc,CACxBC,SAAS,CAAE,IAAI,CACfC,YAAY,CAAE,IACd,CAAC,CAAC,CACH;AACH,CAAC,CAGD,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAOC,SAAS,CAACC,aAAa,GAAI,CAMrDxB,cAAc,CAACwB,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,CAAC,CAInC,GAAG,CAAAD,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,IAAK,KAAK,CAAC,CAC9B5C,aAAa,CAAC,EAAE,CAAC,CACpB,CAAC,IAAM,IAAI,CAAA2C,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,IAAK,WAAW,CAAC,CAC7C7C,aAAa,CAAC,CAAC,CACjB,CAAC,IAAM,IAAI,CAAA4C,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,IAAK,SAAS,CAAC,CAC3C5C,aAAa,CAAC,GAAG,CAAC,CACpB,CAAC,IACI,IAAI,CAAA2C,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,IAAK,UAAU,CAAC,CAC1CC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAChC,YAAY,CAAC,CACxC,GAAGA,YAAY,GAAK,CAAC,CAAC,CACtBsB,SAAS,CAAC,CAAC,CACX,CACApC,aAAa,CAAC,CAAC,CAAC,CAClB,CAAC,IACI,IAAI,CAAA2C,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,IAAK,QAAQ,CAAC,CACxC5C,aAAa,CAAC,GAAG,CAAC,CACpB,CAAC,IAAM,IAAI,CAAA2C,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,IAAK,UAAU,CAAC,CAC5C5C,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,IAAM,IAAI,CAAA2C,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEC,IAAI,IAAK,UAAU,CAAC,CAC5C5C,aAAa,CAAC,KAAK,CAAC,CACtB,CAMJ,CAAC,CAED,KAAM,CAAA+C,YAAY,CAAGA,CAAA,GAAM,CACzBF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAClB,CAAC,CAKL,KAAM,CAACE,qBAAqB,CAAC,CAAItD,QAAQ,cAACQ,IAAA,CAACN,UAAU,EAACqD,UAAU,CAAER,cAAe,CAACS,QAAQ,CAAE5B,gBAAiB,CAACoB,SAAS,CAAC,QAAQ,CAACrB,YAAY,CAAEA,YAAa,CAACD,SAAS,CAAEA,SAAU,CAAC2B,YAAY,CAAEA,YAAa,CAACI,QAAQ,CAAC,MAAM,CAAE,CAAE,CAAC,CAEpO;AACC,mBAEEjD,IAAA,CAACL,UAAU,EAACuD,GAAG,CAAC,IAAI,CAAAC,QAAA,cAClBjD,KAAA,CAACP,UAAU,EAACuD,GAAG,CAAC,IAAI,CAAAC,QAAA,eACpBnD,IAAA,CAACZ,cAAc,GAAC,CAAC,cAEXY,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAD,QAAA,cAExDnD,IAAA,QAAKqD,KAAK,CAAE,CAACC,eAAe,CAAC,SAAS,CAAE,CAACC,OAAO,CAAET,qBAAsB,CAAAK,QAAA,CACrEvD,UAAU,CAACoB,WAAW,CAAC,CACnB,CAAC,CAOH,CAAC,cACNhB,IAAA,CAACI,YAAY,EACXmD,OAAO,CAAEA,CAAA,GAAM,CACb;AACA;AACA;AAAA,CACA,CAAAJ,QAAA,CAEH,MAED,CAAc,CAAC,EAOT,CAAC,CAGH,CAAC,CAEjB","ignoreList":[]},"metadata":{},"sourceType":"module"}