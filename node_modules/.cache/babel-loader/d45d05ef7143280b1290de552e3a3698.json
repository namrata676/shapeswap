{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addTransaction, checkedTransaction, clearAllTransactions, finalizeTransaction } from './actions';\nconst now = () => new Date().getTime();\nexport const initialState = {};\nexport default createReducer(initialState, builder => builder.addCase(addTransaction, (transactions, _ref) => {\n  var _transactions$chainId, _transactions$chainId2;\n  let {\n    payload: {\n      chainId,\n      from,\n      hash,\n      approval,\n      summary,\n      claim\n    }\n  } = _ref;\n  if ((_transactions$chainId = transactions[chainId]) !== null && _transactions$chainId !== void 0 && _transactions$chainId[hash]) {\n    throw Error('Attempted to add existing transaction.');\n  }\n  const txs = (_transactions$chainId2 = transactions[chainId]) !== null && _transactions$chainId2 !== void 0 ? _transactions$chainId2 : {};\n  txs[hash] = {\n    hash,\n    approval,\n    summary,\n    claim,\n    from,\n    addedTime: now()\n  };\n  transactions[chainId] = txs;\n}).addCase(clearAllTransactions, (transactions, _ref2) => {\n  let {\n    payload: {\n      chainId\n    }\n  } = _ref2;\n  if (!transactions[chainId]) return;\n  transactions[chainId] = {};\n}).addCase(checkedTransaction, (transactions, _ref3) => {\n  var _transactions$chainId3;\n  let {\n    payload: {\n      chainId,\n      hash,\n      blockNumber\n    }\n  } = _ref3;\n  const tx = (_transactions$chainId3 = transactions[chainId]) === null || _transactions$chainId3 === void 0 ? void 0 : _transactions$chainId3[hash];\n  if (!tx) {\n    return;\n  }\n  if (!tx.lastCheckedBlockNumber) {\n    tx.lastCheckedBlockNumber = blockNumber;\n  } else {\n    tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\n  }\n}).addCase(finalizeTransaction, (transactions, _ref4) => {\n  var _transactions$chainId4;\n  let {\n    payload: {\n      hash,\n      chainId,\n      receipt\n    }\n  } = _ref4;\n  const tx = (_transactions$chainId4 = transactions[chainId]) === null || _transactions$chainId4 === void 0 ? void 0 : _transactions$chainId4[hash];\n  if (!tx) {\n    return;\n  }\n  tx.receipt = receipt;\n  tx.confirmedTime = now();\n}));","map":{"version":3,"names":["createReducer","addTransaction","checkedTransaction","clearAllTransactions","finalizeTransaction","now","Date","getTime","initialState","builder","addCase","transactions","payload","chainId","from","hash","approval","summary","claim","Error","txs","addedTime","blockNumber","tx","lastCheckedBlockNumber","Math","max","receipt","confirmedTime"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/transactions/reducer.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SACEC,cAAc,EACdC,kBAAkB,EAClBC,oBAAoB,EACpBC,mBAAmB,QAEd,WAAW;AAElB,MAAMC,GAAG,GAAG,MAAM,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;AAoBtC,OAAO,MAAMC,YAA8B,GAAG,CAAC,CAAC;AAEhD,eAAeR,aAAa,CAACQ,YAAY,EAAGC,OAAO,IACjDA,OAAO,CACJC,OAAO,CAACT,cAAc,EAAE,CAACU,YAAY,WAAqE;EAAA;EAAA,IAAnE;IAAEC,OAAO,EAAE;MAAEC,OAAO;MAAEC,IAAI;MAAEC,IAAI;MAAEC,QAAQ;MAAEC,OAAO;MAAEC;IAAM;EAAE,CAAC;EACpG,6BAAIP,YAAY,CAACE,OAAO,CAAC,kDAArB,sBAAwBE,IAAI,CAAC,EAAE;IACjC,MAAMI,KAAK,CAAC,wCAAwC,CAAC;EACvD;EACA,MAAMC,GAAG,6BAAGT,YAAY,CAACE,OAAO,CAAC,2EAAI,CAAC,CAAC;EACvCO,GAAG,CAACL,IAAI,CAAC,GAAG;IAAEA,IAAI;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,KAAK;IAAEJ,IAAI;IAAEO,SAAS,EAAEhB,GAAG;EAAG,CAAC;EACtEM,YAAY,CAACE,OAAO,CAAC,GAAGO,GAAG;AAC7B,CAAC,CAAC,CACDV,OAAO,CAACP,oBAAoB,EAAE,CAACQ,YAAY,YAA+B;EAAA,IAA7B;IAAEC,OAAO,EAAE;MAAEC;IAAQ;EAAE,CAAC;EACpE,IAAI,CAACF,YAAY,CAACE,OAAO,CAAC,EAAE;EAC5BF,YAAY,CAACE,OAAO,CAAC,GAAG,CAAC,CAAC;AAC5B,CAAC,CAAC,CACDH,OAAO,CAACR,kBAAkB,EAAE,CAACS,YAAY,YAAkD;EAAA;EAAA,IAAhD;IAAEC,OAAO,EAAE;MAAEC,OAAO;MAAEE,IAAI;MAAEO;IAAY;EAAE,CAAC;EACrF,MAAMC,EAAE,6BAAGZ,YAAY,CAACE,OAAO,CAAC,2DAArB,uBAAwBE,IAAI,CAAC;EACxC,IAAI,CAACQ,EAAE,EAAE;IACP;EACF;EACA,IAAI,CAACA,EAAE,CAACC,sBAAsB,EAAE;IAC9BD,EAAE,CAACC,sBAAsB,GAAGF,WAAW;EACzC,CAAC,MAAM;IACLC,EAAE,CAACC,sBAAsB,GAAGC,IAAI,CAACC,GAAG,CAACJ,WAAW,EAAEC,EAAE,CAACC,sBAAsB,CAAC;EAC9E;AACF,CAAC,CAAC,CACDd,OAAO,CAACN,mBAAmB,EAAE,CAACO,YAAY,YAA8C;EAAA;EAAA,IAA5C;IAAEC,OAAO,EAAE;MAAEG,IAAI;MAAEF,OAAO;MAAEc;IAAQ;EAAE,CAAC;EAClF,MAAMJ,EAAE,6BAAGZ,YAAY,CAACE,OAAO,CAAC,2DAArB,uBAAwBE,IAAI,CAAC;EACxC,IAAI,CAACQ,EAAE,EAAE;IACP;EACF;EACAA,EAAE,CAACI,OAAO,GAAGA,OAAO;EACpBJ,EAAE,CAACK,aAAa,GAAGvB,GAAG,EAAE;AAC1B,CAAC,CAAC,CACL"},"metadata":{},"sourceType":"module"}