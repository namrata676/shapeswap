{"ast":null,"code":"import{Contract}from'@ethersproject/contracts';import{getAddress}from'@ethersproject/address';import{AddressZero}from'@ethersproject/constants';import{BigNumber}from'@ethersproject/bignumber';import{abi as IUniswapV2Router02ABI}from'@uniswap/v2-periphery/build/IUniswapV2Router02.json';import{ChainId,JSBI,Percent,Token,ETHER}from'toolkit/sdk';import{ROUTER_ADDRESS}from'../config/constants';import{BASE_BSC_SCAN_URLS}from'../config';// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value){try{return getAddress(value);}catch(_unused){return false;}}export function getBscScanLink(data,type){let chainId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ChainId.MAINNET;switch(type){case'transaction':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/tx/\").concat(data);}case'token':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/token/\").concat(data);}case'block':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/block/\").concat(data);}case'countdown':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/block/countdown/\").concat(data);}default:{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/address/\").concat(data);}}}// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address){let chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;const parsed=isAddress(address);if(!parsed){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return\"\".concat(parsed.substring(0,chars+2),\"...\").concat(parsed.substring(42-chars));}// add 10%\nexport function calculateGasMargin(value){return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000));}// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num){return new Percent(JSBI.BigInt(num),JSBI.BigInt(10000));}export function calculateSlippageAmount(value,slippage){if(slippage<0||slippage>10000){throw Error(\"Unexpected slippage value: \".concat(slippage));}return[JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000-slippage)),JSBI.BigInt(10000)),JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000+slippage)),JSBI.BigInt(10000))];}// account is not optional\nexport function getSigner(library,account){return library.getSigner(account).connectUnchecked();}// account is optional\nexport function getProviderOrSigner(library,account){return account?getSigner(library,account):library;}// account is optional\nexport function getContract(address,ABI,library,account){if(!isAddress(address)||address===AddressZero){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return new Contract(address,ABI,getProviderOrSigner(library,account));}// account is optional\nexport function getRouterContract(_,library,account){return getContract(ROUTER_ADDRESS,IUniswapV2Router02ABI,library,account);}export function escapeRegExp(string){return string.replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&');// $& means the whole matched string\n}export function isTokenOnList(defaultTokens,currency){var _defaultTokens$curren;if(currency===ETHER)return true;return Boolean(currency instanceof Token&&((_defaultTokens$curren=defaultTokens[currency.chainId])===null||_defaultTokens$curren===void 0?void 0:_defaultTokens$curren[currency.address]));}","map":{"version":3,"names":["Contract","getAddress","AddressZero","BigNumber","abi","IUniswapV2Router02ABI","ChainId","JSBI","Percent","Token","ETHER","ROUTER_ADDRESS","BASE_BSC_SCAN_URLS","isAddress","value","_unused","getBscScanLink","data","type","chainId","arguments","length","undefined","MAINNET","concat","shortenAddress","address","chars","parsed","Error","substring","calculateGasMargin","mul","from","add","div","basisPointsToPercent","num","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getSigner","library","account","connectUnchecked","getProviderOrSigner","getContract","ABI","getRouterContract","_","escapeRegExp","string","replace","isTokenOnList","defaultTokens","currency","_defaultTokens$curren","Boolean"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/utils/index.ts"],"sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from 'toolkit/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}