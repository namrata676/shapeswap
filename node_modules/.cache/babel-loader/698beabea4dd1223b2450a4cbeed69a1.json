{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings';\nimport { ETHER, Token, currencyEquals } from 'toolkit/sdk';\nimport { useMemo } from 'react';\nimport { arrayify } from 'ethers/lib/utils';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useDefaultTokenList, useUnsupportedTokenList, useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks';\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks';\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens';\nimport { isAddress } from '../utils';\nimport { useBytes32TokenContract, useTokenContract } from './useContract';\nimport { filterTokens } from '../components/SearchModal/filtering';\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap, includeUserAdded) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const userAddedTokens = useUserAddedTokens();\n  return useMemo(() => {\n    if (!chainId) return {};\n\n    // reduce to just tokens\n    const mapWithoutUrls = {};\n    // const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n    //   newMap[address] = tokenMap[chainId][address].token\n    //   return newMap\n    // }, {})\n\n    if (includeUserAdded) {\n      return userAddedTokens\n      // reduce into all ALL_TOKENS filtered by the current chain\n      .reduce((tokenMap_, token) => {\n        tokenMap_[token.address] = token;\n        return tokenMap_;\n      },\n      // must make a copy because reduce modifies the map, and we do not\n      // want to make a copy in every iteration\n      {\n        ...mapWithoutUrls\n      });\n    }\n    return mapWithoutUrls;\n  }, [chainId, userAddedTokens, includeUserAdded]);\n}\nexport function useDefaultTokens() {\n  const defaultList = useDefaultTokenList();\n  return useTokensFromMap(defaultList, false);\n}\nexport function useAllTokens() {\n  const allTokens = useCombinedActiveList();\n  return useTokensFromMap(allTokens, true);\n}\nexport function useAllInactiveTokens() {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList();\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false);\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens());\n  const filteredInactive = activeTokensAddresses ? Object.keys(inactiveTokens).reduce((newMap, address) => {\n    if (!activeTokensAddresses.includes(address)) {\n      newMap[address] = inactiveTokens[address];\n    }\n    return newMap;\n  }, {}) : inactiveTokens;\n  return filteredInactive;\n}\nexport function useUnsupportedTokens() {\n  const unsupportedTokensMap = useUnsupportedTokenList();\n  return useTokensFromMap(unsupportedTokensMap, false);\n}\nexport function useIsTokenActive(token) {\n  const activeTokens = useAllTokens();\n  if (!activeTokens || !token) {\n    return false;\n  }\n  return !!activeTokens[token.address];\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const inactiveTokens = useAllInactiveTokens();\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined;\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery);\n    return tokens;\n  }, [chainId, inactiveTokens, searchQuery]);\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency) {\n  const userAddedTokens = useUserAddedTokens();\n  if (!currency) {\n    return false;\n  }\n  return !!userAddedTokens.find(token => currencyEquals(currency, token));\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\nfunction parseStringOrBytes32(str, bytes32, defaultValue) {\n  return str && str.length > 0 ? str :\n  // need to check for proper bytes string and valid terminator\n  bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0 ? parseBytes32String(bytes32) : defaultValue;\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tokens = useAllTokens();\n  const address = isAddress(tokenAddress);\n  const tokenContract = useTokenContract(address || undefined, false);\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false);\n  const token = address ? tokens[address] : undefined;\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD);\n  const tokenNameBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'name', undefined, NEVER_RELOAD);\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD);\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD);\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD);\n  return useMemo(() => {\n    if (token) return token;\n    if (!chainId || !address) return undefined;\n    if (decimals.loading || symbol.loading || tokenName.loading) return null;\n    if (decimals.result) {\n      var _symbol$result, _symbolBytes32$result, _tokenName$result, _tokenNameBytes32$res;\n      return new Token(chainId, address, decimals.result[0], parseStringOrBytes32((_symbol$result = symbol.result) === null || _symbol$result === void 0 ? void 0 : _symbol$result[0], (_symbolBytes32$result = symbolBytes32.result) === null || _symbolBytes32$result === void 0 ? void 0 : _symbolBytes32$result[0], 'UNKNOWN'), parseStringOrBytes32((_tokenName$result = tokenName.result) === null || _tokenName$result === void 0 ? void 0 : _tokenName$result[0], (_tokenNameBytes32$res = tokenNameBytes32.result) === null || _tokenNameBytes32$res === void 0 ? void 0 : _tokenNameBytes32$res[0], 'Unknown Token'));\n    }\n    return undefined;\n  }, [address, chainId, decimals.loading, decimals.result, symbol.loading, symbol.result, symbolBytes32.result, token, tokenName.loading, tokenName.result, tokenNameBytes32.result]);\n}\nexport function useCurrency(currencyId) {\n  const isBNB = (currencyId === null || currencyId === void 0 ? void 0 : currencyId.toUpperCase()) === 'BNB';\n  const token = useToken(isBNB ? undefined : currencyId);\n  return isBNB ? ETHER : token;\n}","map":{"version":3,"names":["parseBytes32String","ETHER","Token","currencyEquals","useMemo","arrayify","useActiveWeb3React","useDefaultTokenList","useUnsupportedTokenList","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useBytes32TokenContract","useTokenContract","filterTokens","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","reduce","tokenMap_","token","address","useDefaultTokens","defaultList","useAllTokens","allTokens","useAllInactiveTokens","inactiveTokensMap","inactiveTokens","activeTokensAddresses","Object","keys","filteredInactive","newMap","includes","useUnsupportedTokens","unsupportedTokensMap","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","undefined","tokens","values","useIsUserAddedToken","currency","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","_symbol$result","_symbolBytes32$result","_tokenName$result","_tokenNameBytes32$res","useCurrency","currencyId","isBNB","toUpperCase"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/hooks/Tokens.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from 'toolkit/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = {};\n    // const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n    //   newMap[address] = tokenMap[chainId][address].token\n    //   return newMap\n    // }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n      if (!activeTokensAddresses.includes(address)) {\n        newMap[address] = inactiveTokens[address]\n      }\n      return newMap\n    }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n      ? parseBytes32String(bytes32)\n      : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,wBAAwB;AAC3D,SAAmBC,KAAK,EAAEC,KAAK,EAAEC,cAAc,QAAQ,aAAa;AACpE,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,kBAAkB,MAAM,0BAA0B;AACzD,SAEEC,mBAAmB,EACnBC,uBAAuB,EACvBC,qBAAqB,EACrBC,uBAAuB,QAClB,sBAAsB;AAE7B,SAASC,YAAY,EAAEC,mBAAmB,QAAQ,0BAA0B;AAC5E,OAAOC,kBAAkB,MAAM,wCAAwC;AACvE,SAASC,SAAS,QAAQ,UAAU;AAEpC,SAASC,uBAAuB,EAAEC,gBAAgB,QAAQ,eAAe;AACzE,SAASC,YAAY,QAAQ,qCAAqC;;AAElE;AACA,SAASC,gBAAgBA,CAACC,QAAyB,EAAEC,gBAAyB,EAAgC;EAC5G,MAAM;IAAEC;EAAQ,CAAC,GAAGf,kBAAkB,CAAC,CAAC;EACxC,MAAMgB,eAAe,GAAGT,kBAAkB,CAAC,CAAC;EAE5C,OAAOT,OAAO,CAAC,MAAM;IACnB,IAAI,CAACiB,OAAO,EAAE,OAAO,CAAC,CAAC;;IAEvB;IACA,MAAME,cAAc,GAAG,CAAC,CAAC;IACzB;IACA;IACA;IACA;;IAEA,IAAIH,gBAAgB,EAAE;MACpB,OACEE;MACE;MAAA,CACCE,MAAM,CACL,CAACC,SAAS,EAAEC,KAAK,KAAK;QACpBD,SAAS,CAACC,KAAK,CAACC,OAAO,CAAC,GAAGD,KAAK;QAChC,OAAOD,SAAS;MAClB,CAAC;MACD;MACA;MACA;QAAE,GAAGF;MAAe,CACtB,CAAC;IAEP;IAEA,OAAOA,cAAc;EACvB,CAAC,EAAE,CAACF,OAAO,EAAEC,eAAe,EAAEF,gBAAgB,CAAC,CAAC;AAClD;AAEA,OAAO,SAASQ,gBAAgBA,CAAA,EAAiC;EAC/D,MAAMC,WAAW,GAAGtB,mBAAmB,CAAC,CAAC;EACzC,OAAOW,gBAAgB,CAACW,WAAW,EAAE,KAAK,CAAC;AAC7C;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAiC;EAC3D,MAAMC,SAAS,GAAGtB,qBAAqB,CAAC,CAAC;EACzC,OAAOS,gBAAgB,CAACa,SAAS,EAAE,IAAI,CAAC;AAC1C;AAEA,OAAO,SAASC,oBAAoBA,CAAA,EAAiC;EACnE;EACA,MAAMC,iBAAiB,GAAGvB,uBAAuB,CAAC,CAAC;EACnD,MAAMwB,cAAc,GAAGhB,gBAAgB,CAACe,iBAAiB,EAAE,KAAK,CAAC;;EAEjE;EACA,MAAME,qBAAqB,GAAGC,MAAM,CAACC,IAAI,CAACP,YAAY,CAAC,CAAC,CAAC;EACzD,MAAMQ,gBAAgB,GAAGH,qBAAqB,GAC1CC,MAAM,CAACC,IAAI,CAACH,cAAc,CAAC,CAACV,MAAM,CAA+B,CAACe,MAAM,EAAEZ,OAAO,KAAK;IACtF,IAAI,CAACQ,qBAAqB,CAACK,QAAQ,CAACb,OAAO,CAAC,EAAE;MAC5CY,MAAM,CAACZ,OAAO,CAAC,GAAGO,cAAc,CAACP,OAAO,CAAC;IAC3C;IACA,OAAOY,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC,GACJL,cAAc;EAElB,OAAOI,gBAAgB;AACzB;AAEA,OAAO,SAASG,oBAAoBA,CAAA,EAAiC;EACnE,MAAMC,oBAAoB,GAAGlC,uBAAuB,CAAC,CAAC;EACtD,OAAOU,gBAAgB,CAACwB,oBAAoB,EAAE,KAAK,CAAC;AACtD;AAEA,OAAO,SAASC,gBAAgBA,CAACjB,KAA+B,EAAW;EACzE,MAAMkB,YAAY,GAAGd,YAAY,CAAC,CAAC;EAEnC,IAAI,CAACc,YAAY,IAAI,CAAClB,KAAK,EAAE;IAC3B,OAAO,KAAK;EACd;EAEA,OAAO,CAAC,CAACkB,YAAY,CAAClB,KAAK,CAACC,OAAO,CAAC;AACtC;;AAEA;AACA,OAAO,SAASkB,sBAAsBA,CAACC,WAAmB,EAAuB;EAC/E,MAAM;IAAEzB;EAAQ,CAAC,GAAGf,kBAAkB,CAAC,CAAC;EACxC,MAAM4B,cAAc,GAAGF,oBAAoB,CAAC,CAAC;EAE7C,OAAO5B,OAAO,CAAC,MAAM;IACnB,IAAI,CAACiB,OAAO,IAAIyB,WAAW,KAAK,EAAE,EAAE;MAClC,OAAOC,SAAS;IAClB;IACA,MAAMC,MAAM,GAAG/B,YAAY,CAACmB,MAAM,CAACa,MAAM,CAACf,cAAc,CAAC,EAAEY,WAAW,CAAC;IACvE,OAAOE,MAAM;EACf,CAAC,EAAE,CAAC3B,OAAO,EAAEa,cAAc,EAAEY,WAAW,CAAC,CAAC;AAC5C;;AAEA;AACA,OAAO,SAASI,mBAAmBA,CAACC,QAAqC,EAAW;EAClF,MAAM7B,eAAe,GAAGT,kBAAkB,CAAC,CAAC;EAE5C,IAAI,CAACsC,QAAQ,EAAE;IACb,OAAO,KAAK;EACd;EAEA,OAAO,CAAC,CAAC7B,eAAe,CAAC8B,IAAI,CAAE1B,KAAK,IAAKvB,cAAc,CAACgD,QAAQ,EAAEzB,KAAK,CAAC,CAAC;AAC3E;;AAEA;AACA,MAAM2B,aAAa,GAAG,qBAAqB;AAE3C,SAASC,oBAAoBA,CAACC,GAAuB,EAAEC,OAA2B,EAAEC,YAAoB,EAAU;EAChH,OAAOF,GAAG,IAAIA,GAAG,CAACG,MAAM,GAAG,CAAC,GACxBH,GAAG;EACH;EACFC,OAAO,IAAIH,aAAa,CAACM,IAAI,CAACH,OAAO,CAAC,IAAInD,QAAQ,CAACmD,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GACjExD,kBAAkB,CAACwD,OAAO,CAAC,GAC3BC,YAAY;AACpB;;AAEA;AACA;AACA;AACA,OAAO,SAASG,QAAQA,CAACC,YAAqB,EAA4B;EACxE,MAAM;IAAExC;EAAQ,CAAC,GAAGf,kBAAkB,CAAC,CAAC;EACxC,MAAM0C,MAAM,GAAGlB,YAAY,CAAC,CAAC;EAE7B,MAAMH,OAAO,GAAGb,SAAS,CAAC+C,YAAY,CAAC;EAEvC,MAAMC,aAAa,GAAG9C,gBAAgB,CAACW,OAAO,IAAIoB,SAAS,EAAE,KAAK,CAAC;EACnE,MAAMgB,oBAAoB,GAAGhD,uBAAuB,CAACY,OAAO,IAAIoB,SAAS,EAAE,KAAK,CAAC;EACjF,MAAMrB,KAAwB,GAAGC,OAAO,GAAGqB,MAAM,CAACrB,OAAO,CAAC,GAAGoB,SAAS;EAEtE,MAAMiB,SAAS,GAAGpD,mBAAmB,CAACc,KAAK,GAAGqB,SAAS,GAAGe,aAAa,EAAE,MAAM,EAAEf,SAAS,EAAEpC,YAAY,CAAC;EACzG,MAAMsD,gBAAgB,GAAGrD,mBAAmB,CAC1Cc,KAAK,GAAGqB,SAAS,GAAGgB,oBAAoB,EACxC,MAAM,EACNhB,SAAS,EACTpC,YACF,CAAC;EACD,MAAMuD,MAAM,GAAGtD,mBAAmB,CAACc,KAAK,GAAGqB,SAAS,GAAGe,aAAa,EAAE,QAAQ,EAAEf,SAAS,EAAEpC,YAAY,CAAC;EACxG,MAAMwD,aAAa,GAAGvD,mBAAmB,CAACc,KAAK,GAAGqB,SAAS,GAAGgB,oBAAoB,EAAE,QAAQ,EAAEhB,SAAS,EAAEpC,YAAY,CAAC;EACtH,MAAMyD,QAAQ,GAAGxD,mBAAmB,CAACc,KAAK,GAAGqB,SAAS,GAAGe,aAAa,EAAE,UAAU,EAAEf,SAAS,EAAEpC,YAAY,CAAC;EAE5G,OAAOP,OAAO,CAAC,MAAM;IACnB,IAAIsB,KAAK,EAAE,OAAOA,KAAK;IACvB,IAAI,CAACL,OAAO,IAAI,CAACM,OAAO,EAAE,OAAOoB,SAAS;IAC1C,IAAIqB,QAAQ,CAACC,OAAO,IAAIH,MAAM,CAACG,OAAO,IAAIL,SAAS,CAACK,OAAO,EAAE,OAAO,IAAI;IACxE,IAAID,QAAQ,CAACE,MAAM,EAAE;MAAA,IAAAC,cAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACnB,OAAO,IAAIxE,KAAK,CACdmB,OAAO,EACPM,OAAO,EACPyC,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,EAClBhB,oBAAoB,EAAAiB,cAAA,GAACL,MAAM,CAACI,MAAM,cAAAC,cAAA,uBAAbA,cAAA,CAAgB,CAAC,CAAC,GAAAC,qBAAA,GAAEL,aAAa,CAACG,MAAM,cAAAE,qBAAA,uBAApBA,qBAAA,CAAuB,CAAC,CAAC,EAAE,SAAS,CAAC,EAC9ElB,oBAAoB,EAAAmB,iBAAA,GAACT,SAAS,CAACM,MAAM,cAAAG,iBAAA,uBAAhBA,iBAAA,CAAmB,CAAC,CAAC,GAAAC,qBAAA,GAAET,gBAAgB,CAACK,MAAM,cAAAI,qBAAA,uBAAvBA,qBAAA,CAA0B,CAAC,CAAC,EAAE,eAAe,CAC3F,CAAC;IACH;IACA,OAAO3B,SAAS;EAClB,CAAC,EAAE,CACDpB,OAAO,EACPN,OAAO,EACP+C,QAAQ,CAACC,OAAO,EAChBD,QAAQ,CAACE,MAAM,EACfJ,MAAM,CAACG,OAAO,EACdH,MAAM,CAACI,MAAM,EACbH,aAAa,CAACG,MAAM,EACpB5C,KAAK,EACLsC,SAAS,CAACK,OAAO,EACjBL,SAAS,CAACM,MAAM,EAChBL,gBAAgB,CAACK,MAAM,CACxB,CAAC;AACJ;AAEA,OAAO,SAASK,WAAWA,CAACC,UAA8B,EAA+B;EACvF,MAAMC,KAAK,GAAG,CAAAD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,WAAW,CAAC,CAAC,MAAK,KAAK;EACjD,MAAMpD,KAAK,GAAGkC,QAAQ,CAACiB,KAAK,GAAG9B,SAAS,GAAG6B,UAAU,CAAC;EACtD,OAAOC,KAAK,GAAG5E,KAAK,GAAGyB,KAAK;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module"}