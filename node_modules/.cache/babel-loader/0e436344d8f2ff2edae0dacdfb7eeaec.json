{"ast":null,"code":"import{EN}from'config/localization/languages';const publicUrl=process.env.PUBLIC_URL;export const LS_KEY='pancakeswap_language';export const fetchLocale=async locale=>{const response=await fetch(\"\".concat(publicUrl,\"/locales/\").concat(locale,\".json\"));const data=await response.json();return data;};export const getLanguageCodeFromLS=()=>{try{const codeFromStorage=localStorage.getItem(LS_KEY);return codeFromStorage||EN.locale;}catch(_unused){return EN.locale;}};","map":{"version":3,"names":["EN","publicUrl","process","env","PUBLIC_URL","LS_KEY","fetchLocale","locale","response","fetch","concat","data","json","getLanguageCodeFromLS","codeFromStorage","localStorage","getItem","_unused"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/contexts/Localization/helpers.ts"],"sourcesContent":["import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n"],"mappings":"AAAA,OAASA,EAAE,KAAQ,+BAA+B,CAElD,KAAM,CAAAC,SAAS,CAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,CAExC,MAAO,MAAM,CAAAC,MAAM,CAAG,sBAAsB,CAE5C,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC3C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIT,SAAS,cAAAS,MAAA,CAAYH,MAAM,SAAO,CAAC,CACnE,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAC,CAED,MAAO,MAAM,CAAAE,qBAAqB,CAAGA,CAAA,GAAM,CACzC,GAAI,CACF,KAAM,CAAAC,eAAe,CAAGC,YAAY,CAACC,OAAO,CAACX,MAAM,CAAC,CAEpD,MAAO,CAAAS,eAAe,EAAId,EAAE,CAACO,MAAM,CACrC,CAAE,MAAAU,OAAA,CAAM,CACN,MAAO,CAAAjB,EAAE,CAACO,MAAM,CAClB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}