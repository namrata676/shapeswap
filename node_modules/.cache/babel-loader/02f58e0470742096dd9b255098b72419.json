{"ast":null,"code":"import{Pair,Token}from'toolkit/sdk';import flatMap from'lodash/flatMap';import{useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{BASES_TO_TRACK_LIQUIDITY_FOR,PINNED_PAIRS}from'config/constants';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useAllTokens}from'hooks/Tokens';import{addSerializedPair,addSerializedToken,removeSerializedToken,updateUserDeadline,updateUserExpertMode,updateUserSlippageTolerance,updateUserSingleHopOnly,muteAudio,unmuteAudio,toggleTheme as toggleThemeAction}from'../actions';import{serializeToken,deserializeToken}from'./helpers';export function useAudioModeManager(){const dispatch=useDispatch();const audioPlay=useSelector(state=>state.user.audioPlay);const toggleSetAudioMode=useCallback(()=>{if(audioPlay){dispatch(muteAudio());}else{dispatch(unmuteAudio());}},[audioPlay,dispatch]);return[audioPlay,toggleSetAudioMode];}export function useIsExpertMode(){return useSelector(state=>state.user.userExpertMode);}export function useExpertModeManager(){const dispatch=useDispatch();const expertMode=useIsExpertMode();const toggleSetExpertMode=useCallback(()=>{dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useThemeManager(){const dispatch=useDispatch();const isDark=useSelector(state=>state.user.isDark);const toggleTheme=useCallback(()=>{dispatch(toggleThemeAction());},[dispatch]);return[isDark,toggleTheme];}export function useUserSingleHopOnly(){const dispatch=useDispatch();const singleHopOnly=useSelector(state=>state.user.userSingleHopOnly);const setSingleHopOnly=useCallback(newSingleHopOnly=>{dispatch(updateUserSingleHopOnly({userSingleHopOnly:newSingleHopOnly}));},[dispatch]);return[singleHopOnly,setSingleHopOnly];}export function useUserSlippageTolerance(){const dispatch=useDispatch();const userSlippageTolerance=useSelector(state=>{return state.user.userSlippageTolerance;});const setUserSlippageTolerance=useCallback(slippage=>{dispatch(updateUserSlippageTolerance({userSlippageTolerance:slippage}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useUserTransactionTTL(){const dispatch=useDispatch();const userDeadline=useSelector(state=>{return state.user.userDeadline;});const setUserDeadline=useCallback(deadline=>{dispatch(updateUserDeadline({userDeadline:deadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){const dispatch=useDispatch();return useCallback(token=>{dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){const dispatch=useDispatch();return useCallback((chainId,address)=>{dispatch(removeSerializedToken({chainId,address}));},[dispatch]);}function serializePair(pair){return{token0:serializeToken(pair.token0),token1:serializeToken(pair.token1)};}export function usePairAdder(){const dispatch=useDispatch();return useCallback(pair=>{dispatch(addSerializedPair({serializedPair:serializePair(pair)}));},[dispatch]);}/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */export function toV2LiquidityToken(_ref){let[tokenA,tokenB]=_ref;return new Token(tokenA.chainId,Pair.getAddress(tokenA,tokenB),18,'Cake-LP','Pancake LPs');}/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */export function useTrackedTokenPairs(){const{chainId}=useActiveWeb3React();const tokens=useAllTokens();// pinned pairs\nconst pinnedPairs=useMemo(()=>{var _PINNED_PAIRS$chainId;return chainId?(_PINNED_PAIRS$chainId=PINNED_PAIRS[chainId])!==null&&_PINNED_PAIRS$chainId!==void 0?_PINNED_PAIRS$chainId:[]:[];},[chainId]);// pairs for every token against every base\nconst generatedPairs=useMemo(()=>chainId?flatMap(Object.keys(tokens),tokenAddress=>{var _BASES_TO_TRACK_LIQUI;const token=tokens[tokenAddress];// for each token on the current chain,\nreturn(// loop though all bases on the current chain\n((_BASES_TO_TRACK_LIQUI=BASES_TO_TRACK_LIQUIDITY_FOR[chainId])!==null&&_BASES_TO_TRACK_LIQUI!==void 0?_BASES_TO_TRACK_LIQUI:[]// to construct pairs of the given token with each base\n).map(base=>{if(base.address===token.address){return null;}return[base,token];}).filter(p=>p!==null));}):[],[tokens,chainId]);// pairs saved by users\nconst savedSerializedPairs=useSelector(_ref2=>{let{user:{pairs}}=_ref2;return pairs;});const userPairs=useMemo(()=>{if(!chainId||!savedSerializedPairs)return[];const forChain=savedSerializedPairs[chainId];if(!forChain)return[];return Object.keys(forChain).map(pairId=>{return[deserializeToken(forChain[pairId].token0),deserializeToken(forChain[pairId].token1)];});},[savedSerializedPairs,chainId]);const combinedList=useMemo(()=>userPairs.concat(generatedPairs).concat(pinnedPairs),[generatedPairs,pinnedPairs,userPairs]);return useMemo(()=>{// dedupes pairs of tokens in the combined list\nconst keyed=combinedList.reduce((memo,_ref3)=>{let[tokenA,tokenB]=_ref3;const sorted=tokenA.sortsBefore(tokenB);const key=sorted?\"\".concat(tokenA.address,\":\").concat(tokenB.address):\"\".concat(tokenB.address,\":\").concat(tokenA.address);if(memo[key])return memo;memo[key]=sorted?[tokenA,tokenB]:[tokenB,tokenA];return memo;},{});return Object.keys(keyed).map(key=>keyed[key]);},[combinedList]);}","map":{"version":3,"names":["Pair","Token","flatMap","useCallback","useMemo","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","removeSerializedToken","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","updateUserSingleHopOnly","muteAudio","unmuteAudio","toggleTheme","toggleThemeAction","serializeToken","deserializeToken","useAudioModeManager","dispatch","audioPlay","state","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","slippage","useUserTransactionTTL","userDeadline","setUserDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","chainId","address","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","_ref","tokenA","tokenB","getAddress","useTrackedTokenPairs","tokens","pinnedPairs","_PINNED_PAIRS$chainId","generatedPairs","Object","keys","tokenAddress","_BASES_TO_TRACK_LIQUI","map","base","filter","p","savedSerializedPairs","_ref2","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","_ref3","sorted","sortsBefore","key"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/user/hooks/index.tsx"],"sourcesContent":["import { Pair, Token } from 'toolkit/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme as toggleThemeAction,\n} from '../actions'\nimport { serializeToken, deserializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}