{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const FAST_INTERVAL=10000;const SLOW_INTERVAL=60000;const RefreshContext=/*#__PURE__*/React.createContext({slow:0,fast:0});// Check if the tab is active in the user browser\nconst useIsBrowserTabActive=()=>{const isBrowserTabActiveRef=useRef(true);useEffect(()=>{const onVisibilityChange=()=>{isBrowserTabActiveRef.current=!document.hidden;};window.addEventListener('visibilitychange',onVisibilityChange);return()=>{window.removeEventListener('visibilitychange',onVisibilityChange);};},[]);return isBrowserTabActiveRef;};// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider=_ref=>{let{children}=_ref;const[slow,setSlow]=useState(0);const[fast,setFast]=useState(0);const isBrowserTabActiveRef=useIsBrowserTabActive();useEffect(()=>{const interval=setInterval(async()=>{if(isBrowserTabActiveRef.current){setFast(prev=>prev+1);}},FAST_INTERVAL);return()=>clearInterval(interval);},[isBrowserTabActiveRef]);useEffect(()=>{const interval=setInterval(async()=>{if(isBrowserTabActiveRef.current){setSlow(prev=>prev+1);}},SLOW_INTERVAL);return()=>clearInterval(interval);},[isBrowserTabActiveRef]);return/*#__PURE__*/_jsx(RefreshContext.Provider,{value:{slow,fast},children:children});};export{RefreshContext,RefreshContextProvider};","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","FAST_INTERVAL","SLOW_INTERVAL","RefreshContext","createContext","slow","fast","useIsBrowserTabActive","isBrowserTabActiveRef","onVisibilityChange","current","document","hidden","window","addEventListener","removeEventListener","RefreshContextProvider","_ref","children","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","value"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/contexts/RefreshContext.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAE1D,KAAM,CAAAC,aAAa,CAAG,KAAK,CAC3B,KAAM,CAAAC,aAAa,CAAG,KAAK,CAE3B,KAAM,CAAAC,cAAc,cAAGR,KAAK,CAACS,aAAa,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAC,CAAC,CAEhE;AACA,KAAM,CAAAC,qBAAqB,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAAC,qBAAqB,CAAGV,MAAM,CAAC,IAAI,CAAC,CAE1CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,kBAAkB,CAAGA,CAAA,GAAM,CAC/BD,qBAAqB,CAACE,OAAO,CAAG,CAACC,QAAQ,CAACC,MAAM,CAClD,CAAC,CAEDC,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,CAAEL,kBAAkB,CAAC,CAE/D,MAAO,IAAM,CACXI,MAAM,CAACE,mBAAmB,CAAC,kBAAkB,CAAEN,kBAAkB,CAAC,CACpE,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAD,qBAAqB,CAC9B,CAAC,CAED;AACA,KAAM,CAAAQ,sBAAsB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1C,KAAM,CAACZ,IAAI,CAAEc,OAAO,CAAC,CAAGvB,QAAQ,CAAC,CAAC,CAAC,CACnC,KAAM,CAACU,IAAI,CAAEc,OAAO,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAC,CACnC,KAAM,CAAAY,qBAAqB,CAAGD,qBAAqB,CAAC,CAAC,CAErDV,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwB,QAAQ,CAAGC,WAAW,CAAC,SAAY,CACvC,GAAId,qBAAqB,CAACE,OAAO,CAAE,CACjCU,OAAO,CAAEG,IAAI,EAAKA,IAAI,CAAG,CAAC,CAAC,CAC7B,CACF,CAAC,CAAEtB,aAAa,CAAC,CACjB,MAAO,IAAMuB,aAAa,CAACH,QAAQ,CAAC,CACtC,CAAC,CAAE,CAACb,qBAAqB,CAAC,CAAC,CAE3BX,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwB,QAAQ,CAAGC,WAAW,CAAC,SAAY,CACvC,GAAId,qBAAqB,CAACE,OAAO,CAAE,CACjCS,OAAO,CAAEI,IAAI,EAAKA,IAAI,CAAG,CAAC,CAAC,CAC7B,CACF,CAAC,CAAErB,aAAa,CAAC,CACjB,MAAO,IAAMsB,aAAa,CAACH,QAAQ,CAAC,CACtC,CAAC,CAAE,CAACb,qBAAqB,CAAC,CAAC,CAE3B,mBAAOR,IAAA,CAACG,cAAc,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAErB,IAAI,CAAEC,IAAK,CAAE,CAAAY,QAAA,CAAEA,QAAQ,CAA0B,CAAC,CAC7F,CAAC,CAED,OAASf,cAAc,CAAEa,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module"}