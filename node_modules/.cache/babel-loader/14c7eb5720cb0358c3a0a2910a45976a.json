{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{getAchievements}from'./helpers';const initialState={data:[]};export const achievementSlice=createSlice({name:'achievements',initialState,reducers:{addAchievement:(state,action)=>{state.data.push(action.payload);},addAchievements:(state,action)=>{state.data=[...state.data,...action.payload];},setAchievements:(state,action)=>{state.data=action.payload;},clearAchievements:state=>{state.data=[];}}});// Actions\nexport const{addAchievement,addAchievements,setAchievements,clearAchievements}=achievementSlice.actions;// Thunks\nexport const fetchAchievements=account=>async dispatch=>{try{const achievements=await getAchievements(account);dispatch(setAchievements(achievements));}catch(error){console.error(error);}};export default achievementSlice.reducer;","map":{"version":3,"names":["createSlice","getAchievements","initialState","data","achievementSlice","name","reducers","addAchievement","state","action","push","payload","addAchievements","setAchievements","clearAchievements","actions","fetchAchievements","account","dispatch","achievements","error","console","reducer"],"sources":["/Users/namratapatel/upwork/SmartFinance-OmniDex/src/state/achievements/index.ts"],"sourcesContent":["import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n"],"mappings":"AAAA,OAASA,WAAW,KAAiC,kBAAkB,CAEvE,OAASC,eAAe,KAAQ,WAAW,CAE3C,KAAM,CAAAC,YAA8B,CAAG,CACrCC,IAAI,CAAE,EACR,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAGJ,WAAW,CAAC,CAC1CK,IAAI,CAAE,cAAc,CACpBH,YAAY,CACZI,QAAQ,CAAE,CACRC,cAAc,CAAEA,CAACC,KAAK,CAAEC,MAAkC,GAAK,CAC7DD,KAAK,CAACL,IAAI,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CACjC,CAAC,CACDC,eAAe,CAAEA,CAACJ,KAAK,CAAEC,MAAoC,GAAK,CAChED,KAAK,CAACL,IAAI,CAAG,CAAC,GAAGK,KAAK,CAACL,IAAI,CAAE,GAAGM,MAAM,CAACE,OAAO,CAAC,CACjD,CAAC,CACDE,eAAe,CAAEA,CAACL,KAAK,CAAEC,MAAoC,GAAK,CAChED,KAAK,CAACL,IAAI,CAAGM,MAAM,CAACE,OAAO,CAC7B,CAAC,CACDG,iBAAiB,CAAGN,KAAK,EAAK,CAC5BA,KAAK,CAACL,IAAI,CAAG,EAAE,CACjB,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEI,cAAc,CAAEK,eAAe,CAAEC,eAAe,CAAEC,iBAAkB,CAAC,CAAGV,gBAAgB,CAACW,OAAO,CAE/G;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAIC,OAAe,EAAK,KAAO,CAAAC,QAAkB,EAAK,CAClF,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAlB,eAAe,CAACgB,OAAO,CAAC,CACnDC,QAAQ,CAACL,eAAe,CAACM,YAAY,CAAC,CAAC,CACzC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACtB,CACF,CAAC,CAED,cAAe,CAAAhB,gBAAgB,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}